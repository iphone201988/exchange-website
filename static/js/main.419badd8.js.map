{
  "version": 3,
  "file": "static/js/main.419badd8.js",
  "mappings": "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",
  "sources": [
    "src/utills/Utills.tsx",
    "src/api/api.tsx",
    "src/components/Common/Banner.tsx",
    "src/components/Common/NavigationBar.tsx",
    "src/utills/Helper.tsx",
    "src/components/Profile.tsx",
    "src/components/Publish.tsx",
    "src/components/Serchbox.tsx",
    "src/utills/ImageCarousel.tsx",
    "src/components/CustomInputText.tsx",
    "src/components/News.tsx",
    "src/screen/Exchange/Exchange.tsx",
    "src/screen/home/Home.tsx",
    "src/utills/CustomInput.tsx",
    "src/screen/Auths/Login.tsx",
    "src/user/Userwall.tsx",
    "src/user/Content.tsx",
    "src/user/User.tsx",
    "src/screen/Auths/Register.tsx",
    "src/screen/Auths/Otp.tsx",
    "src/screen/Auths/Restpassword.tsx",
    "src/screen/Auths/Forgot.tsx",
    "src/components/EditProfile.tsx",
    "src/components/FileTypeModal.tsx",
    "src/components/Togal.tsx",
    "src/components/PublishPost.tsx",
    "src/screen/Exchange/Communities.tsx",
    "src/screen/Exchange/OneToOne.tsx",
    "src/screen/Exchange/CommunityDetail.tsx",
    "src/screen/Exchange/CreateCommunity.tsx",
    "src/screen/Exchange/FollowedCommunity.tsx",
    "src/components/Common/HoverTooltip.tsx",
    "src/screen/Exchange/MyQuesAndAnswer.tsx",
    "src/screen/Exchange/CommunityPostList.tsx",
    "src/screen/Exchange/CommunityBgImage.tsx",
    "src/components/Common/ThreeDotsMenu.tsx",
    "src/screen/profile/FollowUsers.tsx",
    "src/components/ChartAnalytics.tsx",
    "src/navigation/Route.tsx",
    "App.js",
    "webpack/bootstrap",
    "webpack/runtime/chunk loaded",
    "webpack/runtime/compat get default export",
    "webpack/runtime/define property getters",
    "webpack/runtime/global",
    "webpack/runtime/hasOwnProperty shorthand",
    "webpack/runtime/make namespace object",
    "webpack/runtime/node module decorator",
    "webpack/runtime/publicPath",
    "webpack/runtime/jsonp chunk loading",
    "webpack/startup"
  ],
  "sourcesContent": [
    "export const FONTS = {\n  PoppinsRegular: \"poppins.regular\",\n  PoppinsMedium: \"poppins.medium\",\n  PoppinsSemi: \"Poppins-SemiBold\",\n  Playfair: \"PlayfairDisplay-SemiBold\",\n  PoppinsLight: \"Poppins-Light\",\n};\n\nexport const COLORS = {\n  black: \"#222324\",\n  white: \"#F5F7F8\",\n  primeryWhite: \"#FFFFFF\",\n  primary: \"#F1E4C3\",\n  primaryGreen: \"#597E52\",\n  primaryLite: \"#4B8ABA\",\n  lightpurple: \"#9c97c8\",\n  lightsky: \"#C2D1DD\",\n  primarybordercolor: \"#E2E2E2\",\n  primarygraycolor: \"#6F7479\",\n  primaryBackgroundColor: \"#FCFCFC\",\n  maroon: \"#8D0706\",\n  darkbordercolor: \"#6F7479\",\n  lightBlack: \"#424242\",\n  blue: \"#191362\",\n  likeBlue: \"#2b68e3\",\n};\nexport const IMAGES = {\n  // MAIN: require(\"../assets/images/mainL.png\"),\n  // Sadhna: require(\"../assets/images/Sadhna.png\"),\n  // BackBan: require(\"../assets/images/Promotion.png\"),\n  // Time: require(\"../assets/images/time.png\"),\n  Calender: require(\"../assets/images/cal.png\"),\n  // RanImg: require(\"../assets/images/ranImg.png\"),\n  // hunanStruct: require(\"../assets/images/hunanStruct.png\"),\n  // Icone1: require(\"../assets/images/1.png\"),\n  // Icone2: require(\"../assets/images/2.png\"),\n  // Icone3: require(\"../assets/images/3.png\"),\n  // Icone4: require(\"../assets/images/4.png\"),\n  // Icone5: require(\"../assets/images/5.png\"),\n  // Icone6: require(\"../assets/images/6.png\"),\n  // Icone7: require(\"../assets/images/7.png\"),\n  // Icone8: require(\"../assets/images/8.png\"),\n  // Icone9: require(\"../assets/images/9.png\"),\n  // Icone10: require(\"../assets/images/10.png\"),\n  // Icone11: require(\"../assets/images/11.png\"),\n  // Icone12: require(\"../assets/images/12.png\"),\n  // Icone13: require(\"../assets/images/13.png\"),\n  Load: require(\"../assets/images/load.png\"),\n  Close: require(\"../assets/images/close.png\"),\n  ShowP: require(\"../assets/images/showp.png\"),\n  HideP: require(\"../assets/images/hidep.png\"),\n  // Slide: require(\"../assets/images/slide.png\"),\n  // Girl: require(\"../assets/images/girl.png\"),\n  Banner: require(\"../assets/images/banner.png\"),\n  star: require(\"../assets/images/star.png\"),\n  yout: require(\"../assets/images/logos_youtube-icon.png\"),\n  link: require(\"../assets/images/link.png\"),\n  insta: require(\"../assets/images/insta.png\"),\n  facebook: require(\"../assets/images/devicon_facebook.png\"),\n\n  subsCription: require(\"../assets/images/subsCription.png\"),\n  nottification: require(\"../assets/images/nottification.png\"),\n  // noti: require(\"../assets/images/noti.png\"),\n  mess: require(\"../assets/images/mess.png\"),\n  follow: require(\"../assets/images/follow.png\"),\n  beg: require(\"../assets/images/beg.png\"),\n  tip: require(\"../assets/images/tip.png\"),\n  sort: require(\"../assets/images/sort.png\"),\n  publi: require(\"../assets/images/publi.png\"),\n  filltern: require(\"../assets/images/filltern.png\"),\n  pdf: require(\"../assets/images/pdf.png\"),\n  comment: require(\"../assets/images/comment.png\"),\n\n  like: require(\"../assets/images/like.png\"),\n  search: require(\"../assets/images/search.png\"),\n  share: require(\"../assets/images/share.png\"),\n  Exchange: require(\"../assets/images/Exchange.png\"),\n  Exchange1: require(\"../assets/images/Exchange1.png\"),\n  CommImage: require(\"../assets/images/community.png\"),\n  CommImage1: require(\"../assets/images/community1.png\"),\n  CommImage2: require(\"../assets/images/community2.png\"),\n  Commessage: require(\"../assets/images/commessage.png\"),\n  Commpp: require(\"../assets/images/Commpp.png\"),\n  Comnoti: require(\"../assets/images/CommNoti.png\"),\n  ArrowL: require(\"../assets/images/arrowl.png\"),\n  ThreeDots: require(\"../assets/images/ThreeDots.png\"),\n  CommbackImg: require(\"../assets/images/commback.png\"),\n  Plus: require(\"../assets/images/Plus.png\"),\n  Short: require(\"../assets/images/sort1.png\"),\n  ArrowDown: require(\"../assets/images/ArrowDown.png\"),\n  Setting: require(\"../assets/images/setting.png\"),\n  OneByOne: require(\"../assets/images/onebyone.png\"),\n  Commback: require(\"../assets/images/comback.png\"),\n  Calander: require(\"../assets/images/Calander.png\"),\n  Request: require(\"../assets/images/request.png\"),\n  // message: require(\"../assets/images/message.png\"),\n  Dislike: require(\"../assets/images/dislike.png\"),\n  Airoplane: require(\"../assets/images/airiplane.png\"),\n  Grid: require(\"../assets/images/Grid.png\"),\n\n  Gridicon: require(\"../assets/images/Gridicon.png\"),\n\n  Edit: require(\"../assets/images/editing.png\"),\n  FollowingCommunity: require(\"../assets/images/followingCommunity.png\"),\n  fbic: require(\"../assets/images/fbic.png\"),\n\n  heart: require(\"../assets/images/heart.png\"),\n  laughIc: require(\"../assets/images/laughIc.webp\"),\n};\n",
    "//  npx expo export --platform web    build command\n// eas deploy                         deploy command\n\n// export const BASE_URL = \"https://possible-moray-centrally.ngrok-free.app/\";\n\n// export const BASE_URL = \"http://192.168.0.194:8000\"; //Techwin 5G WiFi\nexport const BASE_URL = \"http://192.168.0.153:8001\"; //connect-5G WiFi\n\nexport const ENV = {\n  // BASE_URL: \"http://192.168.0.194:8000\",\n  BASE_URL: \"http://192.168.0.153:8001\", //connect-5G WiFi\n};\n\nexport const API = {\n  // Account\n  LOGIN: `${ENV.BASE_URL}/accounts/login/`,\n  SIGN_UP: `${ENV.BASE_URL}/accounts/signup/`,\n  VERIFIY_OTP: `${ENV.BASE_URL}/accounts/verify-account/`,\n  RESEND_OTP: `${ENV.BASE_URL}/accounts/resend-otp/`,\n  FORGOT_PASSWORD_OTP: `${ENV.BASE_URL}/accounts/password-reset-request/`,\n  VERIFY_FORGOT_PASSWORD_OTP: `${ENV.BASE_URL}/accounts/password-verify-otp/`,\n  UPDATE_FORGOT_PASSWORD: `${ENV.BASE_URL}/accounts/password-update-otp/`,\n  USER_PROFILE: `${ENV.BASE_URL}/accounts/user/`,\n  EDIT_PROFILE: `${ENV.BASE_URL}/accounts/user/`,\n\n  FOLLOW_REQIUEST: `${ENV.BASE_URL}/accounts/follow/`, //add user id\n  FOLLOWING_LIST: `${ENV.BASE_URL}/accounts/following/`,\n  USER_FOLLOWING_LIST: `${ENV.BASE_URL}/accounts/following/`, //add user id\n  FOLLOWER_LIST: `${ENV.BASE_URL}/accounts/follower/`,\n  USER_FOLLOWER_LIST: `${ENV.BASE_URL}/accounts/follower/`, //add user id\n  UN_FOLLOW: `${ENV.BASE_URL}/accounts/unfollow/`,\n  UN_BLOCK_USER: `${ENV.BASE_URL}/accounts/unblock/`,\n  BLOCK_USER: `${ENV.BASE_URL}/accounts/block/`,\n  USER_BLOCK_LIST: `${ENV.BASE_URL}/accounts/blocked-users/`,\n\n  LOGOUT: `${ENV.BASE_URL}/accounts/logout/`,\n\n  //CONTENT\n  USER_CONTENT_LIST: `${ENV.BASE_URL}/content/content/`,\n  OTHER_CONTENT_LIST: `${ENV.BASE_URL}/content/user/`,\n  ALL_USER_CONTENT_LIST: `${ENV.BASE_URL}/content/content-list/`,\n  UPLOAD_CONTENT: `${ENV.BASE_URL}/content/content/`,\n\n  SEARCH_CONTENT: `${ENV.BASE_URL}/content/search-content/?q=`, //Add query to search\n  REACTION_CONTENT: `${ENV.BASE_URL}/content/content-reaction/`, // Add id of post\n  SAVE_CONTENT: `${ENV.BASE_URL}/content/save-content/`,\n  REMOVE_CONTENT: `${ENV.BASE_URL}/content/save-content/`,\n  GET_CONTENT: `${ENV.BASE_URL}/content/save-content/`, // un-used API\n  CREATE_CONTENT_COMMENT: `${ENV.BASE_URL}/content/comment/`,\n  GET_CONTENT_COMMENT: `${ENV.BASE_URL}/content/comment/?content_id=`, // add query content_id\n  CONTENT_COMMENT_REACTION: `${ENV.BASE_URL}/content/comment-reaction/`,\n  DELETE_CONTENT_COMMENT: `${ENV.BASE_URL}/content/comment/`, //add params\n  EDIT_CONTENT_COMMENT: `${ENV.BASE_URL}/content/comment/`, //add params\n  GET_VIDEOS: `${ENV.BASE_URL}/content/tending-reels/`, //add params\n\n  // Exchange\n  JOIN_COMMUNITIES: `${ENV.BASE_URL}/community/join/`,\n  GET_MY_COMMUNITIES: `${ENV.BASE_URL}/community/my-community/`,\n  BEST_COMMUNITIES: `${ENV.BASE_URL}/community/best-communities/`,\n  BEST_CONTRIBUTOR: `${ENV.BASE_URL}/community/best-contributor/`,\n  SEARCH_COMMUNITY: `${ENV.BASE_URL}/community/search-community/?q=`, // add query\n  COMMUNITY_LIST: `${ENV.BASE_URL}/community/community/`, // add params\n\n  CREATE_COMMUNITY: `${ENV.BASE_URL}/community/community/`,\n  MY_FOLLOWED_COMMUNITY: `${ENV.BASE_URL}/community/followed-community/`,\n  ALL_COMMUNITY_LIST: `${ENV.BASE_URL}/community/all-community/`,\n\n  GET_COMMUNITY_REQUEST_QUESTION: `${ENV.BASE_URL}/community/community-request/`, //add id of community\n  GET_COMMUNITY_ANSWER: `${ENV.BASE_URL}/community/community-answer/`, //add id of question\n  GET_COMMUNITY_REQUEST_LIST: `${ENV.BASE_URL}/community/requests-answers/`,\n  CREATE_COMMUNITY_REQUEST_QUESTION: `${ENV.BASE_URL}/community/community-request/`, // add community id\n  CREATE_COMMUNITY_ANSWER: `${ENV.BASE_URL}/community/community-answer/`, // add request id\n  EDIT_COMMUNITY_ANSWER: `${ENV.BASE_URL}/community/manage-answer/`, // add answer id\n  GET_EDITED_COMMUNITY_ANSWER: `${ENV.BASE_URL}/community/manage-answer/`, // add answer id\n  DELETE_COMMUNITY_ANSWER: `${ENV.BASE_URL}/community/manage-answer/`, // add answer id\n  LIKE_UNLIKE_ANSWER: `${ENV.BASE_URL}/community/like-unlike/`, // add answer id\n  MARK_ANS_AS_SOLVED: `${ENV.BASE_URL}/community/mark-accepted/`, //add answer id\n  CREATE_COMMUNITY_POST: `${ENV.BASE_URL}/community/communitypost/`,\n  GET_COMMUNITY_POST: `${ENV.BASE_URL}/community/posts-community/?community_id=`, // add community id\n\n  CREATE_COMMUNITY_POST_COMENT: `${ENV.BASE_URL}/community/comment/`,\n  GET_COMMUNITY_POST_COMENT: `${ENV.BASE_URL}/community/comment/?post_id=`, //add post id\n  EDIT_COMMUNITY_POST_COMENT: `${ENV.BASE_URL}/community/comment/`, //add comment id\n  DELETE_COMMUNITY_POST_COMENT: `${ENV.BASE_URL}/community/comment/`, //add comment id\n  COMMUNITY_POST_COMENT_REACTION: `${ENV.BASE_URL}/community/comment-reaction/`,\n  COMMUNITY_POST_COMENT_REACTION_REMOVE: `${ENV.BASE_URL}/community/comment-reaction/?comment_id=`, // add comment id\n  COMMUNITY_POST_REACTION: `${ENV.BASE_URL}/community/post-reaction/`,\n  SAVE_COMMUNITY_POST: `${ENV.BASE_URL}/community/save-content/`,\n  REMOVE_SAVE_COMMUNITY_POST: `${ENV.BASE_URL}/community/save-content/?post_id=`, //add post id\n  UPDATE_COMMUNITY_BACKGROUND_IMAGE: `${ENV.BASE_URL}/community/community-bg-pic/`, //add community id\n};\n",
    "import React from \"react\";\nimport {\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  Image,\n  useWindowDimensions,\n} from \"react-native\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport { useNavigation } from \"@react-navigation/native\";\n\ntype CommanHeader = {\n  backNavigation?: boolean;\n};\n\nconst Banner: React.FC<CommanHeader> = ({ backNavigation = false }) => {\n  const navigation = useNavigation();\n  const windowWidth = useWindowDimensions().width;\n  const isSmallScreen = windowWidth < 800;\n  const isMobileScreen = windowWidth < 426;\n  return (\n    <TouchableOpacity\n      onPress={() => backNavigation && navigation.goBack()}\n      activeOpacity={backNavigation ? 0.8 : 1}\n      style={[styles.container, { height: isMobileScreen ? 140 : 240 }]}\n    >\n      <Image source={IMAGES.Banner} style={styles.img} />\n      <Text style={[styles.headerText, { fontSize: isMobileScreen ? 24 : 32 }]}>\n        Swiss X-Change\n      </Text>\n    </TouchableOpacity>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    width: \"100%\",\n    borderWidth: 1,\n    borderColor: COLORS.white,\n    borderRadius: 16,\n    alignItems: \"center\",\n    alignSelf: \"center\",\n  },\n  img: {\n    height: \"100%\",\n    width: \"100%\",\n    borderRadius: 16,\n    alignSelf: \"center\",\n  },\n  headerText: {\n    color: COLORS.white,\n    fontFamily: \"PoppinsSemi\",\n    position: \"absolute\",\n    margin: 20,\n    left: 0,\n    fontSize: 32,\n  },\n});\n\nexport default Banner;\n",
    "import { useNavigation } from \"@react-navigation/native\";\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  useWindowDimensions,\n} from \"react-native\";\n\nconst navigationtabs = [\"NewsScreen\", \"ProfileScreen\", \"ExchangeScreen\"];\n\nconst NavigationBar = () => {\n  const navigation = useNavigation<any>();\n\n  const state = navigation.getState();\n  const currentRoute = state.routeNames[0];\n\n  const windowWidth = useWindowDimensions().width;\n  const isSmallScreen = windowWidth < 768;\n  const isMobileScreen = windowWidth < 426;\n  const containerWidth = isMobileScreen ? \"90%\" : isSmallScreen ? \"80%\" : \"60%\";\n\n  return (\n    <View style={[styles.container, { width: containerWidth }]}>\n      {navigationtabs.map((tab) => (\n        <TouchableOpacity\n          key={tab}\n          style={[\n            styles.tabButton,\n            currentRoute === tab.replace(\"Screen\", \"\") &&\n              styles.selectedTabButton,\n          ]}\n          onPress={() => navigation.navigate(tab)}\n        >\n          <Text\n            style={[\n              styles.tabText,\n              currentRoute === tab.replace(\"Screen\", \"\") &&\n                styles.selectedTabText,\n            ]}\n          >\n            {tab.replace(\"Screen\", \"\")}\n          </Text>\n        </TouchableOpacity>\n      ))}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    backgroundColor: \"white\",\n    height: 55,\n    borderBottomEndRadius: 40,\n    borderBottomStartRadius: 40,\n    minWidth: 240,\n    flexDirection: \"row\",\n    justifyContent: \"space-around\",\n    padding: 2,\n  },\n  tabButton: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingVertical: 10,\n    borderBottomEndRadius: 40,\n    borderBottomStartRadius: 40,\n  },\n  selectedTabButton: {\n    backgroundColor: \"#2D2B9B\",\n  },\n  tabText: {\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#000\",\n  },\n  selectedTabText: {\n    color: \"white\",\n  },\n});\n\nexport default NavigationBar;\n",
    "import AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { Alert, Platform } from \"react-native\";\n\n// Access_Token\nexport const getToken = async (): Promise<string | null> => {\n  try {\n    const token = await AsyncStorage.getItem(\"access_token\");\n    console.log(\"CHECK Token:\", token);\n\n    if (!token) {\n      const message = \"Access token not found. Please log in again.\";\n\n      if (Platform.OS === \"web\") {\n        window.alert(`Alert\\n\\n${message}`);\n      } else {\n        Alert.alert(\"Error\", message);\n      }\n\n      return null;\n    }\n\n    return token;\n  } catch (error) {\n    console.error(\"Error retrieving access token:\", error);\n    return null;\n  }\n};\nexport const getData = async (): Promise<string | null> => {\n  try {\n    const data = await AsyncStorage.getItem(\"mainProfile\");\n\n    return data;\n  } catch (error) {\n    console.error(\"Error mainProfile access token:\", error);\n    return null;\n  }\n};\n\n// POST helper\nexport const POST = async (\n  url: string,\n  body?: any,\n  token?: string\n): Promise<any> => {\n  try {\n    const response = await axios.post(url, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n      },\n    });\n\n    console.log(\"response :>> \", response);\n    return response;\n  } catch (error: any) {\n    console.error(\"POST API Error:\", error?.response || error.message);\n    console.log(\"error :>> \", error);\n    throw error?.response?.data || error;\n  }\n};\n\n// GET helper\nexport const GET = async (url: string, token?: string): Promise<any> => {\n  try {\n    const response = await axios.get(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n      },\n    });\n    console.log(\"response get api :>> \", response);\n    if (response.status === 204) {\n      return response;\n    }\n    return response;\n  } catch (error: any) {\n    console.error(\"GET API Error:\", error?.response || error.message);\n    console.log(\"error get API  :>> \", error);\n    throw error?.response?.data || error;\n  }\n};\n\n// PUT helper\nexport const PUT = async (\n  url: string,\n  body?: any,\n  token?: string\n): Promise<any> => {\n  try {\n    const response = await axios.put(url, body, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n      },\n    });\n\n    console.log(\"PUT response :>> \", response);\n    return response;\n  } catch (error: any) {\n    console.error(\"PUT API Error:\", error?.response || error.message);\n    console.log(\"PUT error :>> \", error);\n    throw error?.response?.data || error;\n  }\n};\n\n// DELETE helper\nexport const DELETE = async (url: string, token?: string): Promise<any> => {\n  try {\n    const response = await axios.delete(url, {\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        ...(token ? { Authorization: `Bearer ${token}` } : {}),\n      },\n    });\n\n    console.log(\"DELETE response :>> \", response);\n    return response;\n  } catch (error: any) {\n    console.error(\"DELETE API Error:\", error?.response || error.message);\n    console.log(\"DELETE error :>> \", error);\n    throw error?.response?.data || error;\n  }\n};\n",
    "import {\n  Text,\n  StyleSheet,\n  Dimensions,\n  View,\n  Image,\n  TouchableOpacity,\n  ImageBackground,\n  ScrollView,\n  Pressable,\n  Platform,\n  Alert,\n  Share,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { useIsFocused, useNavigation } from \"@react-navigation/native\";\nimport { BlurView } from \"expo-blur\";\nimport { COLORS, IMAGES } from \"../utills/Utills\";\nimport { API, ENV } from \"../api/api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Banner from \"./Common/Banner\";\nimport NavigationBar from \"./Common/NavigationBar\";\nimport { GET, POST, getData, getToken } from \"../utills/Helper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst Profile = ({ route }) => {\n  const { id } = route.params || {};\n  console.log(\"🚀 ~ Profile ~ id:\", id);\n  const navigation = useNavigation<any>();\n  const [userProfile, setUserProfile] = useState(null);\n  const [showText, setShowText] = useState(false);\n\n  const [windowWidth, setWindowWidth] = useState(\n    Dimensions.get(\"window\").width\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(Dimensions.get(\"window\").width);\n    };\n    Dimensions.addEventListener(\"change\", handleResize);\n  }, []);\n\n  const isSmallScreen = windowWidth < 800;\n\n  const isFocused = useIsFocused();\n  useEffect(() => {\n    if (isFocused) {\n      GetProfile();\n    }\n  }, [isFocused]);\n\n  const onShare = async () => {\n    const message = \"Check out this awesome app: https://example.com\";\n\n    if (Platform.OS === \"web\") {\n      if (navigator.share) {\n        try {\n          await navigator.share({\n            title: \"My App\",\n            text: message,\n            url: \"https://example.com\",\n          });\n        } catch (error) {\n          Alert.alert(\"Error\", error.message);\n        }\n      } else {\n        Alert.alert(\n          \"Share not supported\",\n          \"Your browser does not support Web Share API.\"\n        );\n      }\n    } else {\n      try {\n        await Share.share({ message });\n      } catch (error) {\n        Alert.alert(\"Error\", error.message);\n      }\n    }\n  };\n\n  const GetProfile = async () => {\n    const Token = await getToken();\n    const Data = await AsyncStorage.getItem(\"mainProfile\");\n    console.log(\"🚀 ~ GetProfile ~ Data:\", Data, \"Data\", id, \"id\");\n\n    const URL =\n      id == undefined ? API.USER_PROFILE + Data : API.USER_PROFILE + id;\n    console.log(\"🚀 ~ GetProfile ~ URL:\", URL);\n\n    try {\n      const response = await GET(URL, Token);\n      console.log(\"Response data:\", response.data.data);\n\n      setUserProfile(response.data.data);\n    } catch (error) {\n      console.error(\"Error get profile:\", error);\n    }\n  };\n\n  const handleLogout = async () => {\n    const Token = await getToken();\n    const URL = `${API.LOGOUT}`;\n    const data = {};\n    try {\n      await AsyncStorage.removeItem(\"access_token\");\n      console.log(\"Token removed from AsyncStorage\");\n      navigation.navigate(\"AuthStack\");\n\n      const response = await POST(URL, data, Token);\n\n      if (response.status === 200) {\n        console.log(\"Logout successfully\");\n        navigation.navigate(\"AuthStack\");\n      } else {\n        console.error(\"Failed to logout from API:\", response.status);\n      }\n    } catch (error) {\n      console.error(\"Error during logout:\", error);\n    }\n  };\n\n  const seePost = async () => {\n    const Data = await AsyncStorage.getItem(\"mainProfile\");\n    console.log(\"🚀 ~ GetProfile ~ Data:\", Data);\n    navigation.navigate(\"User\", { id: id == undefined ? Data : id });\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      {/* <LinearGradient\n        colors={[\n          \"#8e2de2\",\n          \"#4a00e0\",\n          \"#8e2de2\",\n          \"#4a00e0\",\n          // \"#ff416c\",\n          \"#8e2de2\",\n          \"#8e2de2\",\n        ]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      /> */}\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner />\n        <NavigationBar />\n        <View style={{ flex: 1, width: \"100%\" }}>\n          <BlurView\n            intensity={100}\n            style={{\n              flex: 1,\n              width: \"100%\",\n              borderWidth: 1,\n              borderColor: COLORS.white,\n              borderRadius: 16,\n              marginTop: 20,\n              flexDirection: isSmallScreen ? \"column\" : \"row\",\n              padding: 15,\n              paddingVertical: 50,\n            }}\n          >\n            <View\n              style={{\n                flex: 1,\n                justifyContent: \"center\",\n                alignItems: \"center\",\n                maxWidth: 240,\n                alignSelf: \"center\",\n              }}\n            >\n              <TouchableOpacity onPress={seePost}>\n                <Image\n                  source={{\n                    uri: userProfile?.avatar\n                      ? `${ENV.BASE_URL}${userProfile?.avatar}`\n                      : \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png?20150327203541\",\n                  }}\n                  style={{\n                    height: isSmallScreen ? 200 : 200,\n                    width: isSmallScreen ? 280 : 300,\n                    borderRadius: 16,\n                    maxWidth: 200,\n                  }}\n                  resizeMode=\"cover\"\n                />\n              </TouchableOpacity>\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                  marginVertical: 10,\n                }}\n              >\n                {Array(5)\n                  .fill(null)\n                  .map((_, index) => (\n                    <Image\n                      key={index}\n                      source={IMAGES.star}\n                      style={{ width: 20, height: 20, marginHorizontal: 3 }}\n                    />\n                  ))}\n              </View>\n              {id == undefined && (\n                <Pressable\n                  onPress={() => navigation.navigate(\"ChartAnalytics\")}\n                >\n                  <Text\n                    style={{\n                      color: COLORS.white,\n                      fontFamily: \"PoppinsSemi\",\n                      marginBottom: 10,\n                    }}\n                  >\n                    📈 Check Earning\n                  </Text>\n                </Pressable>\n              )}\n              <Text style={{ color: COLORS.white, fontFamily: \"PoppinsSemi\" }}>\n                Social media links:\n              </Text>\n\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"space-evenly\",\n                  width: \"100%\",\n                  marginTop: 10,\n                  alignItems: \"center\",\n                  maxWidth: 200,\n                }}\n              >\n                {[IMAGES.facebook, IMAGES.link, IMAGES.insta, IMAGES.yout].map(\n                  (image, index) => (\n                    <Image\n                      key={index}\n                      source={image}\n                      style={{ width: 30, height: 30, borderRadius: 10 }}\n                    />\n                  )\n                )}\n              </View>\n            </View>\n\n            <View\n              style={{\n                width: isSmallScreen ? \"100%\" : \"70%\",\n                marginTop: isSmallScreen ? 30 : 0,\n                height: isSmallScreen ? \"auto\" : \"100%\",\n                flex: 1,\n              }}\n            >\n              <View\n                style={{\n                  flexDirection: windowWidth < 426 ? \"column\" : \"row\",\n                  justifyContent: \"space-between\",\n                  alignItems: windowWidth < 426 ? \"center\" : \"flex-start\",\n                  borderBottomWidth: 1,\n                  borderColor: COLORS.white,\n                  paddingBottom: 5,\n                  width: \"100%\",\n                }}\n              >\n                <View\n                  style={{\n                    flexDirection: \"row\",\n                    alignItems: \"center\",\n                    justifyContent: \"center\",\n                  }}\n                >\n                  <Text\n                    style={{\n                      color: COLORS.white,\n                      fontFamily: \"PoppinsSemi\",\n                      fontSize: 28,\n                    }}\n                  >\n                    {userProfile?.full_name}\n                  </Text>\n                  {id == undefined ? (\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"EditProfile\", {\n                          userData: userProfile,\n                        })\n                      }\n                      style={{ backgroundColor: \"\", marginLeft: 10 }}\n                    >\n                      <Image\n                        source={IMAGES.Edit}\n                        style={{ height: 24, width: 24, tintColor: \"#fff\" }}\n                      />\n                    </TouchableOpacity>\n                  ) : null}\n                </View>\n                <View style={{ flexDirection: \"row\" }}>\n                  <TouchableOpacity\n                    onPress={() =>\n                      navigation.navigate(\"FollowUser\", {\n                        list: \"following\",\n                        userId: userProfile,\n                      })\n                    }\n                  >\n                    <View\n                      style={{\n                        alignItems: \"center\",\n                        paddingRight: 10,\n                        borderRightWidth: 1,\n                        borderColor: COLORS.white,\n                      }}\n                    >\n                      <Text style={styles.Flonum}>\n                        {userProfile?.following_count}\n                      </Text>\n\n                      <Text style={styles.Flotext}>Following</Text>\n                    </View>\n                  </TouchableOpacity>\n\n                  <View style={{ flexDirection: \"row\" }}>\n                    <TouchableOpacity\n                      onPress={() =>\n                        navigation.navigate(\"FollowUser\", {\n                          list: \"follower\",\n                          userId: userProfile,\n                        })\n                      }\n                    >\n                      <View style={{ alignItems: \"center\", paddingLeft: 10 }}>\n                        <Text style={styles.Flonum}>\n                          {userProfile?.followers_count}\n                        </Text>\n                        <Text style={styles.Flotext}>Followers</Text>\n                      </View>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </View>\n\n              <View\n                style={[\n                  styles.card,\n                  {\n                    maxWidth: windowWidth < 426 ? \"auto\" : 400,\n                    minWidth: windowWidth < 426 ? \"auto\" : 375,\n                  },\n                ]}\n              >\n                <Text style={styles.title}>Personal Data:</Text>\n                <View style={styles.grid}>\n                  <View\n                    style={[\n                      styles.row,\n                      {\n                        justifyContent:\n                          windowWidth < 426 ? \"flex-start\" : \"space-between\",\n                      },\n                    ]}\n                  >\n                    <Text style={styles.label}>County domicile:</Text>\n                    <Text\n                      style={[\n                        styles.data,\n                        { width: windowWidth < 426 ? \"auto\" : \"50%\" },\n                      ]}\n                    >\n                      {userProfile?.county_domicile}\n                    </Text>\n                  </View>\n\n                  {/* <View\n                    style={[\n                      styles.row,\n                      {\n                        justifyContent:\n                          windowWidth < 426 ? \"flex-start\" : \"space-between\",\n                      },\n                    ]}\n                  >\n                    <Text style={styles.label}>Date of birth:</Text>\n                    <Text\n                      style={[\n                        styles.data,\n                        { width: windowWidth < 426 ? \"auto\" : \"50%\" },\n                      ]}\n                    >\n                      {userProfile?.date_of_birth}\n                    </Text>\n                  </View> */}\n\n                  <View\n                    style={[\n                      styles.row,\n                      {\n                        justifyContent:\n                          windowWidth < 426 ? \"flex-start\" : \"space-between\",\n                      },\n                    ]}\n                  >\n                    <Text style={styles.label}>Email:</Text>\n                    <Text\n                      style={[\n                        styles.data,\n                        { width: windowWidth < 426 ? \"auto\" : \"50%\" },\n                      ]}\n                    >\n                      {userProfile?.email}\n                    </Text>\n                  </View>\n\n                  <View\n                    style={[\n                      styles.row,\n                      {\n                        justifyContent:\n                          windowWidth < 426 ? \"flex-start\" : \"space-between\",\n                      },\n                    ]}\n                  >\n                    <Text style={styles.label}>Languages spoken:</Text>\n                    <Text\n                      style={[\n                        styles.data,\n                        { width: windowWidth < 426 ? \"auto\" : \"50%\" },\n                      ]}\n                    >\n                      {userProfile?.languages_spoken}\n                    </Text>\n                  </View>\n\n                  <View\n                    style={[\n                      styles.row,\n                      {\n                        justifyContent:\n                          windowWidth < 426 ? \"flex-start\" : \"space-between\",\n                      },\n                    ]}\n                  >\n                    <Text style={styles.label}>Rates per hour:</Text>\n                    <Text\n                      style={[\n                        styles.data,\n                        { width: windowWidth < 426 ? \"auto\" : \"50%\" },\n                      ]}\n                    >\n                      {userProfile?.tarif_per_hour}\n                    </Text>\n                  </View>\n\n                  <View\n                    style={[\n                      styles.row,\n                      {\n                        justifyContent:\n                          windowWidth < 426 ? \"flex-start\" : \"space-between\",\n                      },\n                    ]}\n                  >\n                    <Text style={styles.label}>Purpose of life:</Text>\n                    <Text\n                      style={[\n                        styles.data,\n                        { width: windowWidth < 426 ? \"auto\" : \"50%\" },\n                      ]}\n                    >\n                      {userProfile?.purpose_of_life}\n                    </Text>\n                  </View>\n\n                  <View\n                    style={[\n                      styles.row,\n                      {\n                        justifyContent:\n                          windowWidth < 426 ? \"flex-start\" : \"space-between\",\n                      },\n                    ]}\n                  >\n                    <Text style={styles.label}>Hobby:</Text>\n                    <Text\n                      style={[\n                        styles.data,\n                        { width: windowWidth < 426 ? \"auto\" : \"50%\" },\n                      ]}\n                    >\n                      {userProfile?.hobbies}\n                    </Text>\n                  </View>\n                </View>\n              </View>\n            </View>\n          </BlurView>\n\n          <View\n            style={{\n              flexDirection: isSmallScreen ? \"column\" : \"row\",\n              marginTop: 20,\n              flexWrap: \"wrap\",\n              justifyContent: \"space-between\",\n            }}\n          >\n            <View\n              style={{\n                width: isSmallScreen ? \"100%\" : \"30%\",\n                alignItems: \"center\",\n              }}\n            >\n              <BlurView\n                intensity={70}\n                style={{\n                  width: \"100%\",\n                  backgroundColor: \"red\",\n                  alignItems: \"center\",\n                  padding: 20,\n                  // minWidth: 300,\n                  borderRadius: 32,\n                }}\n              >\n                <Text\n                  style={{\n                    color: COLORS.white,\n                    fontFamily: \"PoppinsMedium\",\n                    fontSize: 23,\n                  }}\n                ></Text>\n                <View\n                  style={{\n                    width: \"100%\",\n                    // height: 300,\n                    minHeight: 220,\n                    marginTop: 20,\n                  }}\n                >\n                  <Image\n                    source={IMAGES.TokImage}\n                    style={{\n                      width: \"100%\",\n                      height: \"100%\",\n                      resizeMode: \"contain\",\n                    }}\n                  />\n                </View>\n                <View\n                  style={{\n                    // width: \"100%\",\n                    width:\n                      windowWidth < 1000 && windowWidth > 800\n                        ? \"100%\"\n                        : windowWidth < 426\n                        ? \"100%\"\n                        : \"70%\",\n                    backgroundColor: COLORS.white,\n                    height: 40,\n                    alignItems: \"center\",\n                    borderRadius: 16,\n                    justifyContent: \"center\",\n                    marginTop: 17,\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      fontFamily: \"PoppinsSemi\",\n                      color: COLORS.blue,\n                    }}\n                  >\n                    Link to the content page\n                  </Text>\n                </View>\n              </BlurView>\n              <BlurView\n                intensity={70}\n                style={{\n                  width: \"100%\",\n                  backgroundColor: \"red\",\n                  alignItems: \"center\",\n                  padding: 20,\n                  // minWidth: 300,\n                  borderRadius: 32,\n                  marginTop: 20,\n                }}\n              >\n                <Text\n                  style={{\n                    color: COLORS.white,\n                    fontFamily: \"PoppinsMedium\",\n                    fontSize: 23,\n                  }}\n                >\n                  My communities\n                </Text>\n\n                <View\n                  style={{\n                    // width: \"70%\",\n                    width:\n                      windowWidth < 1000 && windowWidth > 800\n                        ? \"100%\"\n                        : windowWidth < 426\n                        ? \"100%\"\n                        : \"70%\",\n                    backgroundColor: COLORS.white,\n                    height: 40,\n                    alignItems: \"center\",\n                    borderRadius: 16,\n                    justifyContent: \"center\",\n                    marginTop: 17,\n                  }}\n                >\n                  <Text\n                    style={{\n                      fontSize: 15,\n                      fontFamily: \"PoppinsSemi\",\n                      color: COLORS.blue,\n                    }}\n                  >\n                    Link to the content page\n                  </Text>\n                </View>\n              </BlurView>\n            </View>\n\n            <View\n              style={{\n                width: isSmallScreen ? \"100%\" : \"68%\",\n                marginTop: isSmallScreen ? 20 : 0,\n                minWidth: 214,\n                gap: 20,\n              }}\n            >\n              <BlurView\n                style={[\n                  styles.rowData,\n                  {\n                    justifyContent:\n                      windowWidth < 1050 ? \"space-around\" : \"space-between\",\n                    alignItems: \"center\",\n                    borderRadius: 22,\n                    paddingHorizontal: 15,\n                    paddingVertical: 10,\n                    flexWrap: \"wrap\",\n                    gap: 10,\n                  },\n                ]}\n                intensity={70}\n              >\n                <View\n                  style={[\n                    styles.rowData,\n                    {\n                      flex: 1,\n                      flexWrap: \"wrap\",\n                      minWidth: 200,\n                      width: \"100%\",\n                      gap: 10,\n                      justifyContent:\n                        windowWidth < 550 ? \"space-around\" : \"flex-start\",\n                    },\n                  ]}\n                >\n                  <View\n                    style={[\n                      styles.rowData1,\n                      { flexDirection: windowWidth > 1000 ? \"row\" : \"column\" },\n                    ]}\n                  >\n                    <Image source={IMAGES.tip} style={styles.rowImage} />\n                    <Text style={styles.rowText}>Give tip123</Text>\n                  </View>\n                  <View\n                    style={[\n                      styles.rowData1,\n                      { flexDirection: windowWidth > 1000 ? \"row\" : \"column\" },\n                    ]}\n                  >\n                    <Image\n                      source={IMAGES.subsCription}\n                      style={styles.rowImage}\n                    />\n                    <Text style={styles.rowText}>Subscription</Text>\n                  </View>\n                  <View\n                    style={[\n                      styles.rowData1,\n                      { flexDirection: windowWidth > 1000 ? \"row\" : \"column\" },\n                    ]}\n                  >\n                    <Image source={IMAGES.mess} style={styles.rowImage} />\n                    <Text style={styles.rowText}>Message</Text>\n                  </View>\n                  <View\n                    style={[\n                      styles.rowData1,\n                      { flexDirection: windowWidth > 1000 ? \"row\" : \"column\" },\n                    ]}\n                  >\n                    <Image source={IMAGES.follow} style={styles.rowImage} />\n                    <Text style={styles.rowText}>Follow</Text>\n                  </View>\n                  <View\n                    style={[\n                      styles.rowData1,\n                      { flexDirection: windowWidth > 1000 ? \"row\" : \"column\" },\n                    ]}\n                  >\n                    <Image\n                      source={IMAGES.nottification}\n                      style={styles.rowImage}\n                    />\n                    <Text style={styles.rowText}> </Text>\n                  </View>\n                </View>\n                <View\n                  style={[\n                    styles.rowData,\n                    {\n                      backgroundColor: COLORS.white,\n                      height: 44,\n                      width: 84,\n                      borderRadius: 10,\n                      alignItems: \"center\",\n                      justifyContent: \"space-between\",\n                      paddingHorizontal: 10,\n                    },\n                  ]}\n                >\n                  <Image\n                    source={IMAGES.beg}\n                    style={[styles.rowImage, { tintColor: COLORS.blue }]}\n                  />\n                  <Image\n                    source={IMAGES.nottification}\n                    style={[styles.rowImage, { tintColor: COLORS.blue }]}\n                  />\n                </View>\n              </BlurView>\n\n              {userProfile?.professional_experience?.length > 0 &&\n                userProfile?.professional_experience?.map((item, index) => {\n                  return (\n                    <BlurView\n                      intensity={70}\n                      style={{\n                        paddingHorizontal: 15,\n                        borderRadius: 22,\n                        // marginTop: 20,\n                        // paddingBottom: 20,\n                      }}\n                      key={index.toString()}\n                    >\n                      <Text\n                        style={[\n                          styles.useInfo,\n                          { marginTop: 20, fontSize: 20 },\n                        ]}\n                      >\n                        Professional Experience\n                      </Text>\n                      <View\n                        style={{\n                          paddingVertical: 10,\n                          borderBottomWidth: 1,\n                          borderColor: COLORS.white,\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <View\n                          style={{\n                            height: 9,\n                            width: 9,\n                            borderRadius: 100,\n                            backgroundColor: COLORS.white,\n                            marginTop: 5,\n                            marginRight: 5,\n                          }}\n                        />\n                        <View>\n                          <Text style={styles.useInfo}>{item.title}</Text>\n                          <Text style={styles.useInfo}>\n                            {item.organization}\n                          </Text>\n                          <Text style={styles.useInfo}>{item.duration}</Text>\n                          <Text style={styles.useInfo}>{item.description}</Text>\n                        </View>\n                      </View>\n                      <View\n                        style={{\n                          paddingVertical: 10,\n                          borderColor: COLORS.white,\n                          flexDirection: \"row\",\n                        }}\n                      >\n                        <View\n                          style={{\n                            height: 9,\n                            width: 9,\n                            borderRadius: 100,\n                            backgroundColor: COLORS.white,\n                            marginTop: 5,\n                            marginRight: 5,\n                          }}\n                        />\n                        <View style={{ width: \"100%\", paddingRight: 20 }}>\n                          <Text style={styles.useInfo}>{item.job_role}</Text>\n                          <Text style={styles.useInfo}>{item.job_field}</Text>\n                          <Text style={styles.useInfo}>\n                            {item.job_Duration}\n                          </Text>\n                          <Text\n                            style={[\n                              styles.useInfo,\n                              { fontFamily: \"PoppinsRegular\" },\n                            ]}\n                            ellipsizeMode=\"tail\"\n                            numberOfLines={showText ? 0 : 1}\n                          >\n                            {item.job_Description}\n                          </Text>\n                          <TouchableOpacity\n                            onPress={() => setShowText(!showText)}\n                            style={{\n                              backgroundColor: COLORS.white,\n                              borderRadius: 16,\n                              width: 100,\n                              paddingVertical: 10,\n                              alignItems: \"center\",\n                              justifyContent: \"center\",\n                              alignSelf: \"flex-end\",\n                              margin: 10,\n                            }}\n                          >\n                            <Text\n                              style={{\n                                color: COLORS.blue,\n                                fontSize: 16,\n                                fontFamily: \"PoppinsSemi\",\n                              }}\n                            >\n                              {showText ? \"Hide\" : \"Show more\"}\n                            </Text>\n                          </TouchableOpacity>\n                        </View>\n                      </View>\n                    </BlurView>\n                  );\n                })}\n\n              {/* <BlurView\n                intensity={70}\n                style={{\n                  paddingHorizontal: 15,\n                  borderRadius: 22,\n                  // marginTop: 20,\n                  // paddingBottom: 20,\n                }}\n              >\n                <Text style={[styles.useInfo, { marginTop: 20, fontSize: 20 }]}>\n                  Professional Experience\n                </Text>\n                <View\n                  style={{\n                    paddingVertical: 10,\n                    borderBottomWidth: 1,\n                    borderColor: COLORS.white,\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <View\n                    style={{\n                      height: 9,\n                      width: 9,\n                      borderRadius: 100,\n                      backgroundColor: COLORS.white,\n                      marginTop: 5,\n                      marginRight: 5,\n                    }}\n                  />\n                  <View>\n                    <Text style={styles.useInfo}>\n                      {userProfile?.professional_experience?.title}\n                    </Text>\n                    <Text style={styles.useInfo}>\n                      {userProfile?.professional_experience?.organization}\n                    </Text>\n                    <Text style={styles.useInfo}>\n                      {userProfile?.professional_experience?.duration}\n                    </Text>\n                    <Text style={styles.useInfo}>\n                      {userProfile?.professional_experience?.description}\n                    </Text>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    paddingVertical: 10,\n                    borderColor: COLORS.white,\n                    flexDirection: \"row\",\n                  }}\n                >\n                  <View\n                    style={{\n                      height: 9,\n                      width: 9,\n                      borderRadius: 100,\n                      backgroundColor: COLORS.white,\n                      marginTop: 5,\n                      marginRight: 5,\n                    }}\n                  />\n                  <View style={{ width: \"100%\", paddingRight: 20 }}>\n                    <Text style={styles.useInfo}>\n                      {userProfile?.professional_experience?.job_role}\n                    </Text>\n                    <Text style={styles.useInfo}>\n                      {userProfile?.professional_experience?.job_field}\n                    </Text>\n                    <Text style={styles.useInfo}>\n                      {userProfile?.professional_experience?.job_Duration}\n                    </Text>\n                    <Text\n                      style={[styles.useInfo, { fontFamily: \"PoppinsRegular\" }]}\n                      ellipsizeMode=\"tail\"\n                      numberOfLines={showText ? 0 : 1}\n                    >\n                      {userProfile?.professional_experience?.job_Description}\n                    </Text>\n                    <TouchableOpacity\n                      onPress={() => setShowText(!showText)}\n                      style={{\n                        backgroundColor: COLORS.white,\n                        borderRadius: 16,\n                        width: 100,\n                        paddingVertical: 10,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        alignSelf: \"flex-end\",\n                        margin: 10,\n                      }}\n                    >\n                      <Text\n                        style={{\n                          color: COLORS.blue,\n                          fontSize: 16,\n                          fontFamily: \"PoppinsSemi\",\n                        }}\n                      >\n                        {showText ? \"Hide\" : \"Show more\"}\n                      </Text>\n                    </TouchableOpacity>\n                  </View>\n                </View>\n              </BlurView> */}\n\n              {/* <BlurView\n                intensity={70}\n                style={{\n                  paddingHorizontal: 15,\n                  borderRadius: 22,\n                }}\n              >\n                <Text style={[styles.useInfo, { marginTop: 20, fontSize: 20 }]}>\n                  Professional Experience\n                </Text>\n                <View\n                  style={{\n                    paddingVertical: 10,\n                    borderBottomWidth: 1,\n                    borderColor: COLORS.white,\n                    flexDirection: \"row\",\n                    marginTop: 10,\n                  }}\n                >\n                  <View\n                    style={{\n                      height: 9,\n                      width: 9,\n                      borderRadius: 100,\n                      backgroundColor: COLORS.white,\n                      marginTop: 5,\n                      marginRight: 5,\n                    }}\n                  />\n                  <View>\n                    <Text style={styles.useInfo}>Diploma</Text>\n                    <Text style={styles.useInfo}>University</Text>\n                    <Text style={styles.useInfo}>\n                      Certificat/learning description\n                    </Text>\n                  </View>\n                </View>\n                <View\n                  style={{\n                    paddingVertical: 10,\n                    borderColor: COLORS.white,\n                    flexDirection: \"row\",\n                    marginTop: 10,\n                  }}\n                >\n                  <View\n                    style={{\n                      height: 9,\n                      width: 9,\n                      borderRadius: 100,\n                      backgroundColor: COLORS.white,\n                      marginTop: 5,\n                      marginRight: 5,\n                    }}\n                  />\n                  <View style={{ width: \"100%\", paddingRight: 20 }}>\n                    <Text style={styles.useInfo}>MBA</Text>\n                    <Text style={styles.useInfo}>\n                      University of California, UCLA\n                    </Text>\n                    <Text style={styles.useInfo}>\n                      Certificate/learning description\n                    </Text>\n\n                    <View\n                      style={{\n                        backgroundColor: COLORS.white,\n                        borderRadius: 16,\n                        width: 100,\n                        paddingVertical: 10,\n                        alignItems: \"center\",\n                        justifyContent: \"center\",\n                        alignSelf: \"flex-end\",\n                        margin: 10,\n                      }}\n                    >\n                      <Text\n                        style={{\n                          color: COLORS.blue,\n                          fontSize: 16,\n                          fontFamily: \"PoppinsSemi\",\n                        }}\n                      >\n                        Show more\n                      </Text>\n                    </View>\n                  </View>\n                </View>\n              </BlurView> */}\n\n              <TouchableOpacity\n                activeOpacity={0.5}\n                onPress={() => handleLogout()}\n                style={{\n                  backgroundColor: COLORS.white,\n                  borderRadius: 16,\n                  width: 100,\n                  paddingVertical: 10,\n                  alignItems: \"center\",\n                  justifyContent: \"center\",\n                  alignSelf: \"flex-start\",\n                  // margin: 10,\n                }}\n              >\n                <Text\n                  style={{\n                    color: COLORS.blue,\n                    fontSize: 16,\n                    fontFamily: \"PoppinsSemi\",\n                  }}\n                >\n                  Logout\n                </Text>\n              </TouchableOpacity>\n            </View>\n          </View>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\nexport default Profile;\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  Flonum: {\n    color: COLORS.white,\n    fontFamily: \"PoppinsSemi\",\n    fontSize: 18,\n  },\n  Flotext: { color: COLORS.white, fontFamily: \"PoppinsRegular\", fontSize: 16 },\n  card: {\n    width: \"100%\",\n    // maxWidth: 400,\n    // minWidth: 375,\n  },\n  title: {\n    fontSize: 18,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    fontFamily: \"PoppinsMedium\",\n  },\n  grid: {\n    marginTop: 10,\n    width: \"100%\",\n  },\n  row: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 5,\n    justifyContent: \"flex-start\",\n    flexWrap: \"wrap\",\n  },\n  label: {\n    color: \"#fff\",\n    marginLeft: 10,\n    alignItems: \"center\",\n  },\n  data: {\n    color: \"#fff\",\n    marginLeft: 30,\n    // marginBottom: 10,\n    // width: \"50%\",\n    // backgroundColor: 'red',\n    textAlign: \"justify\",\n  },\n  rowData: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  rowData1: {\n    // flexDirection: windowWidth < 1000 && windowWidth > 800 ? 'column' : 'row',\n    alignItems: \"center\",\n  },\n  rowImage: {\n    height: 24,\n    width: 24,\n    resizeMode: \"contain\",\n  },\n  rowText: {\n    fontSize: 14,\n    fontFamily: \"PoppinsRegular\",\n    marginLeft: 10,\n    marginRight: 10,\n    color: COLORS.white,\n  },\n  useInfo: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n    textAlign: \"justify\",\n  },\n});\n",
    "import {\n  StatusBar,\n  Text,\n  StyleSheet,\n  Dimensions,\n  View,\n  Platform,\n  SafeAreaView,\n  Image,\n  TextInput,\n  TouchableOpacity,\n  ScrollView,\n  ImageBackground,\n  Modal,\n  useWindowDimensions,\n} from \"react-native\";\nimport React, { useState, useContext, useRef } from \"react\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { COLORS, FONTS, IMAGES } from \"../utills/Utills\";\nconst Publish = () => {\n  const navigation = useNavigation<any>();\n\n  const theme = {\n    colors: {\n      primary: \"red\", // Change this to your desired color\n      accent: \"green\", // Change this to your desired color\n      background: \"#ffffff\", // Change the background color\n      text: \"#000000\", // Change the text color\n    },\n  };\n\n  const { width: windowWidth } = useWindowDimensions();\n  const isSmallScreen = windowWidth < 800;\n\n  return (\n    <View style={[styles.container, isSmallScreen && styles.containerWrap]}>\n      <TouchableOpacity\n        onPress={() => navigation.navigate(\"PublishPost\")}\n        activeOpacity={0.7}\n        style={[styles.publishBox, isSmallScreen && styles.fullWidth]}\n      >\n        <View style={styles.publishContent}>\n          <Image\n            tintColor={COLORS.white}\n            source={IMAGES.publi}\n            style={styles.rowImage}\n          />\n          <Text style={styles.publishText}>Publish Something</Text>\n        </View>\n        <Text style={styles.publishNote}>\n          (direct access to the creator tools)\n        </Text>\n      </TouchableOpacity>\n\n      <View style={[styles.rowData, isSmallScreen && styles.alignRight]}>\n        <Image source={IMAGES.filltern} style={styles.rowImage} />\n        <Text style={styles.filterText}>Filter</Text>\n        <Image source={IMAGES.sort} style={styles.rowImage} />\n        <Text style={styles.filterText}>Sort by</Text>\n      </View>\n    </View>\n  );\n};\nexport default Publish;\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 15,\n    minWidth: 230,\n    width: \"50%\",\n    alignSelf: \"center\",\n    flexWrap: \"nowrap\",\n    gap: 10,\n  },\n  containerWrap: {\n    flexWrap: \"wrap\",\n    width: \"100%\",\n  },\n  publishBox: {\n    height: 67,\n    borderStyle: \"dotted\",\n    borderWidth: 1,\n    borderColor: COLORS.white,\n    alignItems: \"center\",\n    borderRadius: 16,\n    paddingHorizontal: 20,\n    justifyContent: \"center\",\n    width: \"70%\",\n  },\n  publishContent: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  publishText: {\n    fontSize: 20,\n    fontFamily: \"PoppinsSemi\",\n    color: COLORS.white,\n  },\n  publishNote: {\n    fontSize: 14,\n    fontFamily: \"PoppinsRegular\",\n    color: COLORS.white,\n  },\n  rowData: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.white,\n    height: 67,\n    borderRadius: 10,\n    justifyContent: \"space-between\",\n    paddingHorizontal: 10,\n  },\n  alignRight: {\n    alignSelf: \"flex-end\",\n    marginTop: 10,\n  },\n  rowImage: {\n    height: 24,\n    width: 24,\n    resizeMode: \"contain\",\n    tintColor: COLORS.blue,\n    marginHorizontal: 4,\n  },\n  filterText: {\n    fontSize: 14,\n    fontFamily: \"PoppinsRegular\",\n    color: COLORS.blue,\n    marginHorizontal: 4,\n  },\n  fullWidth: {\n    width: \"100%\",\n    alignSelf: \"flex-start\",\n  },\n});\n",
    "import React, { useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  TextInput,\n  TouchableOpacity,\n  Image,\n  useWindowDimensions,\n} from \"react-native\";\nimport { COLORS, IMAGES } from \"../utills/Utills\";\n\ninterface SearchBoxProps {\n  placeholder?: string;\n  onSearch?: (query: string) => void;\n}\n\nconst SearchBox: React.FC<SearchBoxProps> = ({\n  placeholder = \"Search box\",\n  onSearch,\n}) => {\n  const [searchText, setSearchText] = useState(\"\");\n  const { width: windowWidth } = useWindowDimensions();\n  const isSmallScreen = windowWidth < 800;\n\n  const handleSearch = () => {\n    if (onSearch) {\n      onSearch(searchText);\n      setSearchText(\"\");\n    }\n  };\n\n  return (\n    <View style={[styles.container, isSmallScreen && styles.smallContainer]}>\n      <Image source={IMAGES.search} style={styles.icon} />\n      <TextInput\n        value={searchText}\n        onChangeText={setSearchText}\n        placeholder={placeholder}\n        placeholderTextColor={COLORS.white}\n        style={styles.input}\n      />\n      <TouchableOpacity onPress={handleSearch} style={styles.searchButton}>\n        <Text style={styles.searchText}>Search</Text>\n      </TouchableOpacity>\n    </View>\n  );\n};\n\nexport default SearchBox;\n\nconst styles = StyleSheet.create({\n  container: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginVertical: 14,\n    borderRadius: 16,\n    borderWidth: 1,\n    borderColor: COLORS.white,\n    width: \"44%\",\n    minWidth: 100,\n    alignSelf: \"center\",\n    padding: 10,\n    gap: 10,\n  },\n  smallContainer: {\n    width: \"90%\",\n  },\n  icon: {\n    height: 17.5,\n    width: 17.5,\n    resizeMode: \"contain\",\n  },\n  input: {\n    flex: 1,\n    height: 44,\n    color: COLORS.white,\n    borderRadius: 16,\n    fontSize: 14,\n    fontFamily: \"PoppinsRegular\",\n    outlineStyle: \"none\",\n    minWidth: 100,\n  },\n  searchButton: {\n    backgroundColor: COLORS.white,\n    height: 35,\n    paddingHorizontal: 15,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  searchText: {\n    fontSize: 14,\n    fontFamily: \"PoppinsRegular\",\n    color: COLORS.blue,\n    textAlign: \"center\",\n  },\n});\n",
    "import React, { useRef, useState } from \"react\";\nimport {\n  View,\n  Image,\n  Text,\n  Dimensions,\n  StyleSheet,\n  TouchableOpacity,\n  Modal,\n} from \"react-native\";\nimport Carousel from \"react-native-reanimated-carousel\";\nimport { Video } from \"expo-av\"; // Only if you want to preview videos\nimport { Ionicons } from \"@expo/vector-icons\";\nimport { ENV } from \"../api/api\";\nimport { COLORS } from \"./Utills\";\nimport { BlurView } from \"expo-blur\";\n\nconst { width } = Dimensions.get(\"window\");\n\ninterface MediaItem {\n  files: string;\n  media_type: string; // e.g., photo, video, pdf, etc.\n  id?: number;\n}\n\ninterface ImageCarouselProps {\n  media: MediaItem[];\n  showDotIndicator?: boolean;\n}\n\nconst ImageCarousel: React.FC<ImageCarouselProps> = ({\n  media,\n  showDotIndicator = true,\n}) => {\n  const [activeIndex, setActiveIndex] = useState<number>(0);\n  const carouselRef = useRef<any>(null);\n  const [fullscreenVisible, setFullscreenVisible] = useState(false);\n  const [selectedMedia, setSelectedMedia] = useState<MediaItem | null>(null);\n  const renderMedia = (item: MediaItem) => {\n    switch (item.media_type) {\n      case \"photo\":\n        return (\n          <TouchableOpacity onPress={() => handlePress(item)}>\n            <Image\n              source={{ uri: `${ENV.BASE_URL}${item.files}` }}\n              style={styles.image}\n            />\n          </TouchableOpacity>\n        );\n      case \"video\":\n        return (\n          <TouchableOpacity\n            onPress={() => handlePress(item)}\n            style={{\n              width: \"100%\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n            }}\n          >\n            <Video\n              source={{ uri: `${ENV.BASE_URL}${item.files}` }}\n              style={[\n                styles.image,\n                { width: 350, backgroundColor: \"red\", alignSelf: \"center\" },\n              ]}\n              isMuted\n              shouldPlay={true}\n            />\n          </TouchableOpacity>\n        );\n      case \"pdf\":\n      case \"word\":\n      case \"excel\":\n      case \"ppt\":\n      case \"text\":\n      case \"link\":\n      case \"podcast\":\n        return (\n          <View style={[styles.image, styles.iconContainer]}>\n            {/* <Ionicons\n              name={getIconName(item.media_type)}\n              size={50}\n              color=\"#777\"\n            /> */}\n            <Image source={getIconName(item.media_type)} style={styles.image} />\n            {/* <Text numberOfLines={1} style={styles.iconLabel}>\n              {item.media_type}\n            </Text> */}\n          </View>\n        );\n      default:\n        return (\n          <View style={[styles.image, styles.iconContainer]}>\n            <Ionicons name=\"alert-circle-outline\" size={50} color=\"#999\" />\n            <Text style={styles.iconLabel}>Unsupported</Text>\n          </View>\n        );\n    }\n  };\n\n  const getIconName = (type: string) => {\n    switch (type) {\n      case \"pdf\":\n        // return \"document-text-outline\";\n        return require(\"../assets/images/pdf.png\");\n      case \"word\":\n        return require(\"../assets/images/word-icon.png\");\n      case \"excel\":\n        return require(\"../assets/images/excel-icon.png\");\n      case \"ppt\":\n        return require(\"../assets/images/ppt-icon.png\");\n      case \"text\":\n        return require(\"../assets/images/txt-icon.png\");\n      case \"link\":\n        return require(\"../assets/images/link-icon.png\");\n      case \"podcast\":\n        return require(\"../assets/images/audio-icon.png\");\n      default:\n        return require(\"../assets/images/txt-icon.png\");\n    }\n  };\n\n  const handleDotPress = (index: number) => {\n    setActiveIndex(index);\n    carouselRef.current?.scrollTo?.({ index, animated: true });\n  };\n  const handlePress = (item) => {\n    setSelectedMedia(item);\n    setFullscreenVisible(true);\n  };\n\n  return (\n    <View style={styles.container}>\n      <Carousel\n        ref={carouselRef}\n        width={width - 40}\n        height={200}\n        data={media}\n        autoPlay={true}\n        autoPlayInterval={3000}\n        loop\n        snapEnabled={false}\n        scrollAnimationDuration={800}\n        onSnapToItem={setActiveIndex}\n        renderItem={({ item }) => renderMedia(item)}\n        panGestureHandlerProps={{\n          enabled: media.length > 1, // 👈 disables scroll if only 1 item\n        }}\n      />\n\n      {showDotIndicator && (\n        <View style={styles.dotsContainer}>\n          {media.map((_, index) => (\n            <TouchableOpacity\n              key={index}\n              onPress={() => handleDotPress(index)}\n              style={[styles.dot, activeIndex === index && styles.activeDot]}\n            />\n          ))}\n        </View>\n      )}\n      {fullscreenVisible && selectedMedia && (\n        <Modal visible transparent>\n          <BlurView\n            intensity={70}\n            style={styles.fullscreenContainer}\n            tint=\"dark\"\n          >\n            <TouchableOpacity\n              style={styles.closeButton}\n              onPress={() => setFullscreenVisible(false)}\n            >\n              <Ionicons name=\"close\" size={30} color=\"#fff\" />\n            </TouchableOpacity>\n\n            {selectedMedia.media_type === \"photo\" ? (\n              <Image\n                source={{ uri: `${ENV.BASE_URL}${selectedMedia.files}` }}\n                style={styles.fullscreenImage}\n              />\n            ) : (\n              <Video\n                source={{ uri: `${ENV.BASE_URL}${selectedMedia.files}` }}\n                style={styles.fullscreenImage}\n                useNativeControls\n                resizeMode=\"contain\"\n                shouldPlay\n              />\n            )}\n          </BlurView>\n        </Modal>\n      )}\n    </View>\n  );\n};\n\nexport default ImageCarousel;\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n    marginTop: 10,\n    // backgroundColor: COLORS.white,\n    marginHorizontal: 20,\n    borderRadius: 10,\n    height: 300,\n    justifyContent: \"center\",\n  },\n  image: {\n    width: \"100%\",\n    height: 200,\n    borderRadius: 12,\n    resizeMode: \"contain\",\n    // backgroundColor: \"#f0f0f0\",\n  },\n  iconContainer: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n  },\n  iconLabel: {\n    fontSize: 12,\n    color: \"#555\",\n    marginTop: 5,\n    textAlign: \"center\",\n  },\n  dotsContainer: {\n    flexDirection: \"row\",\n    marginTop: 10,\n  },\n  dot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    marginHorizontal: 5,\n    backgroundColor: \"#ccc\",\n  },\n  activeDot: {\n    backgroundColor: \"#333\",\n  },\n  fullscreenContainer: {\n    flex: 1,\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  fullscreenImage: {\n    width: \"80%\",\n    height: \"80%\",\n    resizeMode: \"contain\",\n    borderRadius: 10,\n  },\n  closeButton: {\n    position: \"absolute\",\n    top: 40,\n    right: 20,\n    zIndex: 1,\n  },\n});\n",
    "import {\n  Platform,\n  StyleSheet,\n  Text,\n  TextInput,\n  TextInputProps,\n  View,\n} from \"react-native\";\nimport React from \"react\";\nimport { COLORS, FONTS } from \"../utills/Utills\";\n\ninterface CustomInputTextProps {\n  value: string;\n  onChangeText: (text: string) => void;\n  placeholder?: string | null;\n  keyboardType?: TextInputProps[\"keyboardType\"];\n  placeholderTextColor?: string;\n  multiline?: boolean;\n  numberOfLines?: number;\n  error?: string | null;\n  inputStyle: any;\n}\n\nconst CustomInputText: React.FC<CustomInputTextProps> = ({\n  value,\n  onChangeText,\n  placeholder = null,\n  keyboardType = \"default\",\n  placeholderTextColor,\n  multiline = false,\n  numberOfLines = 1,\n  error = null,\n  inputStyle,\n}) => {\n  return (\n    <View style={styles.inputView}>\n      <TextInput\n        autoCapitalize=\"none\"\n        keyboardType={keyboardType}\n        style={[\n          styles.input,\n          Platform.OS === \"web\" && styles.inputWeb,\n          { ...inputStyle },\n        ]}\n        placeholder={placeholder}\n        placeholderTextColor={placeholderTextColor}\n        value={value ?? \"\"}\n        onChangeText={(text) => onChangeText(text)}\n        multiline={multiline}\n        numberOfLines={numberOfLines}\n      />\n      {!!error && (\n        <View style={{ width: \"100%\" }}>\n          <Text style={styles.errorText}>{error}</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nexport default CustomInputText;\n\nconst styles = StyleSheet.create({\n  inputView: {\n    borderWidth: 0,\n  },\n  input: {\n    width: \"100%\",\n    minWidth: 200,\n    borderRadius: 8,\n    minHeight: 45,\n    paddingHorizontal: 40,\n    borderColor: COLORS.primarybordercolor,\n    fontFamily: FONTS.PoppinsMedium,\n    alignItems: \"flex-start\",\n    // textAlign: \"center\",\n    backgroundColor: COLORS.white,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    elevation: 5,\n  },\n  inputWeb: {},\n  errorText: {\n    fontSize: 10,\n    color: \"red\",\n    fontFamily: FONTS.PoppinsMedium,\n    marginVertical: 5,\n    textAlign: \"left\",\n  },\n});\n",
    "import {\n  Alert,\n  FlatList,\n  Image,\n  ImageBackground,\n  Modal,\n  Platform,\n  Pressable,\n  ScrollView,\n  Share,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { BlurView } from \"expo-blur\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { ResizeMode, Video } from \"expo-av\";\nimport { COLORS, IMAGES } from \"../utills/Utills\";\nimport { API, ENV } from \"../api/api\";\nimport Publish from \"./Publish\";\nimport SearchBox from \"./Serchbox\";\nimport ImageCarousel from \"../utills/ImageCarousel\";\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\nimport CustomInputText from \"./CustomInputText\";\nimport Banner from \"./Common/Banner\";\nimport NavigationBar from \"./Common/NavigationBar\";\nimport { DELETE, GET, getToken, POST, PUT } from \"../utills/Helper\";\nimport { Ionicons } from \"@expo/vector-icons\";\nimport {\n  useFocusEffect,\n  useIsFocused,\n  useNavigation,\n} from \"@react-navigation/native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ninterface MediaItem {\n  files: string;\n}\n\ninterface PostItem {\n  id: number;\n  creator: string;\n  description: string;\n  media: MediaItem[];\n}\n\ninterface NoContent {\n  status: number;\n  message: string;\n}\n\nconst News: React.FC = () => {\n  const [getPostData, setGetPostData] = useState<PostItem[] | null>([]);\n  const [noContent, setNoContent] = useState<NoContent | null>(null);\n  const [postData, setPostData] = useState<PostItem[] | null>([]);\n  console.log(\"🚀 ~ postData:\", postData);\n  const [showComment, setShowComment] = useState<Number | null>();\n  const [commentText, setCommentText] = useState<string | null>(null);\n  const [commentsData, setcommentsData] = useState<any[] | null>([]);\n  const [isEditCommment, setIsEditCommment] = useState<boolean>(false);\n  const [editingCommentId, setEditingCommentId] = useState<number | null>(null);\n  const [videosReels, setVideosReels] = useState<any | null>([]);\n  const { width: windowWidth } = useWindowDimensions();\n  const [reelData, setReelData] = useState<any | null>([]);\n  const isSmallScreen = windowWidth < 800;\n  const ismobileScreen = windowWidth < 426;\n  const [fullscreenVisible, setFullscreenVisible] = useState(false);\n  const [selectedMedia, setSelectedMedia] = useState<MediaItem | null>(null);\n  const isFocused = useIsFocused();\n\n  const GetPost = async () => {\n    const Token = await getToken();\n    const URL = API.ALL_USER_CONTENT_LIST;\n    try {\n      const response = await GET(URL, Token);\n      if (response.status === 204) {\n        const msg = {\n          status: 204,\n          message: \"No content has been posted yet.\",\n        };\n        setNoContent(msg);\n      } else {\n        setNoContent(null);\n        setGetPostData(response.data.data);\n        console.log(\"response.data.data==>>\", response.data.data);\n      }\n    } catch (error) {\n      console.error(\"Error get post data:\", error);\n    }\n  };\n\n  const handleSearch = async (query: string) => {\n    const Token = await getToken();\n    const URL = `${API.SEARCH_CONTENT}${query}`;\n    try {\n      const response = await GET(URL, Token);\n      if (response.data.data.length > 0) {\n        console.log(\"it is working here search 2222\");\n        setNoContent(null);\n        setGetPostData(response.data.data);\n      } else {\n        console.log(\"it is working error\");\n        const msg = {\n          status: 204,\n          message: \"No results found.\",\n        };\n        setNoContent(msg);\n      }\n    } catch (error) {\n      console.error(\"API search error:\", error);\n    }\n  };\n\n  const handleLikeReaction = async (id: number, reaction: string) => {\n    const Token = await getToken();\n    const URL = `${API.REACTION_CONTENT + id}/`;\n    const data = { action: reaction };\n    try {\n      const response = await POST(URL, data, Token);\n\n      const res = response.data.data;\n      if (response.status === 200) {\n        const updatedPosts = getPostData.map((item) => {\n          if (item.id === res.post_id) {\n            return {\n              ...item,\n              disliked: res.disliked,\n              liked: res.liked,\n            };\n          }\n          return item;\n        });\n        setGetPostData(updatedPosts);\n      }\n    } catch (error) {\n      console.error(\"res error ===--->>>\", error);\n    }\n  };\n\n  const handleSavePost = async (id: number) => {\n    const Token = await getToken();\n    const data = { content_id: id };\n    const URL = API.SAVE_CONTENT;\n    const updatedPosts = await Promise.all(\n      getPostData.map(async (item) => {\n        if (item.id === id) {\n          if (!item.is_saved) {\n            // Save the post\n            try {\n              const response = await POST(URL, data, Token);\n\n              const res = response.data.data;\n              if (response.status === 201 && item.id === res.content.id) {\n                return { ...item, is_saved: true };\n              }\n            } catch (error) {\n              console.error(\"Error saving content for post ID:\", id, error);\n            }\n          } else {\n            // Unsave the post\n            try {\n              const response = await axios.delete(API.REMOVE_CONTENT, {\n                data: { content_id: id },\n                headers: {\n                  Authorization: `Bearer ${Token}`,\n                },\n              });\n\n              const res = response.data.data;\n\n              if (response.status === 204) {\n                return { ...item, is_saved: false };\n              }\n            } catch (error) {\n              console.error(\"Error removing content for post ID:\", id, error);\n            }\n          }\n        }\n\n        // Return original item if no change\n        return item;\n      })\n    );\n    setGetPostData(updatedPosts);\n  };\n\n  const getCommment = async (id: number) => {\n    const Token = await getToken();\n    const URL = `${API.GET_CONTENT_COMMENT}${id}`;\n\n    try {\n      const response = await GET(URL, Token);\n      setcommentsData(response.data.data);\n    } catch (error) {\n      console.error(\"error get comment :>> \", error);\n    }\n  };\n  const getSuggesteVideo = async () => {\n    const Token = await getToken();\n    const URL = `${API.GET_VIDEOS}`;\n\n    console.log(\"🚀 ~ getSuggesteVideo ~ URL:\", URL);\n    try {\n      const response = await GET(URL, Token);\n      console.log(\"🚀 ~ getSuggesteVideo ~ response:11\", response.data.data);\n      setReelData(response.data.data);\n      // setcommentsData(response.data.data);\n    } catch (error) {\n      console.error(\"error get getSuggesteVideo :>> \", error);\n    }\n  };\n\n  const handleComment = (id: number) => {\n    if (showComment == id) {\n      setcommentsData(null);\n      setShowComment(null);\n    } else {\n      setcommentsData(null);\n      getCommment(id);\n      setShowComment(id);\n      setCommentText(null);\n    }\n  };\n\n  const handleCommentReaction = async (comment_id: number) => {\n    const Token = await getToken();\n    const URL = API.CONTENT_COMMENT_REACTION;\n    const data = { comment_id: comment_id };\n    try {\n      const response = await POST(URL, data, Token);\n      const updatedPosts = commentsData.map((item) => {\n        if (item.id === comment_id) {\n          return {\n            ...item,\n            liked_by: response.data.data.liked,\n          };\n        }\n        return item;\n      });\n      setcommentsData(updatedPosts);\n    } catch (error) {\n      console.error(\"error comment reaction :>> \", error);\n    }\n  };\n  const handlePress = (item) => {\n    setSelectedMedia(item);\n    setFullscreenVisible(true);\n  };\n  const handleCommentCreate = async (id: number) => {\n    const Token = await getToken();\n    const URL = API.CREATE_CONTENT_COMMENT;\n    const data = { content: id, text: commentText };\n    if (commentText) {\n      setCommentText(\"\");\n      try {\n        const response = await POST(URL, data, Token);\n        const newData = response.data.data;\n        if (commentsData && commentsData.length > 0) {\n          const filteredComments = commentsData?.filter(\n            (item) => item.id !== newData.id\n          );\n          setcommentsData([newData, ...filteredComments]);\n        } else {\n          setcommentsData([newData]);\n        }\n      } catch (error) {\n        console.error(\"error comment create :>> \", error);\n      }\n    } else {\n      console.log(\"Empty input\");\n    }\n  };\n\n  const handleDeleteComment = async (id: number) => {\n    const Token = await getToken();\n    const URL = `${API.DELETE_CONTENT_COMMENT}${id}/`;\n    try {\n      const response = await DELETE(URL, Token);\n      const updatedPosts = commentsData.filter((item) => item.id !== id);\n      setcommentsData(updatedPosts);\n    } catch (error) {\n      console.error(\"error comment reaction :>> \", error);\n    }\n  };\n\n  const handleEditComment = async (id: number) => {\n    setIsEditCommment(true);\n    setEditingCommentId(id);\n    const findComment = commentsData.find((item) => item.id == id);\n    setCommentText(findComment.text);\n  };\n\n  const handleCommentUpdate = async () => {\n    if (!editingCommentId) return;\n    const Token = await getToken();\n    const URL = `${API.EDIT_CONTENT_COMMENT}${editingCommentId}/`;\n    const data = { text: commentText };\n\n    setCommentText(null);\n    try {\n      const response = await PUT(URL, data, Token);\n      const updatedComments = commentsData.map((item) => {\n        if (item.id === response.data.data.id) {\n          return {\n            ...item,\n            text: response.data.data.text,\n          };\n        }\n        return item;\n      });\n      setcommentsData(updatedComments);\n      // Reset edit mode\n      setIsEditCommment(false);\n      setEditingCommentId(null);\n      setCommentText(\"\");\n    } catch (error) {\n      console.error(\"error comment create :>> \", error);\n    }\n  };\n\n  const videoSection = () => {\n    const postsWithVideoMedia = [];\n    const postsWithOtherMedia = [];\n    console.log(\n      \"🚀 ~ videoSection ~ postsWithOtherMedia:\",\n      postsWithOtherMedia\n    );\n\n    getPostData?.forEach((post) => {\n      const videoMedia =\n        post.media?.filter((m) => m.media_type === \"video\") || [];\n      const otherMedia =\n        post.media?.filter((m) => m.media_type !== \"video\") || [];\n\n      if (videoMedia.length > 0) {\n        postsWithVideoMedia.push({ ...post, media: videoMedia });\n      }\n\n      if (otherMedia.length > 0) {\n        postsWithOtherMedia.push({ ...post, media: otherMedia });\n      }\n    });\n    // console.log(\"postsWithVideoMedia :>> \", postsWithVideoMedia);\n    // console.log(\"postsWithOtherMedia :>> \", postsWithOtherMedia);\n    const sortedPosts = postsWithOtherMedia.sort(\n      (a, b) => new Date(b.updated_at) - new Date(a.updated_at)\n    );\n\n    const onlyFreePosts = postsWithOtherMedia.filter(\n      (post) => post.is_free === true\n    );\n    setPostData(onlyFreePosts);\n    setVideosReels(postsWithVideoMedia);\n  };\n\n  const onShare = async () => {\n    const message = \"Check out this awesome app: https://example.com\";\n\n    if (Platform.OS === \"web\") {\n      if (navigator.share) {\n        try {\n          await navigator.share({\n            title: \"My App\",\n            text: message,\n            url: \"https://example.com\",\n          });\n        } catch (error) {\n          Alert.alert(\"Error\", error.message);\n        }\n      } else {\n        Alert.alert(\n          \"Share not supported\",\n          \"Your browser does not support Web Share API.\"\n        );\n      }\n    } else {\n      try {\n        await Share.share({ message });\n      } catch (error) {\n        Alert.alert(\"Error\", error.message);\n      }\n    }\n  };\n\n  useEffect(() => {\n    getToken();\n  }, []);\n\n  useEffect(() => {\n    videoSection();\n  }, [getPostData]);\n\n  useEffect(() => {\n    GetPost();\n    getSuggesteVideo();\n  }, [isFocused]);\n\n  const renderItem = ({ item }) => (\n    <View style={[styles.reelContainer, { width: 300 }]}>\n      {/* Placeholder for video thumbnail */}\n      <TouchableOpacity\n        onPress={() => handlePress(item)}\n        style={styles.videoPlaceholder}\n      >\n        <Video\n          source={{\n            uri: item.video_url,\n          }}\n          style={styles.video}\n          shouldPlay\n          resizeMode={ResizeMode.STRETCH}\n          isMuted\n        />\n        <LinearGradient\n          colors={[\n            \"rgba(0,0,0,0.0)\",\n            \"rgba(0,0,0,0.0)\",\n            \"rgba(0,0,0,0.0)\",\n            \"rgba(0,0,0,0.8)\",\n            \"rgba(0,0,0,0.8)\",\n          ]}\n          style={styles.gradientOverlay}\n          start={{ x: 0, y: 0 }} // Top\n          end={{ x: 0, y: 2 }} // Bottom\n        />\n        <View style={styles.reactionsContainer}>\n          <View style={[styles.reactionsContainer, { bottom: 25 }]}>\n            <Image\n              source={{ uri: item?.profile_image }}\n              style={{ height: 25, width: 25, borderRadius: 4 }}\n            />\n            <Text\n              numberOfLines={1}\n              style={{ marginLeft: 10, color: COLORS.white, fontSize: 19 }}\n            >\n              {item?.title}\n            </Text>\n          </View>\n          <View style={styles.reactionsContainer}></View>\n          <Image\n            source={require(\"../assets/images/fbic.png\")}\n            style={styles.reactionIcon}\n          />\n          <Image\n            source={require(\"../assets/images/heart.png\")}\n            style={styles.reactionIcon}\n          />\n          <Image\n            source={require(\"../assets/images/laughIc.webp\")}\n            style={styles.reactionIcon}\n          />\n          <Text style={styles.reactionCount}>1.7K</Text>\n        </View>\n      </TouchableOpacity>\n\n      {/* <View style={styles.reelInfo}>\n        <Text style={styles.title} numberOfLines={2}>\n          {item.title}\n        </Text>\n        {item.subtitle && (\n          <Text style={styles.subtitle} numberOfLines={1}>\n            {item.subtitle}\n          </Text>\n        )}\n        <Text style={styles.source}>{item.source}</Text>\n\n        <View style={styles.statsContainer}>\n          {item.stats && <Text style={styles.stats}>{item.stats}</Text>}\n          {item.likes && <Text style={styles.likes}>{item.likes}</Text>}\n        </View>\n      </View> */}\n    </View>\n  );\n\n  const naviagtion = useNavigation();\n  return (\n    // <View style={styles.container}>\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner />\n        <NavigationBar />\n        <View style={{ flex: 1, width: \"100%\" }}>\n          <Publish />\n          <BlurView intensity={70} style={styles.blurViewContainer}>\n            <View style={styles.innerContainer}>\n              <SearchBox placeholder=\"Search Box\" onSearch={handleSearch} />\n\n              {noContent?.status == 204 ? (\n                <View style={styles.noConetView}>\n                  <Text style={styles.noConetTxt}>{noContent.message}</Text>\n                </View>\n              ) : (\n                <FlatList\n                  data={postData}\n                  keyExtractor={(item) => item.id.toString()}\n                  style={[\n                    styles.scrollContainer,\n                    isSmallScreen && styles.scrollContainerSmall,\n                  ]}\n                  contentContainerStyle={styles.contentContainer}\n                  scrollEnabled\n                  nestedScrollEnabled\n                  renderItem={({ item }) => {\n                    // console.log(\"item :>> \", item);\n                    return (\n                      <View key={item.id} style={styles.dataItem}>\n                        <View\n                          style={[\n                            styles.itemHeader,\n                            isSmallScreen && styles.samallItemHeader,\n                          ]}\n                        >\n                          <Text\n                            onPress={() =>\n                              naviagtion.navigate(\"Profile\", {\n                                id: item.creator_id,\n                              })\n                            }\n                            style={styles.userInfo}\n                          >\n                            {item?.creator_name}\n                          </Text>\n                          <View style={styles.shareSaveContainer}>\n                            <Pressable onPress={onShare}>\n                              <Image\n                                source={IMAGES.share}\n                                style={styles.iconLarge}\n                              />\n                            </Pressable>\n\n                            <TouchableOpacity\n                              onPress={() => handleSavePost(item.id)}\n                            >\n                              <Image\n                                // key={index}\n                                source={IMAGES.star}\n                                style={{\n                                  width: 20,\n                                  height: 20,\n                                  marginHorizontal: 3,\n                                  tintColor: item.is_saved\n                                    ? undefined\n                                    : \"White\",\n                                }}\n                              />\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n\n                        <View style={styles.itemSubHeader}>\n                          <Image\n                            source={IMAGES.comment}\n                            style={styles.iconTiny}\n                          />\n                          <Text style={styles.commentText}>Comment</Text>\n                        </View>\n\n                        <View style={styles.descriptionWrapper}>\n                          <Text\n                            style={styles.itemDescription}\n                            numberOfLines={2}\n                          >\n                            {item.description}\n                          </Text>\n                        </View>\n\n                        <ImageCarousel\n                          // images={item.media.map((m) => `${ENV.BASE_URL}${m.files}`)}\n                          media={item.media}\n                          showDotIndicator={item.media.length > 1}\n                        />\n\n                        <View\n                          style={[\n                            styles.actionsRow,\n                            { paddingHorizontal: ismobileScreen ? 0 : 20 },\n                          ]}\n                        >\n                          <View style={{ flex: ismobileScreen ? 0 : 1 }}></View>\n                          <TouchableOpacity\n                            style={styles.commentButton}\n                            onPress={() => handleComment(item.id)}\n                          >\n                            <Image\n                              source={IMAGES.comment}\n                              style={styles.iconTiny}\n                            />\n                            <Text style={{ color: \"#fff\" }}>Comment</Text>\n                          </TouchableOpacity>\n                          <View style={styles.likeContainer}>\n                            <TouchableOpacity\n                              onPress={() =>\n                                handleLikeReaction(item.id, \"like\")\n                              }\n                            >\n                              <AntDesign\n                                name={\"like1\"}\n                                color={\n                                  item.liked ? COLORS.likeBlue : COLORS.white\n                                }\n                                size={20}\n                              />\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              onPress={() =>\n                                handleLikeReaction(item.id, \"dislike\")\n                              }\n                            >\n                              <AntDesign\n                                name={\"dislike1\"}\n                                color={\n                                  item.disliked ? COLORS.likeBlue : COLORS.white\n                                }\n                                size={20}\n                              />\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                        {showComment == item.id && (\n                          <View style={styles.commentContainer}>\n                            <View style={styles.commentInput}>\n                              <View style={styles.commentInputText}>\n                                <CustomInputText\n                                  placeholder={\"Comment\"}\n                                  placeholderTextColor={COLORS.lightBlack}\n                                  value={commentText}\n                                  onChangeText={setCommentText}\n                                  keyboardType={\"ascii-capable\"}\n                                />\n                              </View>\n                              <TouchableOpacity\n                                onPress={() =>\n                                  isEditCommment\n                                    ? handleCommentUpdate()\n                                    : handleCommentCreate(item.id)\n                                }\n                                style={styles.commentSubmitBtn}\n                              >\n                                <Text>\n                                  {isEditCommment ? \"Update\" : \"Submit\"}\n                                </Text>\n                              </TouchableOpacity>\n                            </View>\n\n                            <View style={styles.commentBorderDivider}></View>\n\n                            <View style={{ gap: 10 }}>\n                              <Text style={styles.commentTitle}>Comments</Text>\n\n                              {commentsData && commentsData.length > 0 ? (\n                                <FlatList\n                                  data={commentsData}\n                                  // style={{ maxHeight: 200 }}\n                                  contentContainerStyle={styles.flatListContent}\n                                  scrollEnabled={false}\n                                  nestedScrollEnabled={true}\n                                  keyExtractor={(item) => item.id.toString()}\n                                  renderItem={(item) => {\n                                    return (\n                                      <View style={styles.commentBox}>\n                                        <Text style={styles.commentUser}>\n                                          {item.item.user}\n                                        </Text>\n                                        <Text style={styles.commentBoxText}>\n                                          {item.item.text}\n                                        </Text>\n\n                                        <View style={styles.alignCommentIcons}>\n                                          <TouchableOpacity\n                                            onPress={() => {\n                                              handleCommentReaction(\n                                                item.item.id\n                                              );\n                                            }}\n                                          >\n                                            <AntDesign\n                                              name={\"like1\"}\n                                              color={\n                                                item.item.liked_by\n                                                  ? COLORS.likeBlue\n                                                  : COLORS.white\n                                              }\n                                              size={20}\n                                            />\n                                          </TouchableOpacity>\n\n                                          <TouchableOpacity\n                                            onPress={() => {\n                                              handleEditComment(item.item.id);\n                                            }}\n                                          >\n                                            <AntDesign\n                                              name={\"edit\"}\n                                              color={COLORS.white}\n                                              size={20}\n                                            />\n                                          </TouchableOpacity>\n\n                                          <TouchableOpacity\n                                            onPress={() => {\n                                              handleDeleteComment(item.item.id);\n                                            }}\n                                          >\n                                            <AntDesign\n                                              name={\"delete\"}\n                                              color={COLORS.white}\n                                              size={20}\n                                            />\n                                          </TouchableOpacity>\n                                        </View>\n                                      </View>\n                                    );\n                                  }}\n                                  ItemSeparatorComponent={() => (\n                                    <View\n                                      style={[\n                                        styles.commentBorderDivider,\n                                        { height: 20, marginBottom: 10 },\n                                      ]}\n                                    />\n                                  )}\n                                />\n                              ) : (\n                                <View>\n                                  <Text\n                                    style={{\n                                      textAlign: \"center\",\n                                      color: COLORS.white,\n                                    }}\n                                  >\n                                    No comments\n                                  </Text>\n                                </View>\n                              )}\n                            </View>\n                          </View>\n                        )}\n                      </View>\n                    );\n                  }}\n                />\n              )}\n              {/* Video Section */}\n\n              {reelData.length > 0 && (\n                <BlurView\n                  intensity={70}\n                  style={[\n                    styles.sliderContainer,\n                    isSmallScreen && styles.smallSliderContainer,\n                    { marginBottom: 10 },\n                  ]}\n                >\n                  <View style={styles.itemHeader}>\n                    <Text style={styles.userInfo}>Videos for you (reels)</Text>\n                  </View>\n\n                  {/* <FlatList\n                    data={videosReels}\n                    keyExtractor={(item) => item.id.toString()}\n                    scrollEnabled\n                    nestedScrollEnabled\n                    horizontal\n                    renderItem={({ item }) => {\n                      // console.log(\"item :>> \", item);\n                      return item.media.map((videoItem, index) => (\n                        <View key={index} style={styles.videoWrapper}>\n                          <Video\n                            source={{\n                              uri: `${ENV.BASE_URL}${videoItem.files}`,\n                            }}\n                            style={styles.video}\n                            shouldPlay\n                            // resizeMode=\"cover\"\n                            isMuted\n                          />\n                        </View>\n                      ));\n                    }}\n                  /> */}\n                  <FlatList\n                    data={reelData}\n                    renderItem={renderItem}\n                    keyExtractor={(item) => item.id}\n                    horizontal\n                    showsHorizontalScrollIndicator={false}\n                    contentContainerStyle={styles.mobileList}\n                  />\n                </BlurView>\n              )}\n            </View>\n          </BlurView>\n        </View>\n        {fullscreenVisible && selectedMedia && (\n          <Modal visible transparent>\n            <BlurView\n              tint=\"dark\"\n              intensity={70}\n              style={styles.fullscreenContainer}\n            >\n              <TouchableOpacity\n                style={styles.closeButton}\n                onPress={() => setFullscreenVisible(false)}\n              >\n                <Ionicons name=\"close\" size={30} color=\"#fff\" />\n              </TouchableOpacity>\n\n              {selectedMedia.media_type === \"photo\" ? (\n                <Image\n                  source={{ uri: selectedMedia.video_url }}\n                  style={styles.fullscreenImage}\n                />\n              ) : (\n                <Video\n                  source={{ uri: selectedMedia.video_url }}\n                  style={styles.fullscreenImage}\n                  useNativeControls\n                  resizeMode={ResizeMode.COVER}\n                  shouldPlay\n                />\n              )}\n            </BlurView>\n          </Modal>\n        )}\n      </ScrollView>\n    </ImageBackground>\n    //   </View>\n  );\n};\n\nexport default News;\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  container: { flex: 1 },\n  blurViewContainer: {\n    flex: 1,\n    borderRadius: 32,\n    alignItems: \"center\",\n    minHeight: 380,\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  noConetView: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  noConetTxt: {\n    color: COLORS.white,\n    width: \"100%\",\n    textAlign: \"center\",\n    fontSize: 22,\n  },\n  scrollContainerSmall: {\n    width: \"90%\",\n  },\n  scrollContainer: {\n    width: \"60%\",\n    flexGrow: 0,\n  },\n  contentContainer: { width: \"100%\" },\n  dataItem: {\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    padding: 10,\n    marginVertical: 5,\n    borderRadius: 25,\n  },\n  itemHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 5,\n    width: \"100%\",\n    flexWrap: \"nowrap\",\n  },\n  samallItemHeader: {\n    flexWrap: \"wrap\",\n    gap: 5,\n  },\n  userInfo: {\n    color: COLORS.white,\n    fontSize: 24,\n    fontFamily: \"PoppinsSemi\",\n    marginBottom: 10,\n  },\n  shareSaveContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  itemSubHeader: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    gap: 10,\n  },\n  commentText: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n  },\n  itemDescription: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n    marginBottom: 10,\n    width: \"92%\",\n    marginRight: 20,\n  },\n  descriptionWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  actionsRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    paddingHorizontal: 20,\n  },\n  commentButton: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginHorizontal: 20,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    width: 120,\n    maxWidth: 120,\n    minWidth: 100,\n    padding: 5,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 10,\n  },\n  smallDummyPostContainer: {\n    width: \"90%\",\n  },\n  dummyPostContainer: {\n    height: 33,\n    alignItems: \"center\",\n    width: \"60%\",\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    marginLeft: 10,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    marginVertical: 20,\n    padding: 20,\n    flex: 1,\n  },\n  dummyImage: {\n    borderRadius: 25,\n    marginVertical: 10,\n    resizeMode: \"cover\",\n    width: \"100%\",\n  },\n  smallSliderContainer: {\n    width: \"90%\",\n    backgroundColor: \"red\",\n  },\n  sliderContainer: {\n    width: \"60%\",\n    minWidth: 200,\n    padding: 20,\n    borderRadius: 32,\n    paddingBottom: 30,\n    marginTop: 20,\n  },\n  videoWrapper: {\n    marginRight: 30,\n    backgroundColor: \"#fff\",\n    padding: 5,\n    width: 150,\n    borderRadius: 10,\n    overflow: \"hidden\",\n  },\n  video: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n  },\n  iconTiny: {\n    height: 20,\n    width: 20,\n    resizeMode: \"contain\",\n  },\n  iconTinyMargin: {\n    height: 20,\n    width: 20,\n    resizeMode: \"contain\",\n    marginLeft: 10,\n  },\n  iconSmall: {\n    height: 30,\n    width: 30,\n  },\n  iconLarge: {\n    height: 36,\n    width: 36,\n    marginRight: 10,\n  },\n  headerIcons: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  likeContainer: {\n    flexDirection: \"row\",\n    gap: 8,\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n\n  commentContainer: {\n    flex: 1,\n    marginTop: 10,\n    gap: 10,\n    borderRadius: 20,\n    padding: 15,\n  },\n  commentInput: {\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    gap: 10,\n  },\n  commentInputText: {\n    flex: 3,\n    minWidth: 200,\n  },\n  commentSubmitBtn: {\n    flex: 1,\n    width: 80,\n    minWidth: 80,\n    height: 45,\n    padding: 10,\n    borderRadius: 8,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  commentBorderDivider: {\n    borderBottomWidth: 0.5,\n    borderRadius: 10,\n    borderColor: \"#5c5a5a\",\n    marginHorizontal: 20,\n  },\n\n  commentTitle: {\n    color: COLORS.white,\n  },\n  flatListContent: {\n    paddingBottom: 10,\n  },\n  commentBox: {\n    // flex: 1,\n    // backgroundColor: \"red\",\n    paddingLeft: 20,\n    gap: 5,\n  },\n  commentUser: {\n    color: COLORS.white,\n    fontWeight: \"700\",\n    fontSize: 18,\n  },\n  commentBoxText: {\n    paddingLeft: 20,\n    color: COLORS.white,\n    fontSize: 16,\n  },\n  alignCommentIcons: {\n    flexDirection: \"row\",\n    gap: 20,\n    paddingLeft: 20,\n  },\n  reelContainer: {\n    marginRight: 15,\n    // marginBottom:  ? 15 : 0,\n    backgroundColor: \"#f8f8f8\",\n    borderRadius: 16,\n    overflow: \"hidden\",\n    height: 500,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#2D8D9F\",\n  },\n  videoPlaceholder: {\n    height: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    aspectRatio: 16 / 9,\n    // justifyContent: \"flex-end\",\n    // alignItems: \"flex-end\",\n    borderRadius: 8,\n    overflow: \"hidden\",\n    // padding: 10,\n  },\n  progressText: {\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n    color: \"white\",\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4,\n    fontSize: 12,\n  },\n  reelInfo: {\n    padding: 12,\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: \"600\",\n    marginBottom: 4,\n  },\n  subtitle: {\n    fontSize: 12,\n    color: \"#666\",\n    marginBottom: 4,\n  },\n  source: {\n    fontSize: 12,\n    color: \"#999\",\n    marginBottom: 8,\n  },\n  statsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  stats: {\n    fontSize: 12,\n    color: \"#666\",\n  },\n  likes: {\n    fontSize: 12,\n    color: \"#666\",\n  },\n  webList: {\n    paddingBottom: 10,\n  },\n  mobileList: {\n    flexDirection: \"row\",\n  },\n  gradientOverlay: {\n    position: \"absolute\",\n    height: \"100%\",\n    width: \"100%\",\n    bottom: 0,\n  },\n  reactionsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    backgroundColor: \"rgba(0,0,0,0.05)\",\n    borderRadius: 18,\n    marginTop: 8,\n    position: \"absolute\",\n    bottom: 5,\n  },\n  reactionIcon: {\n    width: 18,\n    height: 18,\n    marginRight: -4, // Overlap icons slightly\n    borderRadius: 9, // Circular icons\n    borderWidth: 1,\n    borderColor: COLORS.white,\n  },\n  reactionCount: {\n    marginLeft: 6,\n    fontSize: 12,\n    color: COLORS.white,\n  },\n  fullscreenContainer: {\n    flex: 1,\n    backgroundColor: \"black\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  fullscreenImage: {\n    width: \"40%\",\n    height: \"80%\",\n    alignSelf: \"center\",\n    resizeMode: \"cover\",\n  },\n  closeButton: {\n    position: \"absolute\",\n    top: 40,\n    right: 20,\n    zIndex: 1,\n  },\n});\n",
    "import {\n  Image,\n  ImageBackground,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { IMAGES } from \"../../utills/Utills\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst Exchange = () => {\n  const navigation = useNavigation<any>();\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner />\n        <NavigationBar />\n\n        <View style={styles.bodyContentContainer}>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"Communities\")}\n            style={styles.card}\n          >\n            <Image source={IMAGES.Exchange1} style={styles.image} />\n            <Text style={styles.text}>Community</Text>\n          </TouchableOpacity>\n          <TouchableOpacity\n            onPress={() => navigation.navigate(\"OneToOne\")}\n            style={styles.card}\n          >\n            <Image source={IMAGES.Exchange} style={styles.image} />\n            <Text style={styles.text}>One to one</Text>\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nexport default Exchange;\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  bodyContentContainer: {\n    flex: 1,\n    marginTop: 20,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n    gap: 20,\n  },\n  card: {\n    padding: 10,\n    borderRadius: 10,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n  },\n  image: {\n    height: 150,\n    width: 150,\n    borderRadius: 10,\n  },\n  text: {\n    color: \"#fff\",\n    textAlign: \"center\",\n    marginTop: 10,\n    fontFamily: \"PoppinsSemi\",\n  },\n});\n",
    "import {\n  StyleSheet,\n  View,\n  ScrollView,\n  ImageBackground,\n  useWindowDimensions,\n} from \"react-native\";\nimport React, { useCallback, useState } from \"react\";\nimport { IMAGES } from \"../../utills/Utills\";\nimport Profile from \"../../components/Profile\";\nimport News from \"../../components/News\";\nimport Exchange from \"../Exchange/Exchange\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport { useFocusEffect } from \"@react-navigation/native\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst Home = () => {\n  const [selectedTab, setSelectedTab] = useState(\"Profile\");\n  const [refreshProfile, setRefreshProfile] = useState(0);\n\n  const windowWidth = useWindowDimensions().width;\n  const isSmallScreen = windowWidth < 768;\n  const isMobileScreen = windowWidth < 426;\n\n  useFocusEffect(\n    useCallback(() => {\n      if (selectedTab === \"Profile\") {\n        setRefreshProfile((prev) => prev + 1);\n      }\n    }, [selectedTab])\n  );\n\n  const renderScreen = () => {\n    switch (selectedTab) {\n      case \"News\":\n        return <News />;\n      case \"Profile\":\n        return <Profile />;\n      case \"Exchange\":\n        return <Exchange />;\n      default:\n        return null;\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner />\n        <NavigationBar\n        // selectedTab={selectedTab}\n        // setSelectedTab={setSelectedTab}\n        />\n\n        <View style={{ width: \"100%\" }}>{renderScreen()}</View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\nexport default Home;\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n});\n",
    "import React, { useState } from \"react\";\nimport {\n  TextInput,\n  View,\n  TextInputProps,\n  StyleSheet,\n  Platform,\n  useWindowDimensions,\n  Text,\n  DimensionValue,\n  Pressable,\n  TextStyle,\n  ViewStyle,\n} from \"react-native\";\nimport { COLORS, FONTS } from \"./Utills\";\nimport Entypo from \"react-native-vector-icons/Entypo\";\n\ntype CustomInputProps = {\n  value?: string;\n  placeholder?: string;\n  placeholderTextColor?: string;\n  autoCapitalize?: TextInputProps[\"autoCapitalize\"];\n  keyboardType?: TextInputProps[\"keyboardType\"];\n  onChangeText?: (text: string) => void;\n  maxLength?: number;\n  errorMessage?: string;\n  numOfColumn?: number;\n  isPassword?: boolean;\n  label?: string;\n  inputStyle?: TextStyle | ViewStyle;\n};\n\nconst numberOfColumn = (count: number): string => {\n  switch (count) {\n    case 1:\n      return \"100%\";\n    case 2:\n      return \"48%\";\n    case 3:\n      return \"31%\";\n    case 4:\n      return \"23%\";\n    default:\n      return \"100%\";\n  }\n};\n\nconst CustomInput: React.FC<CustomInputProps> = ({\n  placeholder,\n  placeholderTextColor = COLORS.lightBlack,\n  autoCapitalize = \"none\",\n  keyboardType = \"ascii-capable\",\n  value,\n  onChangeText,\n  errorMessage,\n  maxLength,\n  numOfColumn = 1,\n  isPassword = false,\n  label,\n  inputStyle,\n}) => {\n  const [secureText, setSecureText] = useState(isPassword);\n  const windowWidth = useWindowDimensions();\n  const isLargeScreen = windowWidth.width > 1240;\n  const isSmallScreen = windowWidth.width < 800;\n  const ismobileScreen = windowWidth.width < 426;\n\n  const calculatedWidth = isLargeScreen\n    ? numberOfColumn(numOfColumn)\n    : isSmallScreen\n    ? \"100%\"\n    : numberOfColumn(numOfColumn > 2 ? numOfColumn - 1 : numOfColumn);\n\n  return (\n    <View\n      style={[styles.container, { width: calculatedWidth as DimensionValue }]}\n    >\n      {!!label && (\n        <View style={styles.labelView}>\n          <Text style={styles.labelText}>{label}</Text>\n        </View>\n      )}\n\n      <View style={styles.inputWrapper}>\n        <TextInput\n          autoCapitalize={autoCapitalize}\n          keyboardType={keyboardType}\n          placeholder={placeholder}\n          placeholderTextColor={placeholderTextColor}\n          value={value}\n          onChangeText={onChangeText}\n          maxLength={maxLength}\n          style={[\n            styles.input,\n            inputStyle,\n            Platform.OS === \"web\" && styles.inputWeb,\n          ]}\n          secureTextEntry={secureText}\n          // Add props when needed\n        />\n        {isPassword && (\n          <Pressable\n            onPress={() => setSecureText(!secureText)}\n            style={styles.passwordToggle}\n          >\n            <Entypo\n              name={secureText ? \"eye\" : \"eye-with-line\"}\n              size={24}\n              color={COLORS.black}\n            />\n          </Pressable>\n        )}\n      </View>\n      <View style={styles.errContainer}>\n        {!!errorMessage && <Text style={styles.errText}>{errorMessage}</Text>}\n      </View>\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    alignItems: \"center\",\n  },\n  labelView: {\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 250,\n    paddingBottom: 10,\n    paddingHorizontal: 15,\n  },\n  labelText: {\n    color: COLORS.white,\n    fontSize: 16,\n  },\n  inputWrapper: {\n    position: \"relative\",\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 250,\n  },\n  input: {\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 250,\n    borderRadius: 46,\n    height: 45,\n    paddingHorizontal: 40,\n    fontFamily: FONTS.PoppinsMedium,\n    textAlign: \"center\",\n    backgroundColor: COLORS.white,\n    ...Platform.select({\n      ios: {\n        shadowColor: \"#000\",\n        shadowOffset: { width: 0, height: 2 },\n        shadowOpacity: 0.25,\n        shadowRadius: 3.84,\n      },\n      android: {\n        elevation: 5,\n      },\n      web: {\n        boxShadow: \"0px 2px 4px rgba(0,0,0,0.25)\",\n      },\n    }),\n  },\n  inputWeb: {\n    // outlineStyle: \"none\",\n  },\n  passwordToggle: {\n    position: \"absolute\",\n    zIndex: 10,\n    right: \"4%\",\n    top: 10,\n  },\n  errContainer: {\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 250,\n    height: 15,\n  },\n  errText: {\n    color: \"red\",\n    fontSize: 12,\n  },\n});\n\nexport default CustomInput;\n",
    "import {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacity,\n  StatusBar,\n  ActivityIndicator,\n  ScrollView,\n  Platform,\n  Pressable,\n  ImageBackground,\n} from \"react-native\";\nimport React, { useState } from \"react\";\n\nimport { COLORS, FONTS, IMAGES } from \"../../utills/Utills\";\nimport { API } from \"../../api/api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Banner from \"../../components/Common/Banner\";\nimport CustomInput from \"../../utills/CustomInput\";\nimport { POST } from \"../../utills/Helper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nconst { width } = Dimensions.get(\"screen\");\n\nconst emailRegex = /^[a-zA-Z0-9_.+\\-]+[\\x40][a-zA-Z0-9.\\-]+\\.[a-zA-Z]{2,}$/;\n\nconst Login = ({ navigation }) => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [isLoadingForgotPass, setIsLoadingForgotPass] = useState(false);\n  // const [email, setEmail] = useState(\"admin@gmail.com\");\n  const [email, setEmail] = useState(\"test@yopmail.com\");\n  const [emailError, setEmailError] = useState(\"\");\n  // const [password, setPassword] = useState(\"Admin@123\");\n  const [password, setPassword] = useState(\"Password@1234\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [isForgotPass, setIsForgotPass] = useState(true);\n\n  const handleEmail = (text) => {\n    setEmail(text);\n    setEmailError(\"\");\n    setPasswordError(\"\");\n  };\n\n  const handlePassword = (pass) => {\n    setPassword(pass);\n    setPasswordError(\"\");\n  };\n\n  const handleLogin = async () => {\n    setIsLoading(true);\n    const data = {\n      email,\n      password,\n    };\n    const URL = API.LOGIN;\n\n    try {\n      if (email == \"\") {\n        setEmailError(\"Enter Your Email\");\n        return;\n      } else if (!emailRegex.test(email)) {\n        setEmailError(\"Invalid email\");\n        return;\n      } else if (password == \"\") {\n        setPasswordError(\"Enter Your Password\");\n        return;\n      }\n      const response = await POST(URL, data);\n      console.log(\"Api Token Login\", response.data);\n      const accessToken = response.data.data.access_token;\n\n      await AsyncStorage.setItem(\"access_token\", accessToken);\n      await AsyncStorage.setItem(\"mainProfile\", response.data.data.user_id);\n\n      if (response.data) {\n        console.log(\"User registered successfully\");\n        // navigation.navigate(\"Home\");\n        navigation.navigate(\"MainStack\");\n      }\n    } catch (error) {\n      console.log(\"error login ---\", error);\n      if (\n        error.response.data.message ==\n        \"You are not verified, Please verify your account first.\"\n      ) {\n        console.log(\"it is not verfied account\");\n        setIsForgotPass(false);\n      }\n      if (error.response.data) {\n        setPasswordError(error.response.data?.message);\n      }\n      console.error(\n        \"Registration Error:\",\n        error.response ? error.response.data : error.message\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleForgotPassword = async () => {\n    setIsLoadingForgotPass(true);\n\n    try {\n      const data = { contact: email };\n      const URL = API.FORGOT_PASSWORD_OTP;\n\n      const response = await POST(URL, data);\n      const accessToken = response.data.data.reset_token;\n      await AsyncStorage.setItem(\"verify_access_token\", accessToken);\n      await AsyncStorage.setItem(\"mainProfile\", response.data.data.user_id);\n      if (response.data) {\n        navigation.navigate(\"Otp\", { forgotPassword: true });\n      }\n    } catch (error) {\n      console.log(\"error forgot otp api ---\", error);\n      if (\n        error.response.data.message ==\n          \"Account not found with provided email or phone.\" &&\n        error.response.data.status == 404\n      ) {\n        setEmailError(\"Email not found\");\n      } else if (\n        error.response.data.message == \"Email or phone number is required.\" &&\n        error.response.data.status == 400\n      ) {\n        setEmailError(\"Email is Requied\");\n      }\n    } finally {\n      setIsLoadingForgotPass(false);\n    }\n  };\n\n  const handleVerfiyAccount = async () => {\n    setIsLoadingForgotPass(true);\n    try {\n      const data = { contact: email };\n      const URL = API.RESEND_OTP;\n\n      const response = await POST(URL, data);\n      const accessToken = response.data.data.access_token;\n      await AsyncStorage.setItem(\"verify_access_token\", accessToken);\n\n      if (response.data) {\n        navigation.navigate(\"Otp\");\n      }\n    } catch (error) {\n      console.log(\"error verify otp api ---\", error);\n      if (\n        error.response.data.message ==\n          \"Account not found with provided email or phone.\" &&\n        error.response.data.status == 404\n      ) {\n        setEmailError(\"Email not found\");\n      } else if (\n        error.response.data.message == \"Email or phone number is required.\" &&\n        error.response.data.status == 400\n      ) {\n        setEmailError(\"Email is Requied\");\n      }\n    } finally {\n      setIsLoadingForgotPass(false);\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n      >\n        <Banner />\n\n        <View style={styles.container}>\n          <StatusBar\n            animated\n            barStyle=\"light-content\"\n            backgroundColor=\"transparent\"\n            translucent\n          />\n\n          <Text style={styles.welcomeText}>SignIn</Text>\n          <Text style={styles.instructionsText}>\n            Welcome back to your account\n          </Text>\n\n          <View style={styles.contentContainer}>\n            <CustomInput\n              value={email}\n              onChangeText={(text) => handleEmail(text)}\n              placeholder={\"Email address\"}\n              errorMessage={emailError}\n            />\n\n            <CustomInput\n              value={password}\n              onChangeText={(text) => handlePassword(text)}\n              placeholder={\"Password\"}\n              errorMessage={passwordError}\n              isPassword\n            />\n\n            <TouchableOpacity\n              onPress={() =>\n                isForgotPass ? handleForgotPassword() : handleVerfiyAccount()\n              }\n              style={styles.forgotPassword}\n              disabled={isLoadingForgotPass}\n            >\n              {isLoadingForgotPass ? (\n                <ActivityIndicator color=\"white\" />\n              ) : (\n                <Text style={[styles.forgotPasswordText]}>\n                  {isForgotPass ? \"Forgot your password ?\" : \"Verify Account ?\"}\n                </Text>\n              )}\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              onPress={handleLogin}\n              activeOpacity={0.8}\n              style={styles.signInButton}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <ActivityIndicator color=\"black\" />\n              ) : (\n                <Text style={styles.signInButtonText}>SignIn</Text>\n              )}\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.orContainer}>\n            <View style={styles.divider} />\n            <Text numberOfLines={1} style={[styles.orText]}>\n              Don't have an account\n            </Text>\n            <View style={styles.divider} />\n          </View>\n\n          <Pressable\n            onPress={() => navigation.navigate(\"Register\")}\n            style={styles.signInButton}\n          >\n            <Text style={styles.signInButtonText}>Register New Acoount</Text>\n          </Pressable>\n\n          <Text style={styles.versionText}>Version: 1.0</Text>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  container: {\n    flex: 1,\n    alignItems: \"center\",\n  },\n  welcomeText: {\n    fontWeight: \"700\",\n    fontSize: 30,\n    letterSpacing: 0.84,\n    color: COLORS.primeryWhite,\n    marginTop: Platform.OS === \"web\" ? 20 : 30,\n    fontFamily: FONTS.Playfair,\n  },\n  instructionsText: {\n    fontFamily: FONTS.PoppinsMedium,\n    fontSize: 14,\n    color: COLORS.primeryWhite,\n    marginBottom: 45,\n  },\n  contentContainer: {\n    gap: 10,\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  forgotPassword: {\n    width: 426,\n    minWidth: 250,\n  },\n  forgotPasswordText: {\n    textDecorationLine: \"underline\",\n    fontFamily: FONTS.PoppinsLight,\n    fontWeight: \"500\",\n    fontSize: 14,\n    color: COLORS.white,\n    textAlign: \"right\",\n  },\n  signInButton: {\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 250,\n    borderRadius: 46,\n    height: 45,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1.2,\n    },\n    shadowOpacity: 0.17,\n    shadowRadius: 1,\n    elevation: 5,\n  },\n  signInButtonText: {\n    fontFamily: FONTS.Playfair,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.black,\n  },\n  orContainer: {\n    flexDirection: \"row\",\n    width: Platform.OS === \"web\" ? 345 : width - 92,\n    justifyContent: \"space-between\",\n    height: 30,\n    alignItems: \"center\",\n    paddingVertical: 40,\n  },\n  divider: {\n    height: 1,\n    width: 79,\n    backgroundColor: COLORS.primarybordercolor,\n  },\n  orText: {\n    fontFamily: FONTS.PoppinsLight,\n    fontSize: 14,\n    fontWeight: \"300\",\n    color: COLORS.primarygraycolor,\n  },\n  versionText: {\n    color: COLORS.primarygraycolor,\n    fontFamily: FONTS.PoppinsRegular,\n    fontSize: 13,\n    marginTop: 40,\n  },\n});\nexport default Login;\n",
    "import {\n  Alert,\n  FlatList,\n  Image,\n  Platform,\n  Pressable,\n  Share,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  useWindowDimensions,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { SafeAreaView } from \"react-native-safe-area-context\";\nimport { COLORS, IMAGES } from \"../utills/Utills\";\nimport { BlurView } from \"expo-blur\";\nimport axios from \"axios\";\nimport { API, ENV } from \"../api/api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport ImageCarousel from \"../utills/ImageCarousel\";\nimport CustomInputText from \"../components/CustomInputText\";\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\nimport { ResizeMode, Video } from \"expo-av\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ninterface MediaItem {\n  files: string;\n}\n\ninterface PostItem {\n  id: number;\n  creator: string;\n  description: string;\n  media: MediaItem[];\n}\n\nconst Userwall = ({ id }) => {\n  const [accessToken, setAccessToken] = useState<string | null>(null);\n  const [getPostData, setGetPostData] = useState<PostItem[] | undefined>();\n  const [showComment, setShowComment] = useState<Number | null>();\n  const [commentText, setCommentText] = useState<string | null>(null);\n  const [commentsData, setcommentsData] = useState<any[] | null>([]);\n  const [isEditCommment, setIsEditCommment] = useState<boolean>(false);\n  const [editingCommentId, setEditingCommentId] = useState<number | null>(null);\n  const [postData, setPostData] = useState<PostItem[] | null>([]);\n  const { width: windowWidth } = useWindowDimensions();\n  const isSmallScreen = windowWidth < 800;\n  const ismobileScreen = windowWidth < 426;\n  const [videosReels, setVideosReels] = useState<any | null>([]);\n  const getToken = async () => {\n    const token = await AsyncStorage.getItem(\"access_token\");\n    if (!token) {\n      console.error(\"Access token not found. Please log in again.\");\n      return;\n    }\n    setAccessToken(token);\n  };\n\n  const GetPost = async () => {\n    if (!accessToken) return;\n    try {\n      const response = await axios.get(API.OTHER_CONTENT_LIST + id + \"/\", {\n        headers: {\n          Authorization: `Bearer ${accessToken}`,\n        },\n      });\n      setGetPostData(response.data.data);\n      console.log(\"response.data.data==>>\", response.data.data);\n    } catch (error) {\n      console.error(\"Error get post data:\", error);\n    }\n  };\n  const onShare = async () => {\n    const message = \"Check out this awesome app: https://example.com\";\n\n    if (Platform.OS === \"web\") {\n      if (navigator.share) {\n        try {\n          await navigator.share({\n            title: \"My App\",\n            text: message,\n            url: \"https://example.com\",\n          });\n        } catch (error) {\n          Alert.alert(\"Error\", error.message);\n        }\n      } else {\n        Alert.alert(\n          \"Share not supported\",\n          \"Your browser does not support Web Share API.\"\n        );\n      }\n    } else {\n      try {\n        await Share.share({ message });\n      } catch (error) {\n        Alert.alert(\"Error\", error.message);\n      }\n    }\n  };\n\n  const handleLikeReaction = async (id: number, reaction: string) => {\n    try {\n      const response = await axios.post(\n        `${API.REACTION_CONTENT + id}/`,\n        { action: reaction },\n        {\n          headers: {\n            Authorization: `Bearer ${accessToken}`,\n          },\n        }\n      );\n\n      const res = response.data.data;\n      if (response.status === 200) {\n        const updatedPosts = getPostData.map((item) => {\n          if (item.id === res.post_id) {\n            return {\n              ...item,\n              disliked: res.disliked,\n              liked: res.liked,\n            };\n          }\n          return item;\n        });\n        setGetPostData(updatedPosts);\n      }\n    } catch (error) {\n      console.error(\"res error ===--->>>\", error);\n    }\n  };\n\n  const handleSavePost = async (id: number) => {\n    const updatedPosts = await Promise.all(\n      getPostData.map(async (item) => {\n        if (item.id === id) {\n          if (!item.is_saved) {\n            // Save the post\n            try {\n              const response = await axios.post(\n                `${API.SAVE_CONTENT}`,\n                { content_id: id },\n                {\n                  headers: {\n                    Authorization: `Bearer ${accessToken}`,\n                  },\n                }\n              );\n\n              const res = response.data.data;\n              if (response.status === 201 && item.id === res.content.id) {\n                return { ...item, is_saved: true };\n              }\n            } catch (error) {\n              console.error(\"Error saving content for post ID:\", id, error);\n            }\n          } else {\n            // Unsave the post\n            try {\n              const response = await axios.delete(API.REMOVE_CONTENT, {\n                data: { content_id: id },\n                headers: {\n                  Authorization: `Bearer ${accessToken}`,\n                },\n              });\n\n              const res = response.data.data;\n\n              if (response.status === 204) {\n                return { ...item, is_saved: false };\n              }\n            } catch (error) {\n              console.error(\"Error removing content for post ID:\", id, error);\n            }\n          }\n        }\n\n        // Return original item if no change\n        return item;\n      })\n    );\n    setGetPostData(updatedPosts);\n  };\n\n  const getCommment = async (id: number) => {\n    const config = {\n      method: \"get\",\n      url: `${API.GET_CONTENT_COMMENT}${id}`,\n      headers: {\n        Authorization: `Bearer ${accessToken}`,\n      },\n    };\n\n    try {\n      const response = await axios.request(config);\n      setcommentsData(response.data.data);\n    } catch (error) {\n      console.error(\"error get comment :>> \", error);\n    }\n  };\n  const renderItem = ({ item }) => (\n    <View style={[styles.reelContainer, { width: 300 }]}>\n      {/* Placeholder for video thumbnail */}\n      <View style={styles.videoPlaceholder}>\n        <Video\n          source={{\n            uri: item.video_url,\n          }}\n          style={styles.video}\n          shouldPlay\n          resizeMode=\"cover\"\n          isMuted\n        />\n        <LinearGradient\n          colors={[\n            \"rgba(0,0,0,0.0)\",\n            \"rgba(0,0,0,0.0)\",\n            \"rgba(0,0,0,0.0)\",\n            \"rgba(0,0,0,0.8)\",\n            \"rgba(0,0,0,0.8)\",\n          ]}\n          style={styles.gradientOverlay}\n          start={{ x: 0, y: 0 }} // Top\n          end={{ x: 0, y: 2 }} // Bottom\n        />\n        <View style={styles.reactionsContainer}>\n          <View style={[styles.reactionsContainer, { bottom: 25 }]}>\n            <Image\n              source={{ uri: item?.profile_image }}\n              style={{ height: 25, width: 25, borderRadius: 4 }}\n            />\n            <Text\n              numberOfLines={1}\n              style={{ marginLeft: 10, color: COLORS.white, fontSize: 19 }}\n            >\n              {item?.title}\n            </Text>\n          </View>\n          <View style={styles.reactionsContainer}></View>\n          <Image\n            source={require(\"../assets/images/fbic.png\")}\n            style={styles.reactionIcon}\n          />\n          <Image\n            source={require(\"../assets/images/heart.png\")}\n            style={styles.reactionIcon}\n          />\n          <Image\n            source={require(\"../assets/images/laughIc.webp\")}\n            style={styles.reactionIcon}\n          />\n          <Text style={styles.reactionCount}>1.7K</Text>\n        </View>\n      </View>\n\n      {/* <View style={styles.reelInfo}>\n        <Text style={styles.title} numberOfLines={2}>\n          {item.title}\n        </Text>\n        {item.subtitle && (\n          <Text style={styles.subtitle} numberOfLines={1}>\n            {item.subtitle}\n          </Text>\n        )}\n        <Text style={styles.source}>{item.source}</Text>\n\n        <View style={styles.statsContainer}>\n          {item.stats && <Text style={styles.stats}>{item.stats}</Text>}\n          {item.likes && <Text style={styles.likes}>{item.likes}</Text>}\n        </View>\n      </View> */}\n    </View>\n  );\n\n  const handleComment = (id: number) => {\n    if (showComment == id) {\n      setcommentsData(null);\n      setShowComment(null);\n    } else {\n      setcommentsData(null);\n      getCommment(id);\n      setShowComment(id);\n      setCommentText(null);\n    }\n  };\n\n  const handleCommentReaction = async (comment_id: number) => {\n    const config = {\n      method: \"post\",\n      url: API.CONTENT_COMMENT_REACTION,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      data: { comment_id: comment_id },\n    };\n    try {\n      const response = await axios.request(config);\n\n      const updatedPosts = commentsData.map((item) => {\n        if (item.id === comment_id) {\n          return {\n            ...item,\n            liked_by: response.data.data.liked,\n          };\n        }\n        return item;\n      });\n      setcommentsData(updatedPosts);\n    } catch (error) {\n      console.error(\"error comment reaction :>> \", error);\n    }\n  };\n\n  const handleCommentCreate = async (id: number) => {\n    if (commentText) {\n      setCommentText(\"\");\n      const config = {\n        method: \"post\",\n        url: API.CREATE_CONTENT_COMMENT,\n        headers: {\n          \"Content-Type\": \"application/json\",\n          Accept: \"application/json\",\n          Authorization: `Bearer ${accessToken}`,\n        },\n        data: { content: id, text: commentText },\n      };\n      try {\n        const response = await axios.request(config);\n        const newData = response.data.data;\n        if (commentsData && commentsData.length > 0) {\n          const filteredComments = commentsData?.filter(\n            (item) => item.id !== newData.id\n          );\n          setcommentsData([newData, ...filteredComments]);\n        } else {\n          setcommentsData([newData]);\n        }\n      } catch (error) {\n        console.error(\"error comment create :>> \", error);\n      }\n    } else {\n      console.log(\"Empty input\");\n    }\n  };\n\n  const handleDeleteComment = async (id: number) => {\n    const config = {\n      method: \"delete\",\n      url: `${API.DELETE_CONTENT_COMMENT}${id}/`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n    };\n    try {\n      const response = await axios.request(config);\n      const updatedPosts = commentsData.filter((item) => item.id !== id);\n      setcommentsData(updatedPosts);\n    } catch (error) {\n      console.error(\"error comment reaction :>> \", error);\n    }\n  };\n\n  const handleEditComment = async (id: number) => {\n    setIsEditCommment(true);\n    setEditingCommentId(id);\n    const findComment = commentsData.find((item) => item.id == id);\n    setCommentText(findComment.text);\n  };\n\n  const handleUpdate = async () => {\n    if (!editingCommentId) return;\n\n    setCommentText(null);\n    const config = {\n      method: \"put\",\n      url: `${API.EDIT_CONTENT_COMMENT}${editingCommentId}/`,\n      headers: {\n        \"Content-Type\": \"application/json\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      data: { text: commentText },\n    };\n    try {\n      const response = await axios.request(config);\n      const updatedComments = commentsData.map((item) => {\n        if (item.id === response.data.data.id) {\n          return {\n            ...item,\n            text: response.data.data.text,\n          };\n        }\n        return item;\n      });\n      setcommentsData(updatedComments);\n      // Reset edit mode\n      setIsEditCommment(false);\n      setEditingCommentId(null);\n      setCommentText(\"\");\n    } catch (error) {\n      console.error(\"error comment create :>> \", error);\n    }\n  };\n\n  const videoSection = async () => {\n    const postsWithVideoMedia = [];\n    const postsWithOtherMedia = [];\n\n    getPostData?.forEach((post) => {\n      const videoMedia =\n        post.media?.filter((m) => m.media_type === \"video\") || [];\n      const otherMedia =\n        post.media?.filter((m) => m.media_type !== \"video\") || [];\n\n      if (videoMedia.length > 0) {\n        postsWithVideoMedia.push({ ...post, media: videoMedia });\n      }\n\n      if (otherMedia.length > 0) {\n        postsWithOtherMedia.push({ ...post, media: otherMedia });\n      }\n    });\n    // console.log(\"postsWithVideoMedia :>> \", postsWithVideoMedia);\n    // console.log(\"postsWithOtherMedia :>> \", postsWithOtherMedia);\n    console.log(\n      \"🚀 ~ getPostData?.forEach ~ postsWithVideoMedia:\",\n      postsWithVideoMedia\n    );\n    const sortedPosts = postsWithOtherMedia.sort(\n      (a, b) => new Date(b.updated_at) - new Date(a.updated_at)\n    );\n\n    const onlyFreePosts = postsWithOtherMedia.filter(\n      (post) => post.is_free === true\n    );\n    const Data = await AsyncStorage.getItem(\"mainProfile\");\n    console.log(\"🚀 ~ GetProfile ~ Data:\", Data, \"Data\", id, \"id\");\n    setPostData(Data == id ? postsWithOtherMedia : onlyFreePosts);\n    setVideosReels(postsWithVideoMedia);\n  };\n\n  useEffect(() => {\n    videoSection();\n  }, [getPostData]);\n\n  useEffect(() => {\n    getToken();\n  }, []);\n\n  useEffect(() => {\n    if (accessToken) {\n      GetPost();\n    }\n  }, [accessToken]);\n\n  return (\n    <SafeAreaView style={styles.container}>\n      <View style={styles.innerContainer}>\n        <FlatList\n          data={postData}\n          keyExtractor={(item) => item.id.toString()}\n          style={[\n            styles.scrollContainer,\n            isSmallScreen && styles.scrollContainerSmall,\n          ]}\n          contentContainerStyle={styles.contentContainer}\n          scrollEnabled\n          nestedScrollEnabled\n          renderItem={({ item }) => {\n            return (\n              <View key={item.id} style={styles.dataItem}>\n                <View\n                  style={[\n                    styles.itemHeader,\n                    isSmallScreen && styles.samallItemHeader,\n                  ]}\n                >\n                  <Text style={styles.userInfo}> {item?.creator_name}</Text>\n                  <View style={styles.shareSaveContainer}>\n                    <Pressable onPress={onShare}>\n                      <Image source={IMAGES.share} style={styles.iconLarge} />\n                    </Pressable>\n                    <TouchableOpacity onPress={() => handleSavePost(item.id)}>\n                      <Image\n                        // key={index}\n                        source={IMAGES.star}\n                        style={{\n                          width: 20,\n                          height: 20,\n                          marginHorizontal: 3,\n                          tintColor: item.is_saved ? undefined : \"White\",\n                        }}\n                      />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n\n                <View style={styles.itemSubHeader}>\n                  <Image source={IMAGES.comment} style={styles.iconTiny} />\n                  <Text style={styles.commentText}>Comment</Text>\n                </View>\n\n                <View style={styles.descriptionWrapper}>\n                  <Text style={styles.itemDescription} numberOfLines={2}>\n                    {item.description}\n                  </Text>\n                </View>\n\n                <ImageCarousel\n                  // images={item.media.map((m) => `${ENV.BASE_URL}${m.files}`)}\n                  media={item.media}\n                  showDotIndicator\n                />\n\n                <View\n                  style={[\n                    styles.actionsRow,\n                    { paddingHorizontal: ismobileScreen ? 0 : 20 },\n                  ]}\n                >\n                  <View style={{ flex: ismobileScreen ? 0 : 1 }}></View>\n\n                  <TouchableOpacity\n                    style={styles.commentButton}\n                    onPress={() => handleComment(item.id)}\n                  >\n                    <Image source={IMAGES.comment} style={styles.iconTiny} />\n                    <Text style={{ color: \"#fff\" }}>Comment</Text>\n                  </TouchableOpacity>\n                  <View style={styles.likeContainer}>\n                    <TouchableOpacity\n                      onPress={() => handleLikeReaction(item.id, \"like\")}\n                    >\n                      <AntDesign\n                        name={\"like1\"}\n                        color={item.liked ? COLORS.likeBlue : COLORS.white}\n                        size={20}\n                      />\n                    </TouchableOpacity>\n                    <TouchableOpacity\n                      onPress={() => handleLikeReaction(item.id, \"dislike\")}\n                    >\n                      <AntDesign\n                        name={\"dislike1\"}\n                        color={item.disliked ? COLORS.likeBlue : COLORS.white}\n                        size={20}\n                      />\n                    </TouchableOpacity>\n                  </View>\n                </View>\n                {showComment == item.id && (\n                  <View style={styles.commentContainer}>\n                    <View style={styles.commentInput}>\n                      <View style={styles.commentInputText}>\n                        <CustomInputText\n                          placeholder={\"Comment\"}\n                          placeholderTextColor={COLORS.lightBlack}\n                          value={commentText}\n                          onChangeText={(text) => setCommentText(text)}\n                          keyboardType={\"ascii-capable\"}\n                        />\n                      </View>\n                      <TouchableOpacity\n                        onPress={() =>\n                          isEditCommment\n                            ? handleUpdate()\n                            : handleCommentCreate(item.id)\n                        }\n                        style={styles.commentSubmitBtn}\n                      >\n                        <Text>{isEditCommment ? \"Update\" : \"Submit\"}</Text>\n                      </TouchableOpacity>\n                    </View>\n\n                    <View style={styles.commentBorderDivider}></View>\n\n                    <View style={{ gap: 10 }}>\n                      <Text style={styles.commentTitle}>Comments</Text>\n\n                      {commentsData && commentsData.length > 0 ? (\n                        <FlatList\n                          data={commentsData}\n                          contentContainerStyle={styles.flatListContent}\n                          scrollEnabled={false}\n                          nestedScrollEnabled={true}\n                          keyExtractor={(item) => item.id.toString()}\n                          renderItem={(item) => {\n                            return (\n                              <View style={styles.commentBox}>\n                                <Text style={styles.commentUser}>\n                                  {item.item.user}\n                                </Text>\n                                <Text style={styles.commentBoxText}>\n                                  {item.item.text}\n                                </Text>\n\n                                <View style={styles.alignCommentIcons}>\n                                  <TouchableOpacity\n                                    onPress={() => {\n                                      handleCommentReaction(item.item.id);\n                                    }}\n                                  >\n                                    <AntDesign\n                                      name={\"like1\"}\n                                      color={\n                                        item.item.liked_by\n                                          ? COLORS.likeBlue\n                                          : COLORS.white\n                                      }\n                                      size={20}\n                                    />\n                                  </TouchableOpacity>\n\n                                  <TouchableOpacity\n                                    onPress={() => {\n                                      handleEditComment(item.item.id);\n                                    }}\n                                  >\n                                    <AntDesign\n                                      name={\"edit\"}\n                                      color={COLORS.white}\n                                      size={20}\n                                    />\n                                  </TouchableOpacity>\n\n                                  <TouchableOpacity\n                                    onPress={() => {\n                                      handleDeleteComment(item.item.id);\n                                    }}\n                                  >\n                                    <AntDesign\n                                      name={\"delete\"}\n                                      color={COLORS.white}\n                                      size={20}\n                                    />\n                                  </TouchableOpacity>\n                                </View>\n                              </View>\n                            );\n                          }}\n                          ItemSeparatorComponent={() => (\n                            <View\n                              style={[\n                                styles.commentBorderDivider,\n                                { height: 20, marginBottom: 10 },\n                              ]}\n                            />\n                          )}\n                        />\n                      ) : (\n                        <View>\n                          <Text\n                            style={{\n                              textAlign: \"center\",\n                              color: COLORS.white,\n                            }}\n                          >\n                            No comments\n                          </Text>\n                        </View>\n                      )}\n                    </View>\n                  </View>\n                )}\n              </View>\n            );\n          }}\n        />\n        {videosReels.length > 0 && (\n          <BlurView\n            intensity={70}\n            style={[\n              styles.sliderContainer,\n              isSmallScreen && styles.smallSliderContainer,\n              { marginBottom: 10 },\n            ]}\n          >\n            <View style={styles.itemHeader}>\n              <Text style={styles.userInfo}>Uploaded Videos</Text>\n            </View>\n\n            <FlatList\n              data={videosReels}\n              keyExtractor={(item) => item.id.toString()}\n              scrollEnabled\n              nestedScrollEnabled\n              horizontal\n              renderItem={({ item }) => {\n                // console.log(\"item :>> \", item);\n                return item.media.map((videoItem, index) => (\n                  <View style={[styles.reelContainer, { width: 300 }]}>\n                    {/* Placeholder for video thumbnail */}\n                    <View style={styles.videoPlaceholder}>\n                      <Video\n                        source={{\n                          uri: `${ENV.BASE_URL}${videoItem.files}`,\n                        }}\n                        style={styles.video}\n                        resizeMode={ResizeMode.COVER}\n                        shouldPlay\n                        // resizeMode=\"cover\"\n                        isMuted\n                      />\n                      <LinearGradient\n                        colors={[\n                          \"rgba(0,0,0,0.0)\",\n                          \"rgba(0,0,0,0.0)\",\n                          \"rgba(0,0,0,0.0)\",\n                          \"rgba(0,0,0,0.8)\",\n                          \"rgba(0,0,0,0.8)\",\n                        ]}\n                        style={styles.gradientOverlay}\n                        start={{ x: 0, y: 0 }} // Top\n                        end={{ x: 0, y: 2 }} // Bottom\n                      />\n                      <View style={styles.reactionsContainer}>\n                        <View\n                          style={[styles.reactionsContainer, { bottom: 25 }]}\n                        >\n                          <Image\n                            source={{ uri: videoItem?.profile_image }}\n                            style={{ height: 25, width: 25, borderRadius: 4 }}\n                          />\n                          <Text\n                            numberOfLines={1}\n                            style={{\n                              marginLeft: 10,\n                              color: COLORS.white,\n                              fontSize: 19,\n                            }}\n                          >\n                            {item?.title}\n                          </Text>\n                        </View>\n                        <View style={styles.reactionsContainer}></View>\n                        <Image\n                          source={require(\"../assets/images/fbic.png\")}\n                          style={styles.reactionIcon}\n                        />\n                        <Image\n                          source={require(\"../assets/images/heart.png\")}\n                          style={styles.reactionIcon}\n                        />\n                        <Image\n                          source={require(\"../assets/images/laughIc.webp\")}\n                          style={styles.reactionIcon}\n                        />\n                        <Text style={styles.reactionCount}>1.7K</Text>\n                      </View>\n                    </View>\n\n                    {/* <View style={styles.reelInfo}>\n        <Text style={styles.title} numberOfLines={2}>\n          {item.title}\n        </Text>\n        {item.subtitle && (\n          <Text style={styles.subtitle} numberOfLines={1}>\n            {item.subtitle}\n          </Text>\n        )}\n        <Text style={styles.source}>{item.source}</Text>\n\n        <View style={styles.statsContainer}>\n          {item.stats && <Text style={styles.stats}>{item.stats}</Text>}\n          {item.likes && <Text style={styles.likes}>{item.likes}</Text>}\n        </View>\n      </View> */}\n                  </View>\n                  // <View key={index} style={styles.videoWrapper}>\n                  //   <Video\n                  //     source={{\n                  //       uri: `${ENV.BASE_URL}${videoItem.files}`,\n                  //     }}\n                  //     style={styles.video}\n                  //     shouldPlay\n                  //     // resizeMode=\"cover\"\n                  //     isMuted\n                  //   />\n                  // </View>\n                ));\n              }}\n            />\n            {/* <FlatList\n              data={videosReels}\n              renderItem={renderItem}\n              keyExtractor={(item) => item.id}\n              horizontal\n              showsHorizontalScrollIndicator={false}\n              contentContainerStyle={styles.mobileList}\n            /> */}\n          </BlurView>\n        )}\n      </View>\n    </SafeAreaView>\n  );\n};\n\nexport default Userwall;\n\nconst styles = StyleSheet.create({\n  container: { flex: 1, flexGrow: 1 },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  scrollContainerSmall: {\n    width: \"90%\",\n  },\n  scrollContainer: {\n    width: \"60%\",\n    flexGrow: 0,\n  },\n  contentContainer: { width: \"100%\" },\n  dataItem: {\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    padding: 10,\n    marginVertical: 5,\n    borderRadius: 25,\n  },\n  itemHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 5,\n    width: \"100%\",\n    flexWrap: \"nowrap\",\n  },\n  samallItemHeader: {\n    flexWrap: \"wrap\",\n    gap: 5,\n  },\n  userInfo: {\n    color: COLORS.white,\n    fontSize: 24,\n    fontFamily: \"PoppinsSemi\",\n  },\n  shareSaveContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  itemSubHeader: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    gap: 10,\n  },\n  commentText: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n  },\n  itemDescription: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n    marginBottom: 10,\n    width: \"92%\",\n    marginRight: 20,\n  },\n  descriptionWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  actionsRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n  },\n  commentButton: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginHorizontal: 20,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    width: 120,\n    maxWidth: 120,\n    minWidth: 100,\n    padding: 5,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 10,\n  },\n  iconTiny: {\n    height: 20,\n    width: 20,\n    resizeMode: \"contain\",\n  },\n  iconLarge: {\n    height: 36,\n    width: 36,\n    marginRight: 10,\n  },\n\n  likeContainer: {\n    flexDirection: \"row\",\n    gap: 8,\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n\n  commentContainer: {\n    flex: 1,\n    marginTop: 10,\n    gap: 10,\n    borderRadius: 20,\n    padding: 15,\n  },\n  commentInput: {\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    gap: 10,\n  },\n  commentInputText: {\n    flex: 3,\n    minWidth: 200,\n  },\n  commentSubmitBtn: {\n    flex: 1,\n    width: 80,\n    minWidth: 80,\n    height: 45,\n    padding: 10,\n    borderRadius: 8,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  commentBorderDivider: {\n    borderBottomWidth: 0.5,\n    borderRadius: 10,\n    borderColor: \"#5c5a5a\",\n    marginHorizontal: 20,\n  },\n  commentTitle: {\n    color: COLORS.white,\n  },\n  flatListContent: {\n    paddingBottom: 10,\n  },\n  commentBox: {\n    paddingLeft: 20,\n    gap: 5,\n  },\n  commentUser: {\n    color: COLORS.white,\n    fontWeight: \"700\",\n    fontSize: 18,\n  },\n  commentBoxText: {\n    paddingLeft: 20,\n    color: COLORS.white,\n    fontSize: 16,\n  },\n  alignCommentIcons: {\n    flexDirection: \"row\",\n    gap: 20,\n    paddingLeft: 20,\n  },\n  mobileList: {\n    flexDirection: \"row\",\n  },\n  reelContainer: {\n    marginRight: 15,\n    // marginBottom:  ? 15 : 0,\n    backgroundColor: \"#f8f8f8\",\n    borderRadius: 16,\n    overflow: \"hidden\",\n    height: 500,\n    padding: 10,\n    borderWidth: 1,\n    borderColor: \"#2D8D9F\",\n  },\n  videoPlaceholder: {\n    height: \"100%\",\n    backgroundColor: \"#e0e0e0\",\n    aspectRatio: 16 / 9,\n    // justifyContent: \"flex-end\",\n    // alignItems: \"flex-end\",\n    borderRadius: 8,\n    overflow: \"hidden\",\n    // padding: 10,\n  },\n  progressText: {\n    backgroundColor: \"rgba(0,0,0,0.6)\",\n    color: \"white\",\n    paddingHorizontal: 6,\n    paddingVertical: 2,\n    borderRadius: 4,\n    fontSize: 12,\n  },\n  reelInfo: {\n    padding: 12,\n  },\n  title: {\n    fontSize: 14,\n    fontWeight: \"600\",\n    marginBottom: 4,\n  },\n  subtitle: {\n    fontSize: 12,\n    color: \"#666\",\n    marginBottom: 4,\n  },\n  source: {\n    fontSize: 12,\n    color: \"#999\",\n    marginBottom: 8,\n  },\n  statsContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  stats: {\n    fontSize: 12,\n    color: \"#666\",\n  },\n  likes: {\n    fontSize: 12,\n    color: \"#666\",\n  },\n  smallSliderContainer: {\n    width: \"90%\",\n    backgroundColor: \"red\",\n  },\n  sliderContainer: {\n    width: \"60%\",\n    minWidth: 200,\n    padding: 20,\n    borderRadius: 32,\n    paddingBottom: 30,\n    marginTop: 20,\n  },\n  reactionsContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    backgroundColor: \"rgba(0,0,0,0.05)\",\n    borderRadius: 18,\n    marginTop: 8,\n    position: \"absolute\",\n    bottom: 5,\n  },\n  reactionIcon: {\n    width: 18,\n    height: 18,\n    marginRight: -4, // Overlap icons slightly\n    borderRadius: 9, // Circular icons\n    borderWidth: 1,\n    borderColor: COLORS.white,\n  },\n  reactionCount: {\n    marginLeft: 6,\n    fontSize: 12,\n    color: COLORS.white,\n  },\n  video: {\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n  },\n});\n",
    "import React, { useState } from \"react\";\nimport {\n  Dimensions,\n  Image,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport Publish from \"../components/Publish\";\nimport Serchbox from \"../components/Serchbox\";\nimport { BlurView } from \"expo-blur\";\nimport { FlatGrid } from \"react-native-super-grid\";\nimport { COLORS, IMAGES } from \"../utills/Utills\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst Content = () => {\n  const items = Array(9).fill({ image: IMAGES.Grid }); // Array with 9 identical items\n  const [windowWidth, setWindowWidth] = useState(\n    Dimensions.get(\"window\").width\n  );\n  const isSmallScreen = windowWidth < 800;\n\n  return (\n    <View style={styles.container}>\n      <Publish />\n      <BlurView intensity={70} style={styles.itemHeader}>\n        <Serchbox />\n        <Text style={styles.headerText}>Proposed Membership by the User</Text>\n        <FlatGrid\n          itemDimension={320} // Adjust dimension to fit 3 items per row\n          data={items}\n          spacing={65} // Space between items\n          style={styles.gridView}\n          // numColumns={3}\n          renderItem={({ item }) => (\n            <View style={styles.card}>\n              {/* Image at the top of the card */}\n              <Image source={item.image} style={styles.itemImage} />\n\n              {/* Buttons section */}\n              <LinearGradient\n                colors={[\"#297392\", \"#1c276c\"]}\n                start={{ x: 0, y: 0 }}\n                end={{ x: 1, y: 0 }}\n                style={styles.actions}\n              >\n                {/* Like Button */}\n                <TouchableOpacity style={styles.actionButton}>\n                  <Image source={IMAGES.like} style={styles.actionIcon} />\n                </TouchableOpacity>\n\n                {/* Dislike Button */}\n                <TouchableOpacity style={[styles.actionButton, {}]}>\n                  <Image\n                    source={IMAGES.Dislike}\n                    style={[styles.actionIcon, { tintColor: COLORS.white }]}\n                  />\n                </TouchableOpacity>\n\n                {/* Comment Button */}\n                <TouchableOpacity style={styles.commentButton}>\n                  <Image source={IMAGES.comment} style={styles.actionIcon} />\n                  <Text style={styles.commentText}>Comment</Text>\n                </TouchableOpacity>\n\n                {/* Tip Button */}\n                <TouchableOpacity style={styles.commentButton}>\n                  <Image source={IMAGES.tip} style={styles.actionIcon} />\n                  <Text style={styles.commentText}>Give Tip</Text>\n                </TouchableOpacity>\n              </LinearGradient>\n              <View style={{ position: \"absolute\", left: 15, top: 15 }}>\n                <Image\n                  source={IMAGES.share}\n                  style={{ tintColor: \"#FFFFFF\", height: 24, width: 24 }}\n                />\n              </View>\n            </View>\n          )}\n        />\n      </BlurView>\n    </View>\n  );\n};\n\nexport default Content;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // padding: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  itemHeader: {\n    marginBottom: 20,\n    backgroundColor: \"red\",\n    // padding: 20,\n    borderRadius: 25,\n    width: \"100%\",\n    minWidth: 150,\n    // alignItems: \"center\",\n  },\n  headerText: {\n    textAlign: \"center\",\n    color: \"#fff\",\n    fontSize: 22,\n    marginVertical: 10,\n  },\n  gridView: {\n    // marginTop: 10,\n    // flex: 1,\n    // backgroundColor: \"green\",\n    // alignItems: \"center\",\n    // justifyContent: \"center\",\n  },\n  card: {\n    backgroundColor: \"#fff\",\n    borderRadius: 15,\n    overflow: \"hidden\",\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 4 },\n    shadowOpacity: 0.2,\n    shadowRadius: 5,\n    elevation: 5,\n    // height: 250,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    minWidth: 150,\n    // marginRight: 30,\n    maxWidth: 380,\n  },\n  itemImage: {\n    width: \"100%\",\n    height: 200,\n    resizeMode: \"cover\",\n    borderTopLeftRadius: 15,\n    borderTopRightRadius: 15,\n  },\n  actions: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    padding: 10,\n    backgroundColor: \"red\",\n  },\n  // actionButton: {\n  //   width: 36,\n  //   height: 36,\n  //   borderRadius: 18,\n  //   backgroundColor: \"#ddd\",\n  //   alignItems: \"center\",\n  //   justifyContent: \"center\",\n  //   marginHorizontal: 5,\n  // },\n  actionIcon: {\n    width: 20,\n    height: 20,\n    tintColor: COLORS.white,\n  },\n  commentButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    paddingHorizontal: 10,\n    paddingVertical: 5,\n    borderRadius: 8,\n    // backgroundColor: \"#e0e0e0\",\n  },\n  commentText: {\n    marginLeft: 5,\n    fontSize: 12,\n    color: COLORS.white,\n  },\n});\n",
    "import {\n  Dimensions,\n  FlatList,\n  Image,\n  ImageBackground,\n  SafeAreaView,\n  ScrollView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { COLORS, IMAGES } from \"../utills/Utills\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport Userwall from \"./Userwall\";\nimport Content from \"./Content\";\nimport { BlurView } from \"expo-blur\";\nimport Banner from \"../components/Common/Banner\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nconst { width, height } = Dimensions.get(\"window\");\n\nconst User = ({ route }) => {\n  const { id } = route.params || {};\n  console.log(\"🚀 ~ User ~ id:\", id);\n  const navigation = useNavigation();\n  const [selectedTab, setSelectedTab] = useState(\"User Wall\");\n  const [currentIndex, setCurrentIndex] = useState(0);\n  const [windowWidth, setWindowWidth] = useState(\n    Dimensions.get(\"window\").width\n  );\n\n  useEffect(() => {\n    const handleResize = () => {\n      setWindowWidth(Dimensions.get(\"window\").width);\n    };\n    Dimensions.addEventListener(\"change\", handleResize);\n  }, []);\n\n  const isSmallScreen = windowWidth < 800;\n  const isMobileScreen = windowWidth < 426;\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <ImageBackground style={{ flex: 1, flexGrow: 1 }}>\n        <LinearGradient\n          colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 1 }}\n          style={StyleSheet.absoluteFill}\n        />\n        <ScrollView\n          showsVerticalScrollIndicator={false}\n          style={{ flex: 1 }}\n          contentContainerStyle={{}}\n        >\n          <View style={{ padding: 20 }}>\n            <Banner backNavigation />\n            <View\n              style={{\n                backgroundColor: \"white\",\n                height: 55,\n                width: \"80%\",\n                borderBottomEndRadius: 40,\n                borderBottomStartRadius: 40,\n                minWidth: 230,\n                flexDirection: \"row\",\n                justifyContent: \"space-around\",\n                padding: 2,\n                alignSelf: \"center\",\n              }}\n            >\n              <TouchableOpacity\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  paddingVertical: 10,\n                  backgroundColor:\n                    selectedTab === \"User Wall\" ? \"#2D2B9B\" : \"transparent\",\n                  borderBottomEndRadius: 40,\n                  borderBottomStartRadius: 40,\n                }}\n                onPress={() => setSelectedTab(\"User Wall\")}\n              >\n                <Text\n                  style={{\n                    fontSize: 16,\n                    fontWeight: \"bold\",\n                    color: selectedTab === \"User Wall\" ? \"white\" : \"#000\",\n                  }}\n                >\n                  User Wall\n                </Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={{\n                  flex: 1,\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  paddingVertical: 10,\n                  backgroundColor:\n                    selectedTab === \"Content\" ? \"#2D2B9B\" : \"transparent\",\n                  borderBottomEndRadius: 40,\n                  borderBottomStartRadius: 40,\n                }}\n                onPress={() => setSelectedTab(\"Content\")}\n              >\n                <Text\n                  style={{\n                    fontSize: 16,\n                    fontWeight: \"bold\",\n                    color: selectedTab === \"Content\" ? \"white\" : \"#000\",\n                  }}\n                >\n                  Content\n                </Text>\n              </TouchableOpacity>\n            </View>\n\n            {selectedTab === \"User Wall\" && (\n              <View style={{ flex: 1, width: \"100%\", paddingVertical: 20 }}>\n                <Userwall id={id} />\n              </View>\n            )}\n            {selectedTab === \"Content\" && (\n              <View style={{ flex: 1, width: \"100%\", paddingVertical: 20 }}>\n                <Content />\n              </View>\n            )}\n          </View>\n        </ScrollView>\n      </ImageBackground>\n    </SafeAreaView>\n  );\n};\n\nexport default User;\n\nconst styles = StyleSheet.create({\n  blurViewContainer: {\n    flex: 1,\n    borderRadius: 32,\n    alignItems: \"center\",\n    marginTop: 20,\n    borderWidth: 2,\n  },\n  innerContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    // backgroundColor: \"green\",\n  },\n  dataItem: {\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    padding: 10,\n    marginVertical: 5,\n    width: \"60%\",\n    borderRadius: 25,\n  },\n  itemHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 5,\n  },\n  userInfo: {\n    color: COLORS.white,\n    fontSize: 24,\n    fontFamily: \"PoppinsSemi\",\n  },\n  itemSubHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 10,\n  },\n  commentText: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n  },\n  itemDescription: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n    marginBottom: 10,\n  },\n  sliderContainer: {\n    width: \"60%\",\n    minWidth: 400,\n    padding: 20,\n    borderRadius: 32,\n    paddingBottom: 30,\n  },\n  scrollContainer: {\n    width: \"100%\",\n  },\n  imageContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  imageWrapper: {\n    width: width, // Match screen width for paging\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  image: {\n    width: \"80%\", // Image width as a percentage of screen width\n    height: 200,\n    resizeMode: \"contain\",\n    borderRadius: 8,\n  },\n  paginationContainer: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginTop: 10,\n  },\n  dot: {\n    width: 10,\n    height: 10,\n    borderRadius: 5,\n    backgroundColor: \"gray\",\n    marginHorizontal: 5,\n  },\n  activeDot: {\n    backgroundColor: \"blue\",\n  },\n});\n",
    "import {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacity,\n  StatusBar,\n  ActivityIndicator,\n  ScrollView,\n  Platform,\n  Pressable,\n  ImageBackground,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { COLORS, FONTS, IMAGES } from \"../../utills/Utills\";\nimport { API } from \"../../api/api\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport Banner from \"../../components/Common/Banner\";\nimport CustomInput from \"../../utills/CustomInput\";\nimport { POST } from \"../../utills/Helper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nconst { width } = Dimensions.get(\"screen\");\n\nconst emailRegex = /^[a-zA-Z0-9_.+\\-]+[\\x40][a-zA-Z0-9.\\-]+\\.[a-zA-Z]{2,}$/;\nconst passwordRegex =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>]).{8,}$/;\n\nconst Register = () => {\n  const navigation = useNavigation<any>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [email, setEmail] = useState(\"\");\n  const [phone, setPhone] = useState(\"\");\n  const [phoneError, setPhoneError] = useState(\"\");\n  const [firstname, setFirstName] = useState(\"\");\n  const [firstNameError, setFirstNameError] = useState(\"\");\n  const [lastname, setLastName] = useState(\"\");\n  const [emailError, setEmailError] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const [passwordError, setPasswordError] = useState(\"\");\n  const [isSendOtp, setIsSendOtp] = useState(false);\n\n  useEffect(() => {\n    const checkUnVerifiedUser = async () => {\n      const isUnVerifiedUser = await AsyncStorage.getItem(\"unVerified_User\");\n      if (isUnVerifiedUser) {\n        // navigation.navigate(\"Otp\");\n      }\n    };\n\n    checkUnVerifiedUser();\n  }, []);\n\n  const handleFirstName = (text) => {\n    setFirstName(text);\n    setFirstNameError(\"\");\n  };\n\n  const handleEmail = (text) => {\n    setEmail(text);\n    setEmailError(\"\");\n  };\n\n  const handlePhone = (text) => {\n    if (/^\\d*$/.test(text)) {\n      setPhone(text);\n      setPhoneError(\"\");\n    }\n  };\n\n  const handlePassword = (pass) => {\n    setPassword(pass);\n    setPasswordError(\"\");\n  };\n\n  const registerUser = async () => {\n    setIsLoading(true);\n\n    try {\n      if (firstname == \"\") {\n        setFirstNameError(\"Enter Your First Name\");\n        return;\n      } else if (email == \"\") {\n        setEmailError(\"Enter Your Email\");\n        return;\n      } else if (!emailRegex.test(email)) {\n        setEmailError(\"Invalid email\");\n        return;\n      } else if (phone == \"\") {\n        setPhoneError(\"Enter Your Phone Number\");\n        return;\n      } else if (phone.length !== 10) {\n        setPhoneError(\"Enter only 10 digit Phone Number\");\n        return;\n      } else if (password == \"\") {\n        setPasswordError(\"Enter Your Password\");\n        return;\n      } else if (!passwordRegex.test(password)) {\n        setPasswordError(\n          // \"Enter password at least 8 characters with one uppercaseletter, one lowercase letter, one digit and one symbol.\"\n          \"8+ chars, 1 upper, lower, number & symbol.\"\n        );\n        return;\n      }\n\n      const data = JSON.stringify({\n        email: email,\n        password: password,\n        phone_number: phone,\n        first_name: firstname,\n        last_name: lastname,\n      });\n      const URL = API.SIGN_UP;\n\n      const response = await POST(URL, data);\n      console.log(\n        \"Api Token Register\",\n        JSON.stringify(response.data.data.access_token)\n      );\n      const accessToken = response.data.data.access_token;\n      // await AsyncStorage.setItem(\"access_token\", accessToken);\n      await AsyncStorage.setItem(\"verify_access_token\", accessToken);\n      await AsyncStorage.setItem(\"mainProfile\", response.data.data.user_id);\n\n      if (response.data) {\n        navigation.navigate(\"Otp\");\n      }\n\n      await AsyncStorage.setItem(\"unVerified_User\", data);\n    } catch (error) {\n      console.log(\"error resigster:>> \", error);\n      if (error.response.data.message.email) {\n        console.log(\"error.response.data.message\", error.response.data.message);\n        setEmailError(\n          error.response.data.message.email ==\n            \"User with this email address already exists.\"\n            ? \"User already registered\"\n            : \"\"\n        );\n      } else if (\n        error.response.data.message ==\n          \"User already created. Verify the OTP to activate your account.\" &&\n        error.response.data.status == 400\n      ) {\n        setIsSendOtp(true);\n        setEmailError(\n          \"Account already exists. Please verify the OTP to activate it.\"\n        );\n      }\n\n      console.error(\n        \"Registration Error:\",\n        error.response ? error.response.data : error.message\n      );\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleSendOtp = async () => {\n    setIsLoading(true);\n    try {\n      const data = { contact: email };\n      const URL = API.RESEND_OTP;\n\n      const response = await POST(URL, data);\n      const accessToken = response.data.data.access_token;\n      await AsyncStorage.setItem(\"verify_access_token\", accessToken);\n\n      if (response.data) {\n        navigation.navigate(\"Otp\");\n      }\n    } catch (error) {\n      console.log(\"error login ---\", error);\n      if (\n        error.response.data.message ==\n          \"Account not found with provided email or phone.\" &&\n        error.response.data.status == 404\n      ) {\n        setEmailError(\"Email not found\");\n      } else if (\n        error.response.data.message == \"Email or phone number is required.\" &&\n        error.response.data.status == 400\n      ) {\n        setEmailError(\"Email is Requied\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        showsVerticalScrollIndicator={false}\n        style={styles.scrollableContent}\n      >\n        <Banner backNavigation />\n\n        <View style={styles.container}>\n          <StatusBar\n            animated\n            barStyle=\"light-content\"\n            backgroundColor=\"transparent\"\n            translucent\n          />\n\n          <Text style={styles.welcomeText}>Register</Text>\n          <Text style={styles.instructionsText}>\n            Create your account or login here\n          </Text>\n\n          <View style={styles.contentContainer}>\n            <CustomInput\n              value={firstname}\n              onChangeText={(text) => handleFirstName(text)}\n              placeholder=\"Enter Your First Name\"\n              maxLength={30}\n              errorMessage={firstNameError}\n            />\n\n            <CustomInput\n              value={lastname}\n              onChangeText={(text) => setLastName(text)}\n              placeholder=\"Enter Your Last  Name\"\n              maxLength={30}\n            />\n\n            <CustomInput\n              value={email}\n              onChangeText={(text) => handleEmail(text)}\n              placeholder=\" Enter Your Email address\"\n              errorMessage={emailError}\n            />\n\n            <CustomInput\n              value={phone}\n              onChangeText={(text) => handlePhone(text)}\n              placeholder=\" Enter Phone Number\"\n              errorMessage={phoneError}\n            />\n\n            <CustomInput\n              value={password}\n              onChangeText={(text) => handlePassword(text)}\n              placeholder={\"Enter Password\"}\n              errorMessage={passwordError}\n              isPassword\n            />\n\n            <TouchableOpacity\n              onPress={() => (isSendOtp ? handleSendOtp() : registerUser())}\n              activeOpacity={0.8}\n              style={styles.signInButton}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <ActivityIndicator color=\"black\" />\n              ) : isSendOtp ? (\n                <Text style={styles.signInButtonText}>Send Otp</Text>\n              ) : (\n                <Text style={styles.signInButtonText}>Register</Text>\n              )}\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.orContainer}>\n            <View style={styles.divider} />\n            <Text numberOfLines={1} style={[styles.orText]}>\n              Already have an account\n            </Text>\n            <View style={styles.divider} />\n          </View>\n\n          <Pressable\n            onPress={() => navigation.navigate(\"Login\")}\n            style={styles.signInButton}\n          >\n            <Text style={styles.signInButtonText}>Already have Account</Text>\n          </Pressable>\n\n          <Text style={styles.versionText}>Version: 1.0</Text>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: \"center\",\n  },\n  welcomeText: {\n    fontWeight: \"700\",\n    fontSize: 30,\n    letterSpacing: 0.84,\n    color: COLORS.primeryWhite,\n    marginTop: Platform.OS === \"web\" ? 20 : 30,\n    fontFamily: FONTS.Playfair,\n  },\n  instructionsText: {\n    fontFamily: FONTS.PoppinsMedium,\n    fontSize: 14,\n    color: COLORS.primeryWhite,\n    marginBottom: 45,\n  },\n  contentContainer: {\n    gap: 10,\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  signInButton: {\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 280,\n    borderRadius: 46,\n    height: 45,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1.2,\n    },\n    shadowOpacity: 0.17,\n    shadowRadius: 1,\n    elevation: 5,\n  },\n  signInButtonText: {\n    fontFamily: FONTS.Playfair,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.black,\n  },\n  orContainer: {\n    flexDirection: \"row\",\n    width: Platform.OS === \"web\" ? 355 : width - 92,\n    justifyContent: \"space-between\",\n    height: 30,\n    alignItems: \"center\",\n    paddingVertical: 40,\n  },\n  divider: {\n    height: 1,\n    width: 79,\n    backgroundColor: COLORS.primarybordercolor,\n  },\n  orText: {\n    fontFamily: FONTS.PoppinsLight,\n    fontSize: 14,\n    fontWeight: \"300\",\n    color: COLORS.primarygraycolor,\n  },\n  versionText: {\n    color: COLORS.primarygraycolor,\n    fontFamily: FONTS.PoppinsRegular,\n    fontSize: 13,\n    marginTop: 40,\n  },\n});\n\nexport default Register;\n",
    "import {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  StatusBar,\n  ActivityIndicator,\n  ScrollView,\n  ImageBackground,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport React, { useState } from \"react\";\n\nimport { COLORS, FONTS, IMAGES } from \"../../utills/Utills\";\nimport { API } from \"../../api/api\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { RouteProp, useNavigation, useRoute } from \"@react-navigation/native\";\nimport Banner from \"../../components/Common/Banner\";\nimport CustomInput from \"../../utills/CustomInput\";\nimport { POST } from \"../../utills/Helper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ntype OtpRouteParams = {\n  forgotPassword?: string;\n};\n\nconst Otp = () => {\n  const navigation = useNavigation<any>();\n  const [isLoading, setIsLoading] = useState(false);\n  const [otp, setOtp] = useState(\"\");\n  const [otpError, setOtpError] = useState(\"\");\n\n  const route = useRoute<RouteProp<Record<string, OtpRouteParams>, string>>();\n  const isForgotPassScreen = route.params?.forgotPassword;\n\n  const handleOtp = (value) => {\n    setOtp(value);\n    setOtpError(\"\");\n  };\n\n  const handleOtpSubmit = async () => {\n    setIsLoading(true);\n    const data = { otp };\n    const accessToken = await AsyncStorage.getItem(\"verify_access_token\");\n    if (!accessToken) {\n      console.log(\"Error\", \"Access token not found. Please log in again.\");\n      if (Platform.OS === \"web\") {\n        window.alert(`Alert\\n\\n Access token not found. Please log in again.`);\n      } else {\n        Alert.alert(\"Error\", \"Access token not found. Please log in again.\");\n      }\n      setIsLoading(false);\n      return;\n    }\n    const URL = API.VERIFIY_OTP;\n\n    try {\n      if (otp == \"\") {\n        setOtpError(\"Enter Otp\");\n        return;\n      }\n      const response = await POST(URL, data, accessToken);\n      if (response.data.status === 200) {\n        await AsyncStorage.setItem(\"access_token\", accessToken);\n        await AsyncStorage.removeItem(\"verify_access_token\");\n        // navigation.navigate(\"Home\");\n        navigation.navigate(\"MainStack\");\n      } else {\n        throw new Error(\"Invalid OTP or verification failed.\");\n      }\n      await AsyncStorage.removeItem(\"unVerified_User\");\n    } catch (error) {\n      if (error.response?.data?.status == 400) {\n        setOtpError(\"Invalid Otp\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleOtpForgotPass = async () => {\n    setIsLoading(true);\n    const data = { otp };\n    const accessToken = await AsyncStorage.getItem(\"verify_access_token\");\n    if (!accessToken) {\n      if (Platform.OS === \"web\") {\n        window.alert(`Alert\\n\\n Access token not found. Please log in again.`);\n      } else {\n        console.log(\"Error\", \"Access token not found. Please log in again.\");\n      }\n      setIsLoading(false);\n      return;\n    }\n    const URL = API.VERIFY_FORGOT_PASSWORD_OTP;\n\n    try {\n      if (otp == \"\") {\n        setOtpError(\"Enter Otp\");\n        return;\n      }\n      const response = await POST(URL, data, accessToken);\n\n      if (response.data.status === 200) {\n        navigation.navigate(\"Forgot\");\n      } else {\n        throw new Error(\"Invalid OTP or verification failed.\");\n      }\n      await AsyncStorage.removeItem(\"unVerified_User\");\n    } catch (error) {\n      const errorMessage =\n        error.response?.data?.message ||\n        \"Failed to verify OTP. Please try again.\";\n      Alert.alert(\"Error\", errorMessage);\n      if (error.response?.data?.status == 400) {\n        setOtpError(\"Invalid Otp\");\n      }\n    } finally {\n      setIsLoading(false); // Hide loader\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n      >\n        <Banner backNavigation />\n\n        <View style={styles.container}>\n          <StatusBar\n            animated\n            barStyle=\"light-content\"\n            backgroundColor=\"transparent\"\n            translucent\n          />\n\n          <Text style={styles.welcomeText}>Enter OTP</Text>\n\n          <View style={styles.contentContainer}>\n            <CustomInput\n              value={otp}\n              onChangeText={(text) => handleOtp(text)}\n              placeholder=\"Enter The Otp Sended To Your Email\"\n              errorMessage={otpError}\n            />\n\n            <TouchableOpacity\n              onPress={() =>\n                isForgotPassScreen ? handleOtpForgotPass() : handleOtpSubmit()\n              }\n              activeOpacity={0.8}\n              style={styles.signInButton}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <ActivityIndicator color=\"white\" />\n              ) : (\n                <Text style={styles.signInButtonText}>Submit OTP</Text>\n              )}\n            </TouchableOpacity>\n          </View>\n\n          <Text style={styles.versionText}>Version: 1.0</Text>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: \"center\",\n    paddingTop: 50,\n  },\n  welcomeText: {\n    fontWeight: \"700\",\n    fontSize: 30,\n    letterSpacing: 0.84,\n    color: COLORS.primeryWhite,\n    fontFamily: FONTS.Playfair,\n    paddingVertical: 20,\n  },\n  contentContainer: {\n    gap: 10,\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  signInButton: {\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 250,\n    borderRadius: 46,\n    height: 45,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1.2,\n    },\n    shadowOpacity: 0.17,\n    shadowRadius: 1,\n    elevation: 5,\n  },\n  signInButtonText: {\n    fontFamily: FONTS.Playfair,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.black,\n  },\n  versionText: {\n    color: COLORS.primarygraycolor,\n    fontFamily: FONTS.PoppinsRegular,\n    fontSize: 13,\n    marginTop: 40,\n  },\n});\n\nexport default Otp;\n",
    "import {\n  View,\n  Text,\n  StyleSheet,\n  Dimensions,\n  TouchableOpacity,\n  StatusBar,\n  ActivityIndicator,\n  ScrollView,\n  Platform,\n  Pressable,\n  Image,\n  ImageBackground,\n} from \"react-native\";\nimport React, { useState, useEffect } from \"react\";\nimport { TextInput } from \"react-native\";\n\nimport { COLORS, FONTS, IMAGES } from \"../../utills/Utills\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nconst { width, height } = Dimensions.get(\"screen\");\nconst Restpassword = ({ navigation }) => {\n  const [isActive, setIsActive] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [password1, setPassword1] = useState(\"\");\n  const [password, setPassword] = useState(\"\");\n  const handleresetpass = async () => {\n    try {\n      console.log(\"dflkhjkdf\");\n    } catch (error) {\n      console.log(\"Error Sumiting Otp\", error);\n    }\n  };\n\n  return (\n    <ScrollView\n      keyboardShouldPersistTaps=\"handled\"\n      style={{ backgroundColor: \"white\" }}\n    >\n      <ImageBackground style={{ flex: 1, padding: 20, height: height }}>\n        <LinearGradient\n          colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 1 }}\n          style={StyleSheet.absoluteFill}\n        />\n        <View\n          style={{\n            width: \"90%\",\n            height: 240,\n            borderWidth: 1,\n            borderColor: COLORS.white,\n            borderRadius: 16,\n            alignSelf: \"center\",\n            backgroundColor: \"green\",\n          }}\n        >\n          <Image\n            source={IMAGES.Banner}\n            style={{ height: \"100%\", width: \"100%\", borderRadius: 16 }}\n          />\n          <Text\n            style={{\n              color: COLORS.white,\n              fontFamily: \"PoppinsSemi\",\n              position: \"absolute\",\n              margin: 20,\n            }}\n          >\n            Swiss X-Change\n          </Text>\n        </View>\n\n        <View style={styles.container}>\n          <StatusBar\n            animated\n            barStyle=\"light-content\"\n            backgroundColor=\"transparent\"\n            translucent\n          />\n          <View style={styles.headerView}>\n            <Pressable\n              onPress={() => navigation.goBack()}\n              style={styles.backButton}\n            />\n            {/* <Image source={logoimg} style={styles.logo} /> */}\n          </View>\n          <Text style={styles.welcomeText}>Enter New Password</Text>\n          {/* <Text style={styles.instructionsText}>\n              Create your account or login here\n            </Text> */}\n          <View style={styles.passwordContainer}>\n            <TextInput\n              style={[styles.input, styles.passwordInput]}\n              placeholder={\"Enter New Password\"}\n              // placeholderTextColor={COLORS.primaryGreen}\n              value={password}\n              onChangeText={(text) => setPassword(text)}\n              secureTextEntry={isActive}\n            />\n            <Pressable\n              onPress={() => setIsActive(!isActive)}\n              style={styles.passwordToggle}\n            >\n              <Image\n                source={isActive ? IMAGES.ShowP : IMAGES.HideP}\n                style={{\n                  width: isActive ? 20 : 22,\n                  height: isActive ? 15 : 20,\n                  resizeMode: \"contain\",\n                  tintColor: COLORS.black,\n                }}\n              />\n            </Pressable>\n          </View>\n          <View style={styles.passwordContainer}>\n            <TextInput\n              style={[styles.input, styles.passwordInput]}\n              placeholder={\"Confirm New Password\"}\n              // placeholderTextColor={COLORS.primaryGreen}\n              value={password1}\n              onChangeText={(text) => setPassword1(text)}\n              secureTextEntry={isActive}\n            />\n            <Pressable\n              onPress={() => setIsActive(!isActive)}\n              style={styles.passwordToggle}\n            >\n              <Image\n                source={isActive ? IMAGES.ShowP : IMAGES.HideP}\n                style={{\n                  width: isActive ? 20 : 22,\n                  height: isActive ? 15 : 20,\n                  resizeMode: \"contain\",\n                  tintColor: COLORS.black,\n                }}\n              />\n            </Pressable>\n          </View>\n          <TouchableOpacity\n            onPress={handleresetpass}\n            activeOpacity={0.8}\n            style={styles.signInButton}\n          >\n            {isLoading ? (\n              <ActivityIndicator color=\"white\" />\n            ) : (\n              <Text style={styles.signInButtonText}>Reset Pasword</Text>\n            )}\n          </TouchableOpacity>\n        </View>\n      </ImageBackground>\n    </ScrollView>\n  );\n};\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    // backgroundColor: COLORS.primeryWhite,\n    padding: 20,\n    alignItems: \"center\",\n    // backgroundColor: \"green\",\n    marginTop: 40,\n  },\n  headerView: {\n    width: \"100%\",\n    flexDirection: \"row\",\n    marginTop: Platform.OS === \"web\" ? 0 : 30,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  backButton: {\n    height: 24,\n    width: 24,\n    position: \"absolute\",\n    left: 0,\n    top: 7,\n  },\n  logo: {\n    width: 66,\n    height: 64,\n  },\n  welcomeText: {\n    fontWeight: \"700\",\n    fontSize: 30,\n    letterSpacing: 0.84,\n    color: COLORS.primeryWhite,\n    marginTop: Platform.OS === \"web\" ? 20 : 30,\n    fontFamily: FONTS.Playfair,\n  },\n  instructionsText: {\n    fontFamily: FONTS.PoppinsMedium,\n    fontSize: 14,\n    // fontWeight: \"500\",\n    color: COLORS.primeryWhite,\n    marginBottom: 45,\n  },\n  input: {\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 325,\n    //   borderWidth: 1,\n    borderRadius: 46,\n    height: 45,\n    paddingLeft: 20,\n    paddingRight: 20,\n    marginTop: 14,\n    borderColor: COLORS.primarybordercolor,\n    fontFamily: FONTS.PoppinsMedium,\n    textAlign: \"center\",\n    backgroundColor: COLORS.white,\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 3.84,\n    outlineColor: \"white\",\n    outlineStyle: \"none\",\n\n    elevation: 5,\n  },\n  passwordInput: {\n    width: \"100%\",\n  },\n  inputWeb: {\n    outlineColor: \"white\",\n    outlineStyle: \"none\",\n  },\n  errorText: {\n    fontSize: 10,\n    color: \"red\",\n    fontFamily: FONTS.PoppinsMedium,\n    marginVertical: 5,\n    textAlign: \"left\",\n  },\n  passwordContainer: {\n    flexDirection: \"row\",\n    width: Platform.OS === \"web\" ? \"50%\" : width - 92,\n    maxWidth: 436,\n    minWidth: 325,\n    alignItems: \"center\",\n    outlineColor: \"white\",\n    outlineStyle: \"none\",\n  },\n\n  passwordToggle: {\n    position: \"absolute\",\n    height: 22,\n    width: 22,\n    right: \"5%\",\n    top: 28,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    // backgroundColor:\"red\"\n  },\n  toggleImage: {\n    height: 20,\n    width: 20,\n  },\n  rememberMeContainer: {\n    flexDirection: \"row\",\n    width: Platform.OS === \"web\" ? \"50%\" : width - 92,\n    maxWidth: 436,\n    minWidth: 325,\n    marginTop: 10,\n    alignItems: \"center\",\n  },\n  checkbox: {\n    height: 16,\n    width: 16,\n    marginRight: -6,\n  },\n  rememberMeText: {\n    fontFamily: FONTS.PoppinsRegular,\n    fontSize: 14,\n    fontWeight: \"400\",\n    color: COLORS.primarygraycolor,\n    marginLeft: \"3%\",\n  },\n  forgotPassword: {\n    marginTop: 33,\n  },\n  forgotPasswordText: {\n    textDecorationLine: \"underline\",\n    fontFamily: FONTS.PoppinsLight,\n    fontWeight: \"500\",\n    fontSize: 14,\n    color: COLORS.darkpurple,\n  },\n  signInButton: {\n    marginTop: Platform.OS === \"web\" ? 20 : 37,\n    width: Platform.OS === \"web\" ? \"50%\" : width - 92,\n    maxWidth: 436,\n    minWidth: 325,\n    borderRadius: 46,\n    height: 45,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1.2,\n    },\n    shadowOpacity: 0.17,\n    shadowRadius: 1,\n\n    elevation: 5,\n  },\n  signInButtonText: {\n    fontFamily: FONTS.Playfair,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.black,\n  },\n  orContainer: {\n    flexDirection: \"row\",\n    width: Platform.OS === \"web\" ? 345 : width - 92,\n    justifyContent: \"space-between\",\n    height: 30,\n    alignItems: \"center\",\n    marginTop: 34,\n  },\n  divider: {\n    height: 1,\n    width: 79,\n    backgroundColor: COLORS.primarybordercolor,\n  },\n  orText: {\n    fontFamily: FONTS.PoppinsLight,\n    fontSize: 14,\n    fontWeight: \"300\",\n    color: COLORS.primarygraycolor,\n  },\n  googleButton: {\n    height: 45,\n    width: Platform.OS === \"web\" ? \"50%\" : width - 92,\n    maxWidth: 436,\n    minWidth: 325,\n    borderRadius: 46,\n    borderWidth: 1,\n    borderColor: COLORS.primarybordercolor,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    flexDirection: \"row\",\n    marginTop: 13,\n  },\n  googleIcon: {\n    height: 20,\n    width: 20,\n    marginRight: 20,\n  },\n  googleButtonText: {\n    fontFamily: FONTS.PoppinsMedium,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.black,\n  },\n  signUpPrompt: {\n    marginTop: Platform.OS === \"web\" ? 48 : \"10%\",\n  },\n  signUpText: {\n    fontFamily: FONTS.PoppinsRegular,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.primarygraycolor,\n  },\n  signUpLink: {\n    color: COLORS.primary,\n  },\n  header: {\n    height: 100,\n    backgroundColor: \"red\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1.2,\n    },\n    shadowOpacity: 30,\n    shadowRadius: 1,\n\n    elevation: 5,\n  },\n  headText: {\n    color: \"#6B7294\",\n    textAlign: \"center\",\n    fontSize: Platform.OS == \"web\" ? 15 : 12,\n    fontFamily: FONTS.PoppinsLight,\n  },\n  LoginButton: {\n    width: 97,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: COLORS.primaryGreen,\n    paddingVertical: 6,\n    borderRadius: 32,\n  },\n});\n\nexport default Restpassword;\n",
    "import {\n  View,\n  Text,\n  StyleSheet,\n  TouchableOpacity,\n  StatusBar,\n  ActivityIndicator,\n  ScrollView,\n  ImageBackground,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport React, { useState } from \"react\";\nimport { COLORS, FONTS, IMAGES } from \"../../utills/Utills\";\nimport Banner from \"../../components/Common/Banner\";\nimport CustomInput from \"../../utills/CustomInput\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { API } from \"../../api/api\";\nimport { useNavigation } from \"@react-navigation/native\";\nimport { POST } from \"../../utills/Helper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\nconst passwordRegex =\n  /^(?=.*[a-z])(?=.*[A-Z])(?=.*\\d)(?=.*[!@#$%^&*(),.?\":{}|<>]).{8,}$/;\n\nconst Forgot = () => {\n  const [isActive, setIsActive] = useState(true);\n  const [isLoading, setIsLoading] = useState(false);\n  const [newPassword, setNewPassword] = useState(\"\");\n  const [confirmPassword, setConfirmPassword] = useState(\"\");\n  const [newPasswordErr, setNewPasswordErr] = useState(\"\");\n  const [confirmPasswordErr, setConfirmPasswordErr] = useState(\"\");\n\n  const navigation = useNavigation<any>();\n\n  const handlePassword = (pass) => {\n    setNewPassword(pass.trim());\n    setNewPasswordErr(\"\");\n    setConfirmPasswordErr(\"\");\n  };\n\n  const handleConfirmPassword = (cPass) => {\n    setConfirmPassword(cPass.trim());\n    setConfirmPasswordErr(\"\");\n    setNewPasswordErr(\"\");\n  };\n  const handleCreateNewPassword = async () => {\n    setIsLoading(true);\n    const data = {\n      new_password: newPassword,\n      confirm_new_password: confirmPassword,\n    };\n    // const accessToken = await AsyncStorage.getItem(\"access_token\");\n    const accessToken = await AsyncStorage.getItem(\"verify_access_token\");\n    if (!accessToken) {\n      if (Platform.OS === \"web\") {\n        window.alert(`Alert\\n\\nAccess token not found. Please log in again.`);\n      } else {\n        console.log(\"Error\", \"Access token not found. Please log in again.\");\n      }\n      setIsLoading(false);\n      return;\n    }\n    const URL = API.UPDATE_FORGOT_PASSWORD;\n\n    try {\n      if (newPassword == \"\") {\n        setNewPasswordErr(\"Password requied\");\n        return;\n      } else if (!passwordRegex.test(newPassword)) {\n        setNewPasswordErr(\"8+ chars, 1 upper, lower, number & symbol.\");\n        return;\n      } else if (confirmPassword !== newPassword) {\n        setConfirmPasswordErr(\"Password not matched\");\n        return;\n      }\n      const response = await POST(URL, data, accessToken);\n      if (response.data.status === 200) {\n        navigation.navigate(\"Login\");\n      }\n    } catch (error) {\n      if (\n        error.response.data.code == \"token_not_valid\" ||\n        error.status == 401\n      ) {\n        setNewPasswordErr(\"Token is invalid or expired\");\n      }\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n      >\n        <Banner backNavigation />\n\n        <View style={styles.container}>\n          <StatusBar\n            animated\n            barStyle=\"light-content\"\n            backgroundColor=\"transparent\"\n            translucent\n          />\n\n          <Text style={styles.welcomeText}>Create New Password</Text>\n\n          <View style={styles.contentContainer}>\n            <CustomInput\n              value={newPassword}\n              onChangeText={(text) => handlePassword(text)}\n              placeholder=\"Enter New Password\"\n              errorMessage={newPasswordErr}\n              isPassword\n            />\n\n            <CustomInput\n              value={confirmPassword}\n              onChangeText={(text) => handleConfirmPassword(text)}\n              placeholder=\"Enter Confirm Password\"\n              errorMessage={confirmPasswordErr}\n              isPassword\n            />\n\n            <TouchableOpacity\n              onPress={() => handleCreateNewPassword()}\n              activeOpacity={0.8}\n              style={styles.signInButton}\n              disabled={isLoading}\n            >\n              {isLoading ? (\n                <ActivityIndicator color=\"black\" />\n              ) : (\n                <Text style={styles.signInButtonText}>Submit</Text>\n              )}\n            </TouchableOpacity>\n          </View>\n\n          <Text style={styles.versionText}>Version: 1.0</Text>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  container: {\n    flex: 1,\n    padding: 20,\n    alignItems: \"center\",\n    paddingTop: 50,\n  },\n  welcomeText: {\n    fontWeight: \"700\",\n    fontSize: 30,\n    letterSpacing: 0.84,\n    color: COLORS.primeryWhite,\n    fontFamily: FONTS.Playfair,\n    paddingVertical: 20,\n  },\n  contentContainer: {\n    gap: 10,\n    width: \"100%\",\n    alignItems: \"center\",\n  },\n  signInButton: {\n    width: \"100%\",\n    maxWidth: 436,\n    minWidth: 250,\n    borderRadius: 46,\n    height: 45,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1.2,\n    },\n    shadowOpacity: 0.17,\n    shadowRadius: 1,\n    elevation: 5,\n  },\n  signInButtonText: {\n    fontFamily: FONTS.Playfair,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.black,\n  },\n  versionText: {\n    color: COLORS.primarygraycolor,\n    fontFamily: FONTS.PoppinsRegular,\n    fontSize: 13,\n    marginTop: 40,\n  },\n});\n\nexport default Forgot;\n",
    "import {\n  ActivityIndicator,\n  Image,\n  ImageBackground,\n  Platform,\n  ScrollView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  useWindowDimensions,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { COLORS, FONTS, IMAGES } from \"../utills/Utills\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { API, ENV } from \"../api/api\";\nimport CustomInput from \"../utills/CustomInput\";\nimport Banner from \"./Common/Banner\";\nimport MaterialIcons from \"react-native-vector-icons/MaterialIcons\";\nimport Entypo from \"react-native-vector-icons/Entypo\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ntype RouteParams = {\n  userData: {\n    first_name: string | null;\n    last_name: string | null;\n    county_domicile: string | null;\n    languages_spoken: string | null;\n    tarif_per_hour: string | null;\n    purpose_of_life: string | null;\n    hobbies: string | null;\n    user: number | null;\n    facebook_url: string | null;\n    linkedin_url: string | null;\n    twitter_url: string | null;\n    instagram_url: string | null;\n\n    // Add other fields you expect in userData\n  };\n};\n\ntype UserDetails = {\n  first_name: string;\n  last_name: string;\n  county_domicile: string;\n  languages_spoken: string;\n  tarif_per_hour: string;\n  purpose_of_life: string;\n  hobbies: string;\n  user: number;\n  facebook_url: string;\n  linkedin_url: string;\n  twitter_url: string;\n  instagram_url: string;\n};\n\ntype ProfessionalExperience = {\n  title: string;\n  organization: string;\n  duration: string;\n  description: string;\n  job_role: string;\n  job_field: string;\n  job_Duration: string;\n  job_Description: string;\n};\n\ntype UserErrors = {\n  first_nameErr: string | null;\n  last_nameErr: string | null;\n  county_domicileErr: string | null;\n  hobbiesErr: string | null;\n  languages_spokenErr: string | null;\n  purpose_of_lifeErr: string | null;\n};\n\ntype MyImage = {\n  uri?: string;\n  base64?: string;\n  name?: string;\n  media_type?: string;\n};\n\nconst EditProfile = () => {\n  const route = useRoute<any>();\n  const { userData } = route.params;\n  console.log(\"🚀 ~ EditProfile ~ userData:\", userData);\n\n  const [images, setImages] = useState<MyImage>({});\n\n  const [userDetails, setUserDetails] = useState<UserDetails>({\n    first_name: userData?.first_name,\n    last_name: userData?.last_name,\n    county_domicile: userData?.county_domicile,\n    languages_spoken: userData?.languages_spoken,\n    tarif_per_hour: userData?.tarif_per_hour,\n    purpose_of_life: userData?.purpose_of_life,\n    hobbies: userData?.hobbies,\n    user: userData?.user,\n    facebook_url: userData?.facebook_url,\n    linkedin_url: userData?.linkedin_url,\n    twitter_url: userData?.twitter_url,\n    instagram_url: userData?.instagram_url,\n  });\n\n  const [professional_experience, setProfessional_experience] = useState<\n    ProfessionalExperience[]\n  >(\n    Array.isArray(userData?.professional_experience) &&\n      userData.professional_experience.length > 0\n      ? userData.professional_experience\n      : [\n          {\n            title: \"\",\n            organization: \"\",\n            duration: \"\",\n            description: \"\",\n            job_role: \"\",\n            job_field: \"\",\n            job_Duration: \"\",\n            job_Description: \"\",\n          },\n        ]\n  );\n\n  const [userErrors, setUserErrors] = useState<UserErrors>({\n    first_nameErr: null,\n    last_nameErr: null,\n    county_domicileErr: null,\n    languages_spokenErr: null,\n    purpose_of_lifeErr: null,\n    hobbiesErr: null,\n  });\n  // const [gender, setGender] = useState(\"1\");\n\n  const [isLoading, setIsLoading] = useState(false);\n\n  const windowWidth = useWindowDimensions().width;\n  const isLargeScreen = windowWidth < 1300;\n  const isSmallScreen = windowWidth < 800;\n  const ismobileScreen = windowWidth < 426;\n\n  const navigation = useNavigation<any>();\n\n  useEffect(() => {}, []);\n\n  const handleUserChange = (key: keyof UserDetails, value: string) => {\n    setUserDetails((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  // const handleExperienceChange = (\n  //   key: keyof ProfessionalExperience,\n  //   value: string\n  // ) => {\n  //   setProfessional_experience((prev) => ({\n  //     ...prev,\n  //     [key]: value,\n  //   }));\n  // };\n\n  const handleExperienceChange = (\n    index: number,\n    key: keyof ProfessionalExperience,\n    value: string\n  ) => {\n    const updated = [...professional_experience];\n    updated[index][key] = value;\n    setProfessional_experience(updated);\n  };\n\n  const setError = (key: keyof UserErrors, value: string | null) => {\n    setUserErrors((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  const addExperience = () => {\n    setProfessional_experience((prev) => [\n      ...prev,\n      {\n        title: \"\",\n        organization: \"\",\n        duration: \"\",\n        description: \"\",\n        job_role: \"\",\n        job_field: \"\",\n        job_Duration: \"\",\n        job_Description: \"\",\n      },\n    ]);\n  };\n\n  const removeExperience = (removeIndex) => {\n    const updateData = professional_experience.filter(\n      (_, index) => index !== removeIndex\n    );\n    setProfessional_experience(updateData);\n  };\n\n  // const handleUPdateProfile = async () => {\n  //   setIsLoading(true);\n  //   if (userDetails.first_name == \"\") {\n  //     setError(\"first_nameErr\", \"Enter Your Name\");\n  //     setIsLoading(false);\n  //     return;\n  //   } else if (userDetails.county_domicile == \"\") {\n  //     setError(\"county_domicileErr\", \"Enter Country Domicile\");\n  //     setIsLoading(false);\n  //     return;\n  //   } else if (userDetails.languages_spoken == \"\") {\n  //     setError(\"languages_spokenErr\", \"Enter Languages Spoken\");\n  //     setIsLoading(false);\n  //     return;\n  //   } else if (userDetails.purpose_of_life == \"\") {\n  //     setError(\"purpose_of_lifeErr\", \"Purpose of Life\");\n  //     setIsLoading(false);\n  //     return;\n  //   } else if (userDetails.hobbies == \"\") {\n  //     setError(\"hobbiesErr\", \"Enter Your Hobbies\");\n  //     setIsLoading(false);\n  //     return;\n  //   }\n\n  //   const accessToken = await AsyncStorage.getItem(\"access_token\");\n  //   console.log(\"🚀 ~ GetProfile ~ accessToken Home:\", accessToken);\n\n  //   if (!accessToken) {\n  //     console.error(\"No access token found in AsyncStorage\");\n  //     setIsLoading(false);\n  //     return;\n  //   }\n\n  //   const data = {\n  //     first_name: userDetails.first_name,\n  //     last_name: userDetails.last_name,\n  //     county_domicile: userDetails.county_domicile,\n  //     languages_spoken: userDetails.languages_spoken,\n  //     tarif_per_hour: userDetails.tarif_per_hour,\n  //     purpose_of_life: userDetails.purpose_of_life,\n  //     hobbies: userDetails.hobbies,\n  //     user: userDetails.user,\n  //     professional_experience,\n  //   };\n\n  //   const config = {\n  //     method: \"put\",\n  //     url: API.EDIT_PROFILE,\n  //     headers: {\n  //       \"Content-Type\": \"application/json\",\n  //       Accept: \"application/json\",\n  //       Authorization: `Bearer ${accessToken}`,\n  //     },\n  //     data,\n  //   };\n\n  //   try {\n  //     const response = await axios.request(config);\n  //     if (response?.data?.message) {\n  //       // navigation.navigate(\"Home\");\n  //       navigation.navigate(\"Profile\");\n  //       console.log(\"Profile updated successfully\");\n  //     }\n  //   } catch (error) {\n  //     console.error(\"Error Update profile:\", error);\n  //   } finally {\n  //     setIsLoading(false);\n  //   }\n  // };\n\n  const handleUPdateProfile = async () => {\n    setIsLoading(true);\n\n    if (userDetails.first_name == \"\") {\n      setError(\"first_nameErr\", \"Enter Your Name\");\n      setIsLoading(false);\n      return;\n    } else if (userDetails.county_domicile == \"\") {\n      setError(\"county_domicileErr\", \"Enter Country Domicile\");\n      setIsLoading(false);\n      return;\n    } else if (userDetails.languages_spoken == \"\") {\n      setError(\"languages_spokenErr\", \"Enter Languages Spoken\");\n      setIsLoading(false);\n      return;\n    } else if (userDetails.purpose_of_life == \"\") {\n      setError(\"purpose_of_lifeErr\", \"Purpose of Life\");\n      setIsLoading(false);\n      return;\n    } else if (userDetails.hobbies == \"\") {\n      setError(\"hobbiesErr\", \"Enter Your Hobbies\");\n      setIsLoading(false);\n      return;\n    }\n\n    const accessToken = await AsyncStorage.getItem(\"access_token\");\n\n    if (!accessToken) {\n      console.error(\"No access token found\");\n      setIsLoading(false);\n      return;\n    }\n\n    // const filteredExperience = professional_experience.filter((exp, index) => {\n\n    //   if (index === 0) return true;\n    //   return Object.values(exp).some(\n    //     (val) => val != null && String(val).trim() !== \"\"\n    //   );\n    // });\n\n    const filteredExperience = (() => {\n      if (\n        professional_experience.length === 1 &&\n        Object.values(professional_experience[0]).every(\n          (val) => val == null || String(val).trim() === \"\"\n        )\n      ) {\n        return [];\n      }\n\n      return professional_experience.filter((exp, index) => {\n        if (index === 0) return true;\n        return Object.values(exp).some(\n          (val) => val != null && String(val).trim() !== \"\"\n        );\n      });\n    })();\n\n    console.log(\"JSON.stringify(filteredExperience) :>> \", filteredExperience);\n\n    const formData = new FormData();\n\n    Object.entries(userDetails).forEach(([key, value]) => {\n      formData.append(key, value == null ? \"\" : String(value));\n    });\n\n    if (Platform.OS === \"web\" && images.uri) {\n      const response = await fetch(images.uri);\n      const blob = await response.blob();\n      formData.append(\"avatar\", blob, images.name);\n    }\n\n    formData.append(\n      \"professional_experience\",\n      JSON.stringify(filteredExperience)\n    );\n\n    const config = {\n      method: \"put\",\n      url: API.EDIT_PROFILE,\n      headers: {\n        \"Content-Type\": \"multipart/form-data\",\n        Accept: \"application/json\",\n        Authorization: `Bearer ${accessToken}`,\n      },\n      data: formData,\n    };\n\n    try {\n      const response = await axios.request(config);\n      if (response?.data?.message) {\n        navigation.navigate(\"Profile\");\n        console.log(\"Profile updated successfully\");\n      }\n    } catch (error) {\n      console.error(\"Error Update profile:\", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleImageSelection = async () => {\n    const permissionResult =\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (permissionResult.granted === false) {\n      alert(\"Permission to access media library is required!\");\n      return;\n    }\n\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: [\"images\"],\n      allowsMultipleSelection: false,\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.canceled) {\n      console.log(\"result===>>>\", result);\n      const selectedImages = result.assets.map((asset) => ({\n        uri: asset.uri,\n        base64: asset.base64,\n        name: asset.fileName,\n        media_type: \"photo\",\n      }));\n      console.log(\"🚀 ~ selectedImages ~ selectedImages:\", selectedImages[0]);\n\n      setImages(selectedImages[0]);\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <StatusBar />\n      <ScrollView\n        showsVerticalScrollIndicator={false}\n        style={{ flex: 1, width: \"100%\" }}\n        contentContainerStyle={{ paddingVertical: 20 }}\n      >\n        <Banner backNavigation />\n\n        <View style={styles.bodyConatiner}>\n          <Text style={styles.welcomeText}>Edit Profile</Text>\n\n          <View style={{ gap: 20 }}>\n            <View\n              style={{\n                width: 150,\n                height: 150,\n                borderRadius: 200,\n                backgroundColor: COLORS.white,\n                overflow: \"hidden\",\n              }}\n            >\n              <Image\n                source={{\n                  uri: images?.uri\n                    ? images?.uri\n                    : userData?.avatar\n                    ? ENV.BASE_URL + userData?.avatar\n                    : \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png?20150327203541\",\n                }}\n                style={styles.imageStyle}\n                resizeMode=\"cover\"\n              />\n            </View>\n            <TouchableOpacity\n              onPress={() => handleImageSelection()}\n              style={{\n                backgroundColor: COLORS.white,\n                padding: 10,\n                paddingHorizontal: 20,\n                borderRadius: 8,\n              }}\n            >\n              <Text style={{ color: COLORS.black }}>Setect image</Text>\n            </TouchableOpacity>\n          </View>\n\n          <View style={styles.container}>\n            <CustomInput\n              value={userDetails.first_name}\n              onChangeText={(text) => [\n                handleUserChange(\"first_name\", text),\n                setError(\"first_nameErr\", null),\n              ]}\n              placeholder={\"Enter Your Name\"}\n              maxLength={30}\n              errorMessage={userErrors.first_nameErr}\n              numOfColumn={3}\n              label={\"First Name\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={userDetails.last_name}\n              onChangeText={(text) => handleUserChange(\"last_name\", text)}\n              placeholder={\"Enter Your Name\"}\n              maxLength={30}\n              numOfColumn={3}\n              label={\"Last Name\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={userDetails.county_domicile}\n              onChangeText={(text) => [\n                handleUserChange(\"county_domicile\", text),\n                setError(\"county_domicileErr\", null),\n              ]}\n              placeholder=\"Enter Your County Domicile\"\n              errorMessage={userErrors.county_domicileErr}\n              numOfColumn={3}\n              label={\"County Domicile\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={userDetails.languages_spoken}\n              onChangeText={(text) => [\n                handleUserChange(\"languages_spoken\", text),\n                setError(\"languages_spokenErr\", null),\n              ]}\n              placeholder=\"Enter Languages Spoken\"\n              errorMessage={userErrors.languages_spokenErr}\n              numOfColumn={3}\n              label={\"Languages Spoken\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={userDetails.tarif_per_hour}\n              onChangeText={(text) => handleUserChange(\"tarif_per_hour\", text)}\n              placeholder=\"Enter Tarif Per Hour\"\n              numOfColumn={3}\n              label={\"Tarif\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={userDetails.purpose_of_life}\n              onChangeText={(text) => [\n                handleUserChange(\"purpose_of_life\", text),\n                setError(\"purpose_of_lifeErr\", null),\n              ]}\n              placeholder=\"Purpose of Life\"\n              errorMessage={userErrors.purpose_of_lifeErr}\n              numOfColumn={3}\n              label={\"Purpose of Life\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={userDetails.hobbies}\n              onChangeText={(text) => [\n                handleUserChange(\"hobbies\", text),\n                setError(\"hobbiesErr\", null),\n              ]}\n              placeholder=\"Hobbies\"\n              errorMessage={userErrors.hobbiesErr}\n              numOfColumn={3}\n              label={\"Hobbies\"}\n              inputStyle={styles.inputStyle}\n            />\n          </View>\n\n          {professional_experience.map((item, index) => (\n            <View key={index}>\n              <View style={styles.experienceHeading}>\n                <Text style={styles.welcomeText}>\n                  Professional Experience {index + 1}\n                </Text>\n                {professional_experience.length > 1 && (\n                  <TouchableOpacity\n                    onPress={() => removeExperience(index)}\n                    style={[styles.addBtn]}\n                  >\n                    <Entypo name={\"minus\"} color={COLORS.black} size={35} />\n                  </TouchableOpacity>\n                )}\n              </View>\n              <View style={styles.container}>\n                <CustomInput\n                  value={item.title}\n                  onChangeText={(text) =>\n                    handleExperienceChange(index, \"title\", text)\n                  }\n                  placeholder=\"Titile\"\n                  numOfColumn={3}\n                  label={\"Titile\"}\n                  inputStyle={styles.inputStyle}\n                />\n\n                <CustomInput\n                  value={item.organization}\n                  onChangeText={(text) =>\n                    handleExperienceChange(index, \"organization\", text)\n                  }\n                  placeholder=\"Organization\"\n                  numOfColumn={3}\n                  label={\"Organization\"}\n                  inputStyle={styles.inputStyle}\n                />\n\n                <CustomInput\n                  value={item.duration}\n                  onChangeText={(text) =>\n                    handleExperienceChange(index, \"duration\", text)\n                  }\n                  placeholder=\"Duration\"\n                  numOfColumn={3}\n                  label={\"Duration\"}\n                  inputStyle={styles.inputStyle}\n                />\n\n                <CustomInput\n                  value={item.description}\n                  onChangeText={(text) =>\n                    handleExperienceChange(index, \"description\", text)\n                  }\n                  placeholder=\"Description\"\n                  numOfColumn={3}\n                  label={\"Description\"}\n                  inputStyle={styles.inputStyle}\n                />\n\n                <CustomInput\n                  value={item.job_role}\n                  onChangeText={(text) =>\n                    handleExperienceChange(index, \"job_role\", text)\n                  }\n                  placeholder=\"Job Role\"\n                  numOfColumn={3}\n                  label={\"Job Role\"}\n                  inputStyle={styles.inputStyle}\n                />\n\n                <CustomInput\n                  value={item.job_field}\n                  onChangeText={(text) =>\n                    handleExperienceChange(index, \"job_field\", text)\n                  }\n                  placeholder=\"Job Field\"\n                  numOfColumn={3}\n                  label={\"Job Field\"}\n                  inputStyle={styles.inputStyle}\n                />\n\n                <CustomInput\n                  value={item.job_Duration}\n                  onChangeText={(text) =>\n                    handleExperienceChange(index, \"job_Duration\", text)\n                  }\n                  placeholder=\"Job Duration\"\n                  numOfColumn={3}\n                  label={\"Job Duration\"}\n                  inputStyle={styles.inputStyle}\n                />\n\n                <CustomInput\n                  value={item.job_Description}\n                  onChangeText={(text) =>\n                    handleExperienceChange(index, \"job_Description\", text)\n                  }\n                  placeholder=\"Job Description\"\n                  numOfColumn={3}\n                  // multiline={true}\n                  // numberOfLines={isMobileScreen ? 5 : 10}\n                  label={\"Job Description\"}\n                  inputStyle={styles.inputStyle}\n                />\n              </View>\n            </View>\n          ))}\n\n          <View style={styles.addContainer}>\n            <TouchableOpacity onPress={addExperience} style={styles.addBtn}>\n              <MaterialIcons name={\"add\"} color={COLORS.black} size={35} />\n            </TouchableOpacity>\n          </View>\n\n          <TouchableOpacity\n            onPress={handleUPdateProfile}\n            activeOpacity={0.8}\n            style={styles.UpdateButton}\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <ActivityIndicator color=\"#000\" />\n            ) : (\n              <Text style={styles.UpdateButtonText}>Update Profile</Text>\n            )}\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nexport default EditProfile;\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  bodyConatiner: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    gap: 20,\n  },\n  welcomeText: {\n    flex: 1,\n    fontWeight: \"700\",\n    fontSize: 30,\n    letterSpacing: 0.84,\n    color: COLORS.primeryWhite,\n    paddingVertical: 20,\n    fontFamily: FONTS.Playfair,\n    textAlign: \"center\",\n  },\n\n  imageStyle: {\n    width: 150,\n    height: 150,\n    resizeMode: \"cover\",\n  },\n  container: {\n    width: \"100%\",\n    gap: 10,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  inputStyle: {\n    textAlign: \"left\",\n  },\n  experienceHeading: {\n    flexDirection: \"row\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    paddingHorizontal: 20,\n  },\n  UpdateButton: {\n    marginTop: Platform.OS === \"web\" ? 20 : 37,\n    width: Platform.OS === \"web\" ? \"30%\" : \"90%\",\n    maxWidth: 350,\n    minWidth: 180,\n    borderRadius: 46,\n    height: 45,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1.2,\n    },\n    shadowOpacity: 0.17,\n    shadowRadius: 1,\n    elevation: 5,\n  },\n  UpdateButtonText: {\n    fontFamily: FONTS.Playfair,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.black,\n  },\n  addContainer: {\n    alignItems: \"flex-end\",\n    justifyContent: \"flex-end\",\n    width: \"100%\",\n    paddingHorizontal: 20,\n    flexDirection: \"row\",\n    gap: 30,\n  },\n  addBtn: {\n    backgroundColor: COLORS.white,\n    width: 50,\n    height: 50,\n    borderRadius: 50,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n});\n",
    "import React, { useState } from \"react\";\nimport {\n  Modal,\n  View,\n  Text,\n  TouchableOpacity,\n  StyleSheet,\n  FlatList,\n} from \"react-native\";\nconst FileTypeModal = ({ visible, onClose, onSelect, route }) => {\n  const fileType1 = [\n    { id: \"1\", name: \"Photo\", icon: \"🖼️\" },\n    { id: \"2\", name: \"Video\", icon: \"🎥\" },\n  ];\n\n  const fileType2 = [\n    { id: \"1\", name: \"Photo\", icon: \"🖼️\" },\n    { id: \"2\", name: \"Video\", icon: \"🎥\" },\n    { id: \"3\", name: \"Text\", icon: \"📝\" },\n    { id: \"4\", name: \"PDF\", icon: \"📄\" },\n    // { id: \"10\", name: \"MS files\", icon: \"📃\" },\n\n    { id: \"5\", name: \"Excel\", icon: \"📊\" },\n    { id: \"6\", name: \"Word\", icon: \"📃\" },\n    // { id: \"7\", name: \"PPT\", icon: \"📑\" },\n    // { id: \"8\", name: \"Link\", icon: \"🔗\" },\n    // { id: \"9\", name: \"Podcast\", icon: \"🎙️\" },\n  ];\n\n  const fileTypes = route === \"communityPost\" ? fileType1 : fileType2;\n\n  const renderItem = ({ item }) => (\n    <TouchableOpacity\n      style={styles.item}\n      onPress={() => {\n        onSelect(item);\n        onClose();\n      }}\n    >\n      <View>\n        <Text style={styles.icon}>{item.icon}</Text>\n        <Text style={styles.itemText}>{item.name}</Text>\n      </View>\n    </TouchableOpacity>\n  );\n\n  return (\n    <Modal\n      animationType=\"slide\"\n      transparent={true}\n      visible={visible}\n      onRequestClose={onClose}\n    >\n      <View style={styles.centeredView}>\n        <View style={styles.modalView}>\n          <Text style={styles.modalTitle}>Select File Type</Text>\n          <FlatList\n            data={fileTypes}\n            renderItem={renderItem}\n            keyExtractor={(item) => item.id}\n            numColumns={3}\n            contentContainerStyle={styles.listContainer}\n          />\n          <TouchableOpacity\n            style={[styles.button, styles.closeButton]}\n            onPress={onClose}\n          >\n            <View>\n              <Text style={styles.textStyle}>Close</Text>\n            </View>\n          </TouchableOpacity>\n        </View>\n      </View>\n    </Modal>\n  );\n};\n\nexport default FileTypeModal;\n\nconst styles = StyleSheet.create({\n  centeredView: {\n    width: \"100%\",\n    height: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0,0,0,0.5)\",\n  },\n  modalView: {\n    margin: 20,\n    backgroundColor: \"white\",\n    borderRadius: 20,\n    padding: 20,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 2,\n    },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    width: \"50%\",\n    minWidth: 250,\n    maxWidth: 400,\n  },\n  modalTitle: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    marginBottom: 15,\n  },\n  listContainer: {\n    justifyContent: \"center\",\n  },\n  item: {\n    padding: 15,\n    margin: 5,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 80,\n  },\n  icon: {\n    fontSize: 30,\n    marginBottom: 5,\n  },\n  itemText: {\n    fontSize: 14,\n    textAlign: \"center\",\n  },\n  button: {\n    borderRadius: 10,\n    padding: 10,\n    elevation: 2,\n    marginTop: 15,\n    width: \"60%\",\n    alignItems: \"center\",\n  },\n  closeButton: {\n    backgroundColor: \"#191662\",\n  },\n  textStyle: {\n    color: \"white\",\n    fontWeight: \"bold\",\n    textAlign: \"center\",\n  },\n});\n",
    "import React, { useState, useEffect } from \"react\";\nimport { View, Text, Pressable, Animated, StyleSheet } from \"react-native\";\n\nconst CustomToggle = ({ onToggle, initialValue = false }) => {\n  const [isOn, setIsOn] = useState(initialValue);\n  const toggleAnim = useState(new Animated.Value(initialValue ? 1 : 0))[0];\n\n  useEffect(() => {\n    if (onToggle) {\n      onToggle(isOn);\n    }\n  }, [isOn]);\n\n  const toggleSwitch = () => {\n    Animated.timing(toggleAnim, {\n      toValue: isOn ? 0 : 1,\n      duration: 200,\n      useNativeDriver: false,\n    }).start();\n    setIsOn((prev) => !prev);\n  };\n\n  const translateX = toggleAnim.interpolate({\n    inputRange: [0, 1],\n    outputRange: [2, 32],\n  });\n\n  return (\n    <Pressable onPress={toggleSwitch}>\n      <View\n        style={[\n          styles.toggleContainer,\n          { backgroundColor: isOn ? \"#4cd137\" : \"#dcdde1\" },\n        ]}\n      >\n        <Animated.View\n          style={[styles.circle, { transform: [{ translateX }] }]}\n        />\n      </View>\n    </Pressable>\n  );\n};\n\nconst styles = StyleSheet.create({\n  toggleContainer: {\n    width: 60,\n    height: 30,\n    borderRadius: 30,\n    padding: 2,\n    justifyContent: \"center\",\n  },\n  circle: {\n    width: 26,\n    height: 26,\n    borderRadius: 13,\n    backgroundColor: \"#fff\",\n  },\n  label: {\n    marginTop: 8,\n    fontSize: 16,\n    textAlign: \"center\",\n  },\n});\n\nexport default CustomToggle;\n",
    "import {\n  Image,\n  ImageBackground,\n  Platform,\n  SafeAreaView,\n  ScrollView,\n  StatusBar,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n  TextInput,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { COLORS, FONTS, IMAGES } from \"../utills/Utills\";\nimport { BlurView } from \"expo-blur\";\nimport CustomInputText from \"./CustomInputText\";\nimport Entypo from \"react-native-vector-icons/Entypo\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { API } from \"../api/api\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport FileTypeModal from \"./FileTypeModal\";\n\nimport * as DocumentPicker from \"expo-document-picker\";\nimport * as FileSystem from \"expo-file-system\";\nimport { getToken, POST } from \"../utills/Helper\";\nimport CustomToggle from \"./Togal\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst FILE_ICONS = {\n  pdf: require(\"../assets/images/pdf.png\"),\n  word: require(\"../assets/images/word-icon.png\"),\n  excel: require(\"../assets/images/excel-icon.png\"),\n  ppt: require(\"../assets/images/ppt-icon.png\"),\n  audio: require(\"../assets/images/audio-icon.png\"),\n  video: require(\"../assets/images/video-icon.jpg\"),\n  text: require(\"../assets/images/txt-icon.png\"),\n  link: require(\"../assets/images/link-icon.png\"),\n  default: require(\"../assets/images/txt-icon.png\"),\n};\n\nconst getFileTypeIcon = (mimeType: string, name: string) => {\n  if (mimeType.startsWith(\"image/\")) return null;\n  if (mimeType.startsWith(\"video/\")) return FILE_ICONS.video;\n  if (mimeType.startsWith(\"audio/\")) return FILE_ICONS.audio;\n  if (mimeType.includes(\"pdf\")) return FILE_ICONS.pdf;\n  if (mimeType.includes(\"word\")) return FILE_ICONS.word;\n  if (mimeType.includes(\"excel\")) return FILE_ICONS.excel;\n  if (mimeType.includes(\"presentation\")) return FILE_ICONS.ppt;\n  if (mimeType.includes(\"text\")) return FILE_ICONS.text;\n  if (mimeType === \"text/uri-list\" || name.includes(\"http\"))\n    return FILE_ICONS.link;\n  return FILE_ICONS.default;\n};\n\nconst PublishPost = () => {\n  const [title, setTitle] = useState(\"\");\n  const [description, setDescription] = useState(\"\");\n  const [titleErr, setTitleErr] = useState(\"\");\n\n  const [files, setFiles] = useState([]);\n  const [price, setPrice] = useState<string>(\"\");\n  const handleChange = (key) => (text) => {\n    // strip non-digits, cap at 3 chars\n    const filtered = text.replace(/[^0-9]/g, \"\").slice(0, 3);\n    setPrice((prev) => ({ ...prev, [key]: filtered }));\n  };\n\n  const [images, setImages] = useState([]);\n  const [uploadImages, setuploadImages] = useState([]);\n\n  const [modalVisible, setModalVisible] = useState(false);\n  const [selectedType, setSelectedType] = useState(null);\n\n  const route = useRoute<any>().params;\n  const [isFree, setIsFree] = useState(false);\n  const [nft, setNft] = useState(false);\n  console.log(\"🚀 ~ isFree:isFree\", isFree);\n\n  const handleToggle = (value) => {\n    console.log(\"Toggle value:\", value); // true or false\n    setIsFree(value);\n    if (value == false) {\n      setNft(false);\n    }\n  };\n  const handleToggle2 = (value) => {\n    console.log(\"Toggle value:\", value); // true or false\n    setNft(value);\n  };\n  const handleSelect = (type) => {\n    setSelectedType(type.name);\n    let fileTypes = [];\n\n    if (type.name === \"Photo\") {\n      fileTypes = [\"image/*\"];\n    } else if (type.name === \"Video\") {\n      fileTypes = [\"video/*\"];\n    } else if (type.name === \"PDF\") {\n      fileTypes = [\"application/pdf\"];\n    } else if (type.name === \"MS files\") {\n      fileTypes = [\n        \"application/msword\",\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n        \"application/vnd.ms-excel\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n        \"application/vnd.ms-powerpoint\",\n        \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n      ];\n    } else if (type.name === \"Word\") {\n      fileTypes = [\n        \"application/msword\",\n        \"application/vnd.openxmlformats-officedocument.wordprocessingml.document\",\n      ];\n    } else if (type.name === \"Excel\") {\n      fileTypes = [\n        \"application/vnd.ms-excel\",\n        \"application/vnd.openxmlformats-officedocument.spreadsheetml.sheet\",\n      ];\n    } else if (type.name === \"PPT\") {\n      fileTypes = [\n        \"application/vnd.ms-powerpoint\",\n        \"application/vnd.openxmlformats-officedocument.presentationml.presentation\",\n      ];\n    } else if (type.name === \"Text\") {\n      fileTypes = [\"text/plain\"];\n    } else if (type.name === \"Podcast\") {\n      fileTypes = [\"audio/*\"];\n    } else if (type.name === \"Link\") {\n      // Maybe open a prompt to enter a URL manually\n      console.log(\"Handle link separately (manual entry)\");\n      return;\n    }\n\n    pickFiles(fileTypes);\n  };\n\n  const navigation = useNavigation();\n  const { width: windowWidth } = useWindowDimensions();\n\n  const isSmallScreen = windowWidth < 769;\n  const isMobileScreen = windowWidth < 426;\n\n  const handlePostTitle = (text) => {\n    setTitle(text);\n    setTitleErr(\"\");\n  };\n  useEffect(() => {\n    console.log(\"images-----\", images);\n  }, [images]);\n\n  const handleImageSelection = async () => {\n    // setModalVisible(true);\n    // Request permission for the image picker\n    const permissionResult =\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (permissionResult.granted === false) {\n      alert(\"Permission to access media library is required!\");\n      return;\n    }\n\n    // Launch image picker for multiple images\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: [\"images\", \"videos\"],\n      allowsMultipleSelection: true, // Allows multiple selection\n      quality: 5,\n      base64: true,\n    });\n\n    if (!result.canceled) {\n      console.log(\"result===>>>\", result);\n      const selectedImages = result.assets.map((asset) => ({\n        uri: asset.uri,\n        base64: asset.base64,\n      }));\n      setImages((prevImages) => [...prevImages, ...selectedImages]);\n    }\n  };\n\n  const pickFiles = async (fileType) => {\n    const result = await DocumentPicker.getDocumentAsync({\n      multiple: true,\n      // type: \"*/*\", //for all document type\n      type: fileType,\n      copyToCacheDirectory: false,\n    });\n\n    console.log(\"result picker ==>>\", result);\n\n    if (!result.canceled || Array.isArray(result.assets)) {\n      const fileList = result.assets;\n      console.log(\"fileList fileList ==> \", fileList);\n      const base64Files = fileList.map((file) => {\n        const extension = file.name?.split(\".\").pop()?.toLowerCase();\n        const uri = file.uri?.toLowerCase();\n        let media_type = \"unknown\";\n\n        if (uri?.startsWith(\"http://\") || uri?.startsWith(\"https://\")) {\n          media_type = \"link\";\n        } else if (!extension) {\n          media_type = \"unknown\";\n        } else if (extension === \"pdf\") {\n          media_type = \"pdf\";\n        } else if ([\"doc\", \"docx\"].includes(extension)) {\n          media_type = \"word\";\n        } else if ([\"xls\", \"xlsx\"].includes(extension)) {\n          media_type = \"excel\";\n        } else if ([\"ppt\", \"pptx\"].includes(extension)) {\n          media_type = \"ppt\";\n        } else if ([\"mp4\", \"mov\", \"avi\", \"mkv\"].includes(extension)) {\n          media_type = \"video\";\n        } else if (\n          [\"jpg\", \"jpeg\", \"png\", \"gif\", \"bmp\", \"webp\", \"heic\"].includes(\n            extension\n          )\n        ) {\n          media_type = \"photo\";\n        } else if ([\"txt\", \"md\", \"csv\"].includes(extension)) {\n          media_type = \"text\";\n        } else if ([\"mp3\", \"m4a\", \"aac\", \"wav\", \"ogg\"].includes(extension)) {\n          media_type = \"podcast\";\n        }\n        return {\n          name: file.name,\n          mimeType: file.mimeType,\n          uri: file.uri,\n          media_type: media_type,\n        };\n      });\n\n      console.log(\"base64Files ==. \", base64Files);\n\n      setFiles((prev) => [...prev, ...base64Files]);\n    }\n  };\n\n  const handlePost = async () => {\n    if (title == \"\") {\n      setTitleErr(\"Title is required\");\n      return;\n    } else if (files.length == 0) {\n      setTitleErr(\"Image is required\");\n      return;\n    }\n\n    const Token = await getToken();\n\n    try {\n      const formData = new FormData();\n      // Append the fields to the FormData object\n      formData.append(\"title\", title);\n\n      if (route?.screen === \"communityPost\") {\n        formData.append(\"community\", route?.community_id);\n        formData.append(\"content\", description);\n        formData.append(\"is_inappropriate\", \"false\");\n      } else {\n        formData.append(\"description\", description);\n      }\n      formData.append(\"is_free\", !isFree);\n      formData.append(\"price\", price);\n      formData.append(\"nft\", nft);\n      for (let i = 0; i < files.length; i++) {\n        const file = files[i];\n        console.log(\"🚀 ~ handlePost ~ file:\", file);\n\n        if (Platform.OS === \"web\") {\n          const response = await fetch(file.uri);\n          const blob = await response.blob();\n          console.log(\"🚀 ~ handlePost ~ response:\", response);\n          console.log(\"🚀 ~ handlePost ~ blob:\", blob);\n          formData.append(\"media\", blob, file.name);\n          formData.append(\"media_type\", file.media_type);\n        }\n      }\n\n      const config = {\n        method: \"post\",\n        url:\n          route?.screen === \"communityPost\"\n            ? API.CREATE_COMMUNITY_POST\n            : API.UPLOAD_CONTENT,\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${Token}`,\n        },\n        data: formData,\n      };\n\n      const response = await axios.request(config);\n      console.log(\"Api Responce Post data\", response.data);\n\n      if (response.data) {\n        console.log(\"User post data successfully\");\n        navigation.goBack();\n      }\n    } catch (error) {\n      console.error(\n        \"Post Error:\",\n        error.response ? error.response.data : error.message\n      );\n    } finally {\n      //   setIsLoading(false);\n    }\n  };\n  return (\n    <SafeAreaView style={styles.container}>\n      <StatusBar />\n\n      <ImageBackground style={styles.backgroundImage} resizeMode=\"cover\">\n        <LinearGradient\n          colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n          start={{ x: 0, y: 0 }}\n          end={{ x: 1, y: 1 }}\n          style={StyleSheet.absoluteFill}\n        />\n        <BlurView\n          intensity={100}\n          style={[\n            styles.postContainer,\n            isSmallScreen && styles.smallPostContainer,\n            isMobileScreen && styles.mobilePostContainer,\n          ]}\n        >\n          <Text style={styles.modalTitle}>\n            {route?.screen === \"communityPost\"\n              ? \"Create Community Post\"\n              : \"Publish Something\"}\n          </Text>\n\n          <View style={styles.fileView}>\n            {/* {images.length == 0 ? ( */}\n            {files.length == 0 ? (\n              <TouchableOpacity\n                style={{\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                  borderWidth: 1,\n                  borderColor: COLORS.darkbordercolor,\n                  padding: 10,\n                  borderRadius: 8,\n                  borderStyle: \"dashed\",\n                }}\n                // onPress={() => handleImageSelection()}\n                onPress={() => setModalVisible(true)}\n              >\n                <Entypo name={\"upload-to-cloud\"} size={70} />\n                <Text>Upload Image</Text>\n              </TouchableOpacity>\n            ) : (\n              <>\n                <TouchableOpacity\n                  // onPress={() => handleImageSelection()}\n                  onPress={() => setModalVisible(true)}\n                  style={styles.imgPickerBtn}\n                >\n                  <Text style={styles.imgPickerTxt}>Upload Image</Text>\n                </TouchableOpacity>\n\n                <ScrollView\n                  style={styles.flatListContainer}\n                  horizontal={true}\n                  indicatorStyle=\"black\"\n                >\n                  {/* {images.map((item, index) => (\n                    <View key={index} style={styles.imgView}>\n                      <Image\n                        source={{ uri: item.uri }}\n                        style={styles.imageStyle}\n                        resizeMode=\"contain\"\n                      />\n                    </View>\n                  ))} */}\n\n                  {files.map((file, index) => {\n                    // console.log(\"files ==<<<\", file);\n                    const icon = getFileTypeIcon(file.mimeType, file.name);\n\n                    return (\n                      <View key={index} style={styles.fileItem}>\n                        {icon ? (\n                          <Image source={icon} style={styles.icon} />\n                        ) : (\n                          <Image\n                            source={{ uri: file.uri }}\n                            style={styles.thumbnail}\n                          />\n                        )}\n                      </View>\n                    );\n                  })}\n                </ScrollView>\n              </>\n            )}\n          </View>\n\n          <View style={styles.titleView}>\n            <Text style={styles.titleText}>Add Title</Text>\n            <CustomInputText\n              inputStyle={{}}\n              placeholder={\"Title\"}\n              placeholderTextColor={COLORS.lightBlack}\n              value={title}\n              onChangeText={(text) => handlePostTitle(text)}\n              keyboardType={\"ascii-capable\"}\n              error={titleErr}\n            />\n            <Text style={styles.titleText}>\n              {route?.screen === \"communityPost\"\n                ? \"Add Content\"\n                : \"Add Description\"}\n            </Text>\n            <CustomInputText\n              inputStyle={{ height: 80 }}\n              placeholder={\n                route?.screen === \"communityPost\" ? \"Content\" : \"Description\"\n              }\n              placeholderTextColor={COLORS.lightBlack}\n              value={description}\n              onChangeText={(text) => setDescription(text)}\n              keyboardType={\"ascii-capable\"}\n              // multiline={true}\n              // numberOfLines={5}\n            />\n            <View\n              style={{ flexDirection: \"row\", justifyContent: \"space-between\" }}\n            >\n              <View>\n                <Text style={styles.titleText}>{\"Paid\"}</Text>\n                <CustomToggle onToggle={handleToggle} initialValue={isFree} />\n              </View>\n              {isFree && (\n                <View>\n                  <Text style={styles.titleText}>{\"Enter Price\"}</Text>\n                  <TextInput\n                    value={price}\n                    onChangeText={(text) => {\n                      const onlyNumbers = text.replace(/[^0-9]/g, \"\");\n                      setPrice(onlyNumbers);\n                    }}\n                    keyboardType=\"numeric\"\n                    maxLength={3}\n                    style={{\n                      height: 30,\n                      width: 100,\n                      backgroundColor: COLORS.white,\n                      borderRadius: 10,\n                      padding: 10,\n                      textAlign: \"center\",\n                    }}\n                  />\n                </View>\n              )}\n            </View>\n            {isFree && <Text style={styles.titleText}>{\"NFT\"}</Text>}\n            {isFree && (\n              <CustomToggle onToggle={handleToggle2} initialValue={nft} />\n            )}\n          </View>\n\n          <View style={styles.bottomBar}>\n            <TouchableOpacity\n              style={styles.postBtn}\n              onPress={() => navigation.goBack()}\n            >\n              <Text style={styles.postButtonText}>Cancel</Text>\n            </TouchableOpacity>\n            <TouchableOpacity\n              style={styles.postBtn}\n              onPress={() => handlePost()}\n            >\n              <Text style={styles.postButtonText}>Post</Text>\n            </TouchableOpacity>\n          </View>\n        </BlurView>\n\n        <FileTypeModal\n          visible={modalVisible}\n          onClose={() => setModalVisible(false)}\n          onSelect={handleSelect}\n          route={route?.screen}\n        />\n      </ImageBackground>\n    </SafeAreaView>\n  );\n};\n\nexport default PublishPost;\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n  },\n  backgroundImage: {\n    flex: 1,\n    padding: 20,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  postContainer: {\n    alignItems: \"center\",\n    width: \"60%\",\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    marginLeft: 10,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    marginVertical: 20,\n    padding: 20,\n    paddingBottom: 70,\n  },\n  smallPostContainer: {\n    width: \"80%\",\n  },\n  mobilePostContainer: {\n    width: \"95%\",\n  },\n  modalTitle: {\n    fontSize: 26,\n    fontFamily: FONTS.PoppinsSemi,\n    color: COLORS.white,\n    marginVertical: 10,\n  },\n  fileView: {\n    minHeight: 200,\n    maxHeight: 250,\n    width: \"90%\",\n    backgroundColor: \"white\",\n    borderRadius: 8,\n    marginVertical: 10,\n    padding: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    borderWidth: 1,\n    borderStyle: \"dashed\",\n    borderColor: COLORS.black,\n  },\n  titleView: {\n    width: \"90%\",\n    height: \"20%\",\n  },\n  titleText: {\n    fontSize: 18,\n    fontFamily: FONTS.PoppinsSemi,\n    color: COLORS.white,\n    marginVertical: 10,\n  },\n  bottomBar: {\n    width: \"90%\",\n    position: \"absolute\",\n    bottom: 20,\n    alignItems: \"flex-end\",\n    zIndex: 100,\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n  },\n  postBtn: {\n    height: 40,\n    width: \"20%\",\n    backgroundColor: COLORS.blue,\n    borderRadius: 10,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  postButtonText: {\n    fontSize: 16,\n    fontFamily: FONTS.PoppinsSemi,\n    color: COLORS.white,\n  },\n  imgPickerBtn: {\n    position: \"absolute\",\n    borderWidth: 1,\n    bottom: -20,\n    backgroundColor: COLORS.blue,\n    paddingVertical: 5,\n    paddingHorizontal: 15,\n    zIndex: 100,\n    borderRadius: 8,\n  },\n  imgPickerTxt: {\n    color: COLORS.white,\n    textAlign: \"center\",\n    fontSize: 20,\n  },\n  imgView: {\n    minWidth: 200,\n    flex: 1,\n    alignItems: \"center\",\n  },\n  imageStyle: {\n    minWidth: 150,\n    width: 150,\n    height: 150,\n    borderRadius: 8,\n  },\n  flatListContainer: {\n    paddingHorizontal: 5,\n    paddingVertical: 10,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    width: \"100%\",\n    marginBottom: 10,\n  },\n\n  fileItem: {\n    marginRight: 15,\n    alignItems: \"center\",\n    width: 120,\n  },\n  icon: {\n    width: 120,\n    height: 120,\n    resizeMode: \"contain\",\n  },\n  thumbnail: {\n    width: 120,\n    height: 120,\n    borderRadius: 8,\n    resizeMode: \"cover\",\n  },\n  fileName: {\n    fontSize: 12,\n    marginTop: 5,\n    textAlign: \"center\",\n    width: \"100%\",\n  },\n});\n",
    "import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Image,\n  TouchableOpacity,\n  FlatList,\n  TextInput,\n  useWindowDimensions,\n  ImageBackground,\n  ScrollView,\n  Alert,\n  Platform,\n} from \"react-native\";\nimport { BlurView } from \"expo-blur\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport { API, ENV } from \"../../api/api\";\nimport { useIsFocused, useNavigation } from \"@react-navigation/native\";\nimport { GET, getToken } from \"../../utills/Helper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ninterface CommunityItem {\n  id: string;\n  title: string;\n  image: any;\n  messageImage: any;\n}\n\nconst Communities = () => {\n  const windowWidth = useWindowDimensions().width;\n  const isSmallScreen = windowWidth < 768;\n  const isMobileScreen = windowWidth < 480;\n\n  const navigation = useNavigation<any>();\n  const isFocused = useIsFocused();\n\n  const [bestCommunitiesList, setBestCommunitiesList] = useState<any[] | null>(\n    []\n  );\n  const [bestContributorList, setbestContributorList] = useState<any[] | null>(\n    []\n  );\n\n  const [searchText, setSearchText] = useState<string | null>(null);\n  const [searchResult, setSearchResult] = useState<any[] | null>([]);\n\n  const getBestCommunities = async () => {\n    const Token = await getToken();\n    const URLBestCommunity = API.BEST_COMMUNITIES;\n    const URLBestContributer = API.BEST_CONTRIBUTOR;\n\n    try {\n      const resCommunities = await GET(URLBestCommunity, Token);\n      setBestCommunitiesList(resCommunities.data.data);\n\n      const resContributor = await GET(URLBestContributer, Token);\n      setbestContributorList(resContributor.data.data);\n\n      console.log(\"resContributor.data.data :>> \", resContributor.data.data);\n    } catch (error) {\n      console.error(\"Error on get best communities\", error);\n    }\n  };\n  useEffect(() => {\n    getBestCommunities();\n  }, [isFocused]);\n\n  const handeleSearchText = async () => {\n    const searchQuery = searchText.trim();\n    const Token = await getToken();\n    const URL = `${API.SEARCH_COMMUNITY}${searchQuery}`;\n\n    try {\n      const resSearch = await GET(URL, Token);\n      if (resSearch.data.data.length !== 0) {\n        setSearchResult(resSearch?.data?.data);\n      } else {\n        setSearchResult(null);\n      }\n    } catch (error) {\n      console.error(\"Search API error==>>\", error);\n    }\n  };\n\n  const handleItemPress = (item: CommunityItem) => {\n    console.log(\"fdkjhsdfh\", item);\n\n    navigation.navigate(\"CommunityDetail\", { CommunityId: item.id });\n  };\n\n  const handleMyCommunities = async () => {\n    const Token = await getToken();\n    const URL = API.GET_MY_COMMUNITIES;\n\n    try {\n      const response = await GET(URL, Token);\n      if (response.status == 204) {\n        setSearchResult(null);\n      } else if (response.data.data.length !== 0) {\n        setSearchResult(response?.data?.data);\n      } else {\n        setSearchResult(null);\n      }\n    } catch (error) {\n      console.error(\"My Communities API error==>>\", error);\n    }\n  };\n\n  const handleMyFollowedCommunity = async () => {\n    const accessToken = await getToken();\n    const URL = API.MY_FOLLOWED_COMMUNITY;\n    try {\n      const response = await GET(URL, accessToken);\n      console.log(\"response my followed community :>> \", response);\n\n      if (response.status == 204) {\n        setSearchResult(null);\n      } else if (response.data.data.length !== 0) {\n        setSearchResult(response?.data?.data);\n      } else {\n        setSearchResult(null);\n      }\n    } catch (error) {\n      console.log(\"error my followed communities :>> \", error);\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner backNavigation />\n        <NavigationBar />\n        <BlurView intensity={100} style={styles.contentContainer}>\n          <View\n            style={[\n              styles.childContainer,\n              {\n                flexDirection: isSmallScreen ? \"column\" : \"row\",\n              },\n            ]}\n          >\n            <View\n              style={[\n                styles.header,\n                {\n                  flexDirection: isSmallScreen ? \"column\" : \"row\",\n                },\n              ]}\n            >\n              <TouchableOpacity\n                style={styles.headerBtn}\n                onPress={() =>\n                  navigation.navigate(\"FollowedCommunity\", {\n                    screen: \"allCommunitiesList\",\n                  })\n                }\n              >\n                <Image source={IMAGES.CommImage1} style={styles.img} />\n                <Text style={styles.imgText}>All community</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.headerBtn}\n                onPress={() => handleMyFollowedCommunity()}\n              >\n                <Image source={IMAGES.CommImage2} style={styles.img} />\n                <Text style={styles.imgText}>My followed communities</Text>\n              </TouchableOpacity>\n              <TouchableOpacity\n                style={styles.headerBtn}\n                onPress={() => navigation.navigate(\"CreateCommunity\")}\n              >\n                <Image source={IMAGES.CommImage} style={styles.img} />\n                <Text style={styles.imgText}>Create a community</Text>\n              </TouchableOpacity>\n            </View>\n\n            <View style={styles.header}>\n              <TouchableOpacity>\n                <Image source={IMAGES.Commessage} />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Image source={IMAGES.Comnoti} />\n              </TouchableOpacity>\n              <TouchableOpacity>\n                <Image source={IMAGES.Commpp} />\n              </TouchableOpacity>\n            </View>\n          </View>\n\n          <View\n            style={[\n              styles.childContainer,\n              {\n                flexDirection: isSmallScreen ? \"column\" : \"row\",\n              },\n            ]}\n          >\n            {/* Best Communities List */}\n            <View\n              style={[\n                styles.viewm,\n                {\n                  minWidth: isMobileScreen ? 200 : 300,\n                  width: isMobileScreen ? \"100%\" : \"auto\",\n                  height: 650,\n                  flex: 1,\n                },\n              ]}\n            >\n              <Text\n                numberOfLines={2}\n                style={[\n                  styles.imgText,\n                  { fontSize: 18, width: \"80%\", marginVertical: 10 },\n                ]}\n              >\n                Best community proposed by algorithm\n              </Text>\n              <View style={{ width: isMobileScreen ? \"100%\" : \"80%\", flex: 1 }}>\n                <FlatList\n                  data={bestCommunitiesList}\n                  keyExtractor={(item, index) => index.toString()}\n                  showsVerticalScrollIndicator={false}\n                  renderItem={({ item }) => (\n                    <TouchableOpacity\n                      style={styles.card}\n                      onPress={() => handleItemPress(item)}\n                    >\n                      <Image\n                        source={\n                          !!item.creator_avatar\n                            ? { uri: ENV.BASE_URL + item.creator_avatar }\n                            : IMAGES.Commpp\n                        }\n                        style={styles.image5}\n                      />\n                      <Text style={styles.title}>{item.name}</Text>\n                      <Image\n                        source={IMAGES.Comnoti}\n                        style={styles.messageImage}\n                      />\n                    </TouchableOpacity>\n                  )}\n                />\n              </View>\n            </View>\n\n            {/* Search and Additional Options */}\n            <View\n              style={[\n                styles.middileContainer,\n                {\n                  minWidth: isSmallScreen ? \"100%\" : 350,\n                },\n              ]}\n            >\n              <View\n                style={[\n                  styles.viewm,\n                  {\n                    flexDirection: \"row\",\n                    width: \"100%\",\n                    height: 55,\n                  },\n                ]}\n              >\n                <Image\n                  source={IMAGES.search}\n                  style={{ height: 18, width: 18 }}\n                />\n                <TextInput\n                  style={[\n                    styles.serachInput,\n                    Platform.OS === \"web\"\n                      ? ({ outlineStyle: \"none\" } as any) // 👈 bypass typing\n                      : {},\n                  ]}\n                  placeholder=\"Search a community\"\n                  placeholderTextColor=\"#fff\"\n                  value={searchText ?? \"\"}\n                  onChangeText={(text) => setSearchText(text)}\n                />\n                <TouchableOpacity\n                  style={styles.searchView}\n                  onPress={handeleSearchText}\n                >\n                  <Text style={{ color: \"#000\" }}>Search</Text>\n                </TouchableOpacity>\n              </View>\n\n              <View\n                style={{\n                  flex: 1,\n                  alignItems: \"center\",\n                  gap: 20,\n                }}\n              >\n                <Text style={styles.searchTxt}>X-Change</Text>\n                <View style={{ width: \"100%\" }}>\n                  {/* {searchResult !== null ? ( */}\n                  {!!searchResult ? (\n                    <FlatList\n                      data={searchResult}\n                      keyExtractor={(item, index) => index.toString()}\n                      renderItem={({ item }) => (\n                        <TouchableOpacity\n                          onPress={() => handleItemPress(item)}\n                          style={[styles.card, { marginVertical: 4 }]}\n                        >\n                          <Text style={styles.searchTxt}>{item?.name}</Text>\n                        </TouchableOpacity>\n                      )}\n                    />\n                  ) : (\n                    <View style={[styles.card, { marginVertical: 4 }]}>\n                      <Text\n                        style={[\n                          styles.searchTxt,\n                          {\n                            textAlign: \"center\",\n                            width: \"100%\",\n                          },\n                        ]}\n                      >\n                        Not Found\n                      </Text>\n                    </View>\n                  )}\n                </View>\n              </View>\n\n              <View style={styles.cradContainer}>\n                <TouchableOpacity\n                  style={[styles.boxComm]}\n                  onPress={handleMyCommunities}\n                >\n                  <Text style={styles.boxtext}>My Community</Text>\n                  <Image source={IMAGES.ArrowL} style={styles.boximg} />\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.boxComm}>\n                  <Text style={styles.boxtext}>My Calendar</Text>\n                  <Image source={IMAGES.ArrowL} style={styles.boximg} />\n                </TouchableOpacity>\n                <TouchableOpacity\n                  style={styles.boxComm}\n                  onPress={() =>\n                    navigation.navigate(\"MyQuesAndAnswer\", {\n                      my_community: true,\n                    })\n                  }\n                >\n                  <Text style={styles.boxtext}>My requests & answers</Text>\n                  <Image source={IMAGES.ArrowL} style={styles.boximg} />\n                </TouchableOpacity>\n                <TouchableOpacity style={styles.boxComm}>\n                  <Text style={styles.boxtext}>Settings & Data</Text>\n                  <Image source={IMAGES.ArrowL} style={styles.boximg} />\n                </TouchableOpacity>\n              </View>\n            </View>\n\n            {/* Best Contributors */}\n            <View\n              style={[\n                styles.viewm,\n                {\n                  minWidth: isMobileScreen ? 200 : 300,\n                  width: isMobileScreen ? \"100%\" : \"auto\",\n                  height: 650,\n                  flex: 1,\n                },\n              ]}\n            >\n              <Text\n                style={[styles.imgText, { fontSize: 18, marginVertical: 10 }]}\n              >\n                Best contributor\n              </Text>\n              <View style={{ width: isMobileScreen ? \"100%\" : \"80%\", flex: 1 }}>\n                <FlatList\n                  data={bestContributorList}\n                  keyExtractor={(item, index) => index.toString()}\n                  showsVerticalScrollIndicator={false}\n                  renderItem={({ item }) => (\n                    <View style={[styles.card, { flexDirection: \"column\" }]}>\n                      <View\n                        style={{ flexDirection: \"row\", width: \"100%\", gap: 10 }}\n                      >\n                        <Image\n                          source={\n                            item.avatar == null\n                              ? IMAGES.Commpp\n                              : `${ENV.BASE_URL}${item.avatar}`\n                          }\n                          style={styles.image5}\n                        />\n                        <Text style={styles.title}>\n                          {item.full_name ?? \"Community name 1\"}\n                        </Text>\n                      </View>\n                      {!!item.description && (\n                        <Text\n                          style={[\n                            styles.title,\n                            { fontSize: 14, alignSelf: \"flex-start\" },\n                          ]}\n                        >\n                          {item.description}\n                        </Text>\n                      )}\n                    </View>\n                  )}\n                />\n              </View>\n            </View>\n          </View>\n        </BlurView>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  contentContainer: {\n    flex: 1,\n    padding: 15,\n    borderRadius: 10,\n    marginTop: 20,\n    backgroundColor: \"rgba(255, 255, 255, 0.3)\",\n    width: \"100%\",\n    gap: 20,\n  },\n  childContainer: {\n    justifyContent: \"space-between\",\n    gap: 20,\n    flexWrap: \"wrap\",\n  },\n  header: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 10,\n  },\n  headerBtn: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  img: {\n    height: 22,\n    width: 22,\n  },\n  imgText: {\n    color: \"#fff\",\n    marginLeft: 10,\n    textAlign: \"center\",\n    fontFamily: \"PoppinsSemi\",\n  },\n  viewm: {\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    borderRadius: 10,\n    padding: 10,\n    width: \"25%\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n  },\n  middileContainer: {\n    flex: 1.5,\n    minHeight: 450,\n    justifyContent: \"space-between\",\n    gap: 20,\n  },\n  serachInput: {\n    padding: 8,\n    width: \"100%\",\n    color: COLORS.white,\n  },\n  searchView: {\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderRadius: 10,\n    width: \"20%\",\n    minWidth: 60,\n    alignItems: \"center\",\n  },\n  searchTxt: {\n    fontSize: 20,\n    color: \"#fff\",\n    fontFamily: \"PoppinsMedium\",\n  },\n  cradContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    alignItems: \"center\",\n    justifyContent: \"space-between\",\n    gap: 10,\n  },\n  card: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    backgroundColor: \"#2D2B9B\",\n    marginVertical: 8,\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    elevation: 4,\n    gap: 10,\n    minWidth: 200,\n  },\n  image5: {\n    height: 50,\n    width: 50,\n    borderRadius: 25,\n  },\n  title: {\n    flex: 1,\n    fontSize: 16,\n    fontWeight: \"bold\",\n    color: \"#fff\",\n    fontFamily: \"PoppinsMedium\",\n    alignSelf: \"center\",\n  },\n  messageImage: {\n    height: 20,\n    width: 20,\n  },\n  boxComm: {\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    padding: 10,\n    borderRadius: 10,\n    width: 120,\n    height: 85,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n  },\n  boxtext: {\n    color: \"#fff\",\n  },\n  boximg: {\n    position: \"absolute\",\n    bottom: 5,\n    left: 80,\n    height: 28,\n    width: 28,\n  },\n});\n\nexport default Communities;\n",
    "import React from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  ImageBackground,\n  ScrollView,\n} from \"react-native\";\nimport { IMAGES } from \"../../utills/Utills\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst OneToOne = () => {\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner backNavigation />\n        <NavigationBar />\n\n        <View style={styles.contentContainer}>\n          <Text style={styles.heading}>Hello, One to One UI!</Text>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  contentContainer: {\n    flex: 1,\n    width: \"100%\",\n    padding: 15,\n    backgroundColor: \"#fff\",\n    borderRadius: 10,\n    marginTop: 20,\n  },\n  heading: {\n    fontSize: 24,\n    fontWeight: \"bold\",\n    color: \"#9F77AA\",\n  },\n});\n\nexport default OneToOne;\n",
    "import React, { useEffect, useState } from \"react\";\nimport {\n  View,\n  Text,\n  Image,\n  StyleSheet,\n  TouchableOpacity,\n  ImageBackground,\n  TextInput,\n  Alert,\n  Platform,\n  ScrollView,\n  useWindowDimensions,\n} from \"react-native\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport DateTimePicker from \"react-native-ui-datepicker\";\nimport { API } from \"../../api/api\";\nimport {\n  useIsFocused,\n  useNavigation,\n  useRoute,\n} from \"@react-navigation/native\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport { GET, POST, getToken } from \"../../utills/Helper\";\nimport { Picker } from \"@react-native-picker/picker\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ninterface Community {\n  id: number;\n  name: string;\n  description: string;\n  background_image: string | null;\n  category: string;\n  announcements: string;\n  allow_member_posts: boolean;\n  calendar: Record<string, any>;\n  created_at: string;\n  updated_at: string;\n  creator: string;\n  members: string[];\n  rules: string | null;\n  useful_links: Record<string, any>;\n  is_joined: Boolean;\n}\n\ntype LeftBarItem = {\n  title: string;\n  image: any; // Or ImageSourcePropType if you're using `import`\n  onPress: () => void;\n};\n\nconst CommunityDetail = () => {\n  const [getCoummunityData, setGetCoummunityData] = useState<Community | null>(\n    null\n  );\n\n  const [selectedValue, setSelectedValue] = useState<string>(\"Select\");\n\n  const navigation = useNavigation<any>();\n  const isFocused = useIsFocused();\n  const route = useRoute<any>();\n  const { CommunityId } = route.params;\n\n  const LeftBar: LeftBarItem[] = [\n    {\n      title: \"My followed communities\",\n      image: IMAGES.CommImage2,\n      onPress: () => navigation.navigate(\"FollowedCommunity\"),\n    },\n    {\n      title: \"Create a community\",\n      image: IMAGES.CommImage,\n      onPress: () => navigation.navigate(\"CreateCommunity\"),\n    },\n\n    {\n      title: \"One to One\",\n      image: IMAGES.OneByOne,\n      onPress: () => console.log(\"One to One\"),\n    },\n    {\n      title: \"My calendar\",\n      image: IMAGES.Calander,\n      onPress: () => console.log(\"My calendar\"),\n    },\n    {\n      title: \"My request & answers\",\n      image: IMAGES.Request,\n      onPress: () =>\n        navigation.navigate(\"MyQuesAndAnswer\", {\n          community_id: getCoummunityData.id,\n        }),\n    },\n    // {\n    //   title: \"Community Posts\",\n    //   image: IMAGES.CommImage,\n    //   onPress: () =>\n    //     navigation.navigate(\"CommunityPostList\", {\n    //       community_id: getCoummunityData.id,\n    //       backgroundImage: getCoummunityData.background_image,\n    //     }),\n    // },\n    {\n      title: \"Settings\",\n      image: IMAGES.Setting,\n      onPress: () => console.log(\"Settings\"),\n    },\n    {\n      title: \"BACK TO ROOM\",\n      image: IMAGES.Commback,\n      onPress: () => navigation.goBack(),\n    },\n  ];\n\n  useEffect(() => {\n    getcommunity();\n  }, [CommunityId, isFocused]);\n\n  const getcommunity = async () => {\n    const Token = await getToken();\n    const URL = `${API.COMMUNITY_LIST}${CommunityId}/`;\n\n    try {\n      const res = await GET(URL, Token);\n      console.log(\"get Data fecthed\", res.data.data);\n      setGetCoummunityData(res.data.data);\n    } catch (error) {\n      console.log(\"get Data fecthing Error\", error);\n    }\n  };\n\n  const handleJoinComunity = async () => {\n    const Token = await getToken();\n    const URL = API.JOIN_COMMUNITIES;\n    const data = { community_id: getCoummunityData.id };\n\n    try {\n      const res = await POST(URL, data, Token);\n      if (\n        res.data.message == \"Successfully joined the community.\" &&\n        res.data.status == 200\n      ) {\n        getcommunity();\n      }\n      if (Platform.OS === \"web\") {\n        window.alert(`${\"Alert\"}\\n\\n${res.data.message}`);\n      } else {\n        Alert.alert(\"Alert\", res.data.message);\n      }\n    } catch (error) {\n      console.log(\"Join communities Error\", error);\n    }\n  };\n\n  const handleDropDown = (item: string) => {\n    console.log(\"🚀 ~ handleDropDown ~ item:\", item);\n\n    navigation.navigate(item, {\n      community_id: getCoummunityData.id,\n      backgroundImage: getCoummunityData.background_image,\n    });\n  };\n\n  const windowWidth = useWindowDimensions().width;\n  const isSmallScreen = windowWidth < 800;\n  const isMobileScreen = windowWidth < 420;\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner backNavigation />\n        <NavigationBar />\n        <View\n          style={{\n            flex: 1,\n            borderRadius: 20,\n            overflow: \"hidden\",\n            marginTop: 20,\n            width: \"100%\",\n          }}\n        >\n          {/* <ImageBackground source={IMAGES.CommbackImg} style={styles.container}> */}\n          <ImageBackground\n            source={\n              !!getCoummunityData?.background_image\n                ? { uri: getCoummunityData.background_image }\n                : IMAGES.CommbackImg\n            }\n            style={[styles.container, { maxHeight: 455 }]}\n          >\n            <ScrollView\n              contentContainerStyle={{ padding: 20 }}\n              showsVerticalScrollIndicator={false}\n            >\n              <View\n                style={{\n                  flexDirection: \"row\",\n                  justifyContent: \"center\",\n                  flexWrap: \"wrap\",\n                  // height: \"45%\",\n                  width: \"100%\",\n                  gap: 20,\n                }}\n              >\n                <View\n                  style={[\n                    styles.sameView,\n                    { minWidth: isMobileScreen ? 250 : 350, maxHeight: 500 },\n                  ]}\n                >\n                  <View\n                    style={{\n                      flexDirection: \"row\",\n                      width: \"90%\",\n                      marginTop: 10,\n                      marginLeft: 14,\n                    }}\n                  >\n                    <Image source={IMAGES.CommImage1} />\n                    <Text\n                      style={{ fontSize: 16, marginLeft: 10, color: \"#fff\" }}\n                    >\n                      All community\n                    </Text>\n                  </View>\n                  <View\n                    style={[\n                      styles.viewm,\n                      {\n                        padding: 5,\n                        flexDirection: \"row\",\n                        width: \"90%\",\n                        alignItems: \"center\",\n                        height: 35,\n                        // marginBottom: 10,\n                      },\n                    ]}\n                  >\n                    <Image\n                      source={IMAGES.search}\n                      style={{ height: 14, width: 14 }}\n                    />\n                    <TextInput\n                      style={[\n                        {\n                          padding: 5,\n                          width: \"100%\",\n                          // outlineStyle: \"none\",\n                        },\n                        Platform.OS === \"web\"\n                          ? ({ outlineStyle: \"none\" } as any) // 👈 bypass typing\n                          : {},\n                      ]}\n                      placeholder=\"Search \"\n                      placeholderTextColor={\"#fff\"}\n                    />\n                    <TouchableOpacity style={styles.searchView}>\n                      <Text style={{ color: \"#fff\" }}>Search</Text>\n                    </TouchableOpacity>\n                  </View>\n\n                  {LeftBar.map((item, index) => (\n                    <View key={index} style={styles.card}>\n                      <TouchableOpacity\n                        onPress={item.onPress}\n                        style={styles.row}\n                      >\n                        <Image source={item.image} style={styles.img} />\n                        <Text style={styles.text}>{item.title}</Text>\n                      </TouchableOpacity>\n                    </View>\n                  ))}\n                </View>\n\n                {/* MiddelView */}\n                <View\n                  style={[\n                    styles.diffView,\n                    {\n                      backgroundColor: \"\",\n                      minWidth: isMobileScreen ? 250 : 350,\n                    },\n                  ]}\n                >\n                  <View\n                    style={{\n                      backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n                      borderRadius: 10,\n                      borderWidth: 1,\n                      borderColor: \"#fff\",\n                      padding: 10,\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 20,\n                        color: \"#fff\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      {getCoummunityData?.name}\n                    </Text>\n                  </View>\n                  <View\n                    style={{\n                      backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n                      borderRadius: 10,\n                      borderWidth: 1,\n                      borderColor: \"#fff\",\n                      padding: 20,\n                      marginTop: 15,\n                    }}\n                  >\n                    <Text\n                      style={{\n                        fontSize: 18,\n                        color: \"#fff\",\n                        textAlign: \"center\",\n                      }}\n                    >\n                      {getCoummunityData?.description}\n                    </Text>\n                  </View>\n                  <View\n                    style={[\n                      styles.viewm,\n                      {\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                        alignItems: \"center\",\n                        height: 55,\n                        backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n                        paddingHorizontal: 20,\n                        marginTop: 10,\n                        paddingVertical: 15,\n                      },\n                    ]}\n                  >\n                    <Image\n                      source={IMAGES.search}\n                      style={{ height: 18, width: 18 }}\n                    />\n                    <TextInput\n                      style={[\n                        {\n                          backgroundColor: \"\",\n                          padding: 8,\n                          width: \"100%\",\n                        },\n                        Platform.OS === \"web\"\n                          ? ({ outlineStyle: \"none\" } as any) // 👈 bypass typing\n                          : {},\n                      ]}\n                      placeholder=\"Search Box\"\n                      placeholderTextColor={\"#fff\"}\n                    />\n                    <TouchableOpacity style={styles.searchView1}>\n                      <Text style={{ color: \"#191362\" }}>Search</Text>\n                    </TouchableOpacity>\n                  </View>\n                  <View\n                    style={[\n                      styles.viewm,\n                      {\n                        width: \"100%\",\n                        backgroundColor: \"#191362\",\n                        paddingHorizontal: 20,\n                        marginTop: 10,\n                        paddingVertical: 10,\n                        marginVertical: 15,\n                      },\n                    ]}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        width: \"100%\",\n                      }}\n                    >\n                      <Image source={IMAGES.Short} />\n                      <Text\n                        style={{ fontSize: 16, color: \"#fff\", marginLeft: 10 }}\n                      >\n                        Sort by\n                      </Text>\n                    </View>\n                    <View\n                      style={{\n                        width: \"100%\",\n                        gap: 10,\n                      }}\n                    >\n                      <Text\n                        style={{\n                          fontSize: 16,\n                          color: \"#fff\",\n                          marginVertical: 10,\n                          lineHeight: 20,\n                        }}\n                      >\n                        Wall of the community to show the publication from the\n                        founders or the members (the founders can choose to\n                        allow or not the members to publish on the wall)\n                      </Text>\n                      <Text\n                        style={{\n                          fontSize: 14,\n                          color: \"#fff\",\n                          marginBottom: 10,\n                          lineHeight: 20,\n                        }}\n                      >\n                        Possible content to be published on the community’s wall\n                        : Photo, video, text, PDF, Excel, word, PPT, link,\n                        podcast, survey.\n                      </Text>\n                      <Text\n                        style={{\n                          fontSize: 14,\n                          color: \"#fff\",\n                          marginBottom: 10,\n                        }}\n                      >\n                        Every publication can be Liked, disliked, comment,\n                        shared externally or saved\n                      </Text>\n                    </View>\n                  </View>\n                </View>\n\n                <View\n                  style={[\n                    styles.sameView,\n                    {\n                      minWidth: isMobileScreen ? 250 : 350,\n                      backgroundColor: \"trasparent\",\n                      borderWidth: 0,\n                      paddingVertical: 0,\n                    },\n                  ]}\n                >\n                  <View\n                    style={{\n                      backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n                      flexDirection: isMobileScreen ? \"column\" : \"row\",\n                      padding: 10,\n                      alignItems: \"center\",\n                      borderWidth: 1,\n                      borderColor: \"#fff\",\n                      borderRadius: 10,\n                      gap: isMobileScreen ? 15 : 20,\n                      width: \"100%\",\n                    }}\n                  >\n                    <TouchableOpacity\n                      style={styles.button}\n                      onPress={() =>\n                        navigation.navigate(\"PublishPost\", {\n                          screen: \"communityPost\",\n                          community_id: CommunityId,\n                        })\n                      }\n                    >\n                      <Text\n                        style={{\n                          color: \"#191362\",\n                          fontSize: 14,\n                          fontFamily: \"PoppinsRegular\",\n                        }}\n                      >\n                        Create a post\n                      </Text>\n                      <Image\n                        source={IMAGES.Plus}\n                        style={{ tintColor: \"#191362\", marginLeft: 10 }}\n                      />\n                    </TouchableOpacity>\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        gap: 10,\n                      }}\n                    >\n                      <TouchableOpacity\n                        style={[styles.CommonButt, { marginHorizontal: 0 }]}\n                        onPress={() => handleJoinComunity()}\n                      >\n                        <Text\n                          style={{\n                            color: \"#fff\",\n                            fontSize: 14,\n                            fontFamily: \"PoppinsRegular\",\n                          }}\n                        >\n                          {getCoummunityData?.is_joined ? \"Joined\" : \"Join\"}\n                          {/* Join */}\n                        </Text>\n                      </TouchableOpacity>\n                      {/* <TouchableOpacity style={styles.CommonButt}>\n                      <Image source={IMAGES.ThreeDots} />\n                    </TouchableOpacity> */}\n\n                      <View style={styles.pickerWrapper}>\n                        <Picker\n                          selectedValue={selectedValue}\n                          onValueChange={(itemValue) => {\n                            handleDropDown(itemValue);\n                            // setSelectedValue(itemValue);\n                          }}\n                          style={[\n                            styles.picker,\n                            Platform.OS === \"web\"\n                              ? ({ outlineStyle: \"none\" } as any) // 👈 bypass typing\n                              : {},\n                          ]}\n                          dropdownIconColor=\"#6200ee\"\n                          mode=\"dropdown\" // \"dialog\" also works on native\n                        >\n                          <Picker.Item label=\"Select\" value=\"Select\" />\n                          <Picker.Item\n                            label=\"Community Post\"\n                            value=\"CommunityPostList\"\n                          />\n                          <Picker.Item\n                            label=\"Update background image\"\n                            value=\"CommunityBgImage\"\n                          />\n                        </Picker>\n                      </View>\n                    </View>\n                  </View>\n\n                  <View\n                    style={{\n                      backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n                      padding: 10,\n                      alignItems: \"center\",\n                      borderWidth: 1,\n                      borderColor: \"#fff\",\n                      borderRadius: 10,\n                      gap: 10,\n                      justifyContent: \"center\",\n                      width: \"100%\",\n                    }}\n                  >\n                    <View\n                      style={{\n                        flexDirection: \"row\",\n                        justifyContent: \"space-between\",\n                        width: \"100%\",\n                        gap: 10,\n                      }}\n                    >\n                      <View style={styles.statusview}>\n                        <Text style={{ color: \"#fff\", fontSize: 16 }}>\n                          {getCoummunityData?.members?.length}\n                        </Text>\n                        <Text style={{ color: \"#fff\", fontSize: 14 }}>\n                          Members\n                        </Text>\n                      </View>\n                      <View style={styles.statusview}>\n                        <Text style={{ color: \"#fff\", fontSize: 16 }}>658</Text>\n                        <Text style={{ color: \"#fff\", fontSize: 14 }}>\n                          Online\n                        </Text>\n                      </View>\n                    </View>\n\n                    <View\n                      style={{\n                        backgroundColor: \"#191362\",\n                        padding: 10,\n                        gap: 10,\n                        width: \"100%\",\n                        alignItems: \"center\",\n                        borderRadius: 10,\n                      }}\n                    >\n                      <Text\n                        style={{ color: \"#fff\", fontSize: 16, marginTop: 10 }}\n                      >\n                        Founders of the community\n                      </Text>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          borderWidth: 1,\n                          padding: 5,\n                          borderRadius: 10,\n                          borderColor: \"#fff\",\n                          minWidth: 200,\n                          width: \"100%\",\n                        }}\n                      >\n                        <Image source={IMAGES.Commpp} />\n                        <Text\n                          style={{ marginLeft: 5, color: \"#fff\", fontSize: 16 }}\n                        >\n                          Community name 1\n                        </Text>\n                      </View>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          borderWidth: 1,\n                          padding: 5,\n                          borderRadius: 10,\n                          borderColor: \"#fff\",\n                          minWidth: 200,\n                          width: \"100%\",\n                        }}\n                      >\n                        <Image source={IMAGES.Commpp} />\n                        <Text\n                          style={{ marginLeft: 5, color: \"#fff\", fontSize: 16 }}\n                        >\n                          Community name 1\n                        </Text>\n                      </View>\n                    </View>\n\n                    <View\n                      style={{\n                        backgroundColor: \"#191362\",\n                        padding: 10,\n                        width: \"100%\",\n                        alignItems: \"center\",\n                        borderRadius: 10,\n                        gap: 10,\n                      }}\n                    >\n                      <Text\n                        style={{ color: \"#fff\", fontSize: 16, marginTop: 10 }}\n                      >\n                        Administrator\n                      </Text>\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          alignItems: \"center\",\n                          borderWidth: 1,\n                          padding: 5,\n                          borderRadius: 10,\n                          borderColor: \"#fff\",\n                          minWidth: 200,\n                          width: \"100%\",\n                        }}\n                      >\n                        <Image source={IMAGES.Commpp} />\n                        <Text\n                          style={{ marginLeft: 5, color: \"#fff\", fontSize: 16 }}\n                        >\n                          Community name 1\n                        </Text>\n                      </View>\n                    </View>\n\n                    <View\n                      style={{\n                        backgroundColor: \"#191362\",\n                        padding: 10,\n                        width: \"100%\",\n                        alignItems: \"center\",\n                        borderRadius: 10,\n                        gap: 10,\n                      }}\n                    >\n                      <Text\n                        style={{ color: \"#fff\", fontSize: 16, marginTop: 10 }}\n                      >\n                        Rules of the community\n                      </Text>\n                      <View\n                        style={{\n                          padding: 5,\n                          borderRadius: 10,\n                          borderColor: \"#fff\",\n                          minWidth: 200,\n                          width: \"100%\",\n                          gap: 10,\n                        }}\n                      >\n                        <Text\n                          style={{ marginLeft: 5, color: \"#fff\", fontSize: 16 }}\n                        >\n                          1. Lorem Ipsum is simply du\n                        </Text>\n                        <Text\n                          style={{\n                            marginLeft: 5,\n                            color: \"#fff\",\n                            fontSize: 16,\n                          }}\n                        >\n                          2. Lorem Ipsum is simply dummy\n                        </Text>\n                        <Text\n                          style={{ marginLeft: 5, color: \"#fff\", fontSize: 16 }}\n                        >\n                          3. Lorem Ipsum\n                        </Text>\n                      </View>\n                    </View>\n\n                    <View\n                      style={{\n                        backgroundColor: \"#191362\",\n                        padding: 10,\n                        width: \"100%\",\n                        alignItems: \"center\",\n                        borderRadius: 10,\n                        gap: 10,\n                      }}\n                    >\n                      <Text\n                        style={{ color: \"#fff\", fontSize: 16, marginTop: 10 }}\n                      >\n                        Usefull link\n                      </Text>\n                      <View\n                        style={{\n                          padding: 5,\n                          borderRadius: 10,\n                          borderColor: \"#fff\",\n                          minWidth: 200,\n                          width: \"100%\",\n                          gap: 10,\n                        }}\n                      >\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            borderWidth: 1,\n                            padding: 5,\n                            borderRadius: 10,\n                            borderColor: \"#fff\",\n                            justifyContent: \"space-between\",\n                            width: \"100%\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              marginLeft: 5,\n                              color: \"#fff\",\n                              fontSize: 16,\n                            }}\n                          >\n                            Wiki\n                          </Text>\n                          <Image\n                            source={IMAGES.ArrowDown}\n                            style={{ marginRight: 5 }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            flexDirection: \"row\",\n                            alignItems: \"center\",\n                            borderWidth: 1,\n                            padding: 5,\n                            borderRadius: 10,\n                            borderColor: \"#fff\",\n                            justifyContent: \"space-between\",\n                            width: \"100%\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              marginLeft: 5,\n                              color: \"#fff\",\n                              fontSize: 16,\n                            }}\n                          >\n                            Our Network\n                          </Text>\n                          <Image\n                            source={IMAGES.ArrowDown}\n                            style={{ marginRight: 5 }}\n                          />\n                        </View>\n                        <View\n                          style={{\n                            borderWidth: 1,\n                            padding: 5,\n                            borderRadius: 10,\n                            borderColor: \"#fff\",\n                            width: \"100%\",\n                          }}\n                        >\n                          <Text\n                            style={{\n                              marginLeft: 5,\n                              color: \"#fff\",\n                              fontSize: 16,\n                            }}\n                          >\n                            Daily Discussion\n                          </Text>\n                        </View>\n                      </View>\n                    </View>\n\n                    <View\n                      style={{\n                        backgroundColor: \"#191362\",\n                        padding: 10,\n                        width: \"100%\",\n                        borderRadius: 10,\n                      }}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          justifyContent: \"space-between\",\n                        }}\n                      >\n                        <TouchableOpacity\n                          style={{\n                            backgroundColor: \"#fff\",\n                            padding: 10,\n                            borderRadius: 10,\n                            marginHorizontal: 20,\n                            width: \"35%\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text style={{ color: \"#000\", fontSize: 16 }}>\n                            Calendar\n                          </Text>\n                        </TouchableOpacity>\n                        <TouchableOpacity\n                          style={{\n                            padding: 10,\n                            borderRadius: 10,\n                            marginHorizontal: 20,\n                            borderWidth: 1,\n                            borderColor: \"#fff\",\n                            width: \"35%\",\n                            alignItems: \"center\",\n                          }}\n                        >\n                          <Text style={{ color: \"#fff\", fontSize: 16 }}>\n                            List event\n                          </Text>\n                        </TouchableOpacity>\n                      </View>\n                      <View\n                        style={{\n                          width: \"100%\",\n                          alignItems: \"center\",\n                          justifyContent: \"center\",\n                          marginTop: 10,\n                          marginLeft: 10,\n                        }}\n                      >\n                        <DateTimePicker\n                          mode=\"single\"\n                          calendarTextStyle={{ color: \"white\" }}\n                          weekDaysTextStyle={{ color: \"white\" }}\n                          headerTextStyle={{ color: \"white\" }}\n                          headerButtonColor=\"white\"\n                          selectedItemColor=\"white\"\n                        />\n                      </View>\n                    </View>\n\n                    <View\n                      style={{\n                        backgroundColor: \"#191362\",\n                        padding: 10,\n                        width: \"100%\",\n                        alignItems: \"center\",\n                        borderRadius: 10,\n                      }}\n                    >\n                      <Text\n                        style={{ color: \"#fff\", fontSize: 16, marginTop: 10 }}\n                      >\n                        Requests & Answers\n                      </Text>\n                      <View\n                        style={{\n                          marginVertical: 10,\n                          padding: 5,\n                          borderRadius: 10,\n                          borderColor: \"#fff\",\n                          minWidth: 200,\n                          width: \"100%\",\n                        }}\n                      >\n                        <Text\n                          style={{\n                            marginLeft: 5,\n                            color: \"#fff\",\n                            fontSize: 16,\n                            marginBottom: 10,\n                          }}\n                        >\n                          Lorem Ipsum is simply dummy text\n                        </Text>\n                        <View\n                          style={{\n                            borderWidth: 1,\n                            borderColor: \"#fff\",\n                            width: \"100%\",\n                          }}\n                        ></View>\n                        <Text\n                          style={{\n                            marginLeft: 5,\n                            color: \"#fff\",\n                            fontSize: 16,\n                            marginVertical: 10,\n                          }}\n                        >\n                          Lorem Ipsum is simply dummy text Lorem Ipsum is simply\n                          dummy text\n                        </Text>\n                      </View>\n                    </View>\n                  </View>\n                </View>\n              </View>\n            </ScrollView>\n          </ImageBackground>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  container: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    // padding: 20,\n    borderRadius: 20,\n  },\n  closeButton: {\n    position: \"absolute\",\n    top: 20,\n    right: 20,\n    backgroundColor: \"#9F77AA\",\n    padding: 10,\n    borderRadius: 10,\n  },\n  button: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    backgroundColor: COLORS.white,\n    borderRadius: 10,\n    padding: 10,\n  },\n  closeText: {\n    color: \"#fff\",\n    fontWeight: \"bold\",\n  },\n  content: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    textAlign: \"center\",\n    marginTop: 50,\n  },\n  diffView: {\n    flex: 1.5,\n    minWidth: 300,\n    maxWidth: 450,\n  },\n  searchView1: {\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderRadius: 10,\n    width: \"25%\",\n    minWidth: 50,\n    alignItems: \"center\",\n  },\n  viewm: {\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    borderRadius: 10,\n    width: \"25%\",\n    alignItems: \"center\",\n  },\n  image: {\n    width: 100,\n    height: 100,\n    borderRadius: 10,\n    marginBottom: 20,\n  },\n  title: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: \"#333\",\n    marginBottom: 10,\n  },\n  description: {\n    fontSize: 16,\n    color: \"#666\",\n    textAlign: \"center\",\n    marginTop: 20,\n  },\n  sameView: {\n    flex: 1,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    borderRadius: 10,\n    maxWidth: 450,\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    alignItems: \"center\",\n    height: \"auto\",\n    paddingVertical: 10,\n    gap: 10,\n  },\n\n  searchView: {\n    padding: 5,\n    borderRadius: 10,\n    alignItems: \"center\",\n  },\n  CommonButt: {\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    padding: 10,\n    height: 30,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 90,\n  },\n  statusview: {\n    backgroundColor: \"#191362\",\n    // marginHorizontal: 20,\n    padding: 10,\n    alignItems: \"center\",\n    width: 100,\n    minWidth: 80,\n    borderRadius: 10,\n  },\n\n  card: {\n    backgroundColor: \"#191362\",\n    padding: 10,\n    borderRadius: 10,\n    minWidth: 230,\n    width: \"90%\",\n  },\n  row: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  img: {\n    width: 24,\n    height: 24,\n    resizeMode: \"contain\",\n  },\n  text: {\n    fontSize: 16,\n    color: \"#fff\",\n    marginLeft: 8,\n  },\n\n  pickerWrapper: {\n    borderWidth: 1,\n    borderColor: \"#fff\",\n    padding: 10,\n    height: 30,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    width: 90,\n  },\n  picker: {\n    height: 50,\n    width: \"100%\",\n    borderWidth: 0,\n    backgroundColor: \"transparent\",\n    color: COLORS.white,\n  },\n});\n\nexport default CommunityDetail;\n",
    "import React, { useState } from \"react\";\nimport {\n  StyleSheet,\n  ImageBackground,\n  ScrollView,\n  useWindowDimensions,\n  View,\n  Text,\n  TouchableOpacity,\n  ActivityIndicator,\n  Platform,\n  Alert,\n} from \"react-native\";\nimport { COLORS, FONTS, IMAGES } from \"../../utills/Utills\";\n\nimport { useNavigation } from \"@react-navigation/native\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport CustomInput from \"../../utills/CustomInput\";\nimport { GET, POST, getToken } from \"../../utills/Helper\";\nimport { API } from \"../../api/api\";\nimport { BlurView } from \"expo-blur\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ntype CommunityDetails = {\n  members: string[] | number[];\n  name: string;\n  description: string;\n  category: string;\n  allow_member_posts: boolean;\n  announcements: string;\n};\n\ntype CommunityErrors = {\n  nameErr: string | null;\n  descriptionErr: string | null;\n  categoryErr: string | null;\n  announcementsErr: string | null;\n};\n\nconst CreateCommunity = () => {\n  const navigation = useNavigation();\n\n  const [isLoading, setIsLoading] = useState<boolean>(false);\n  const [communityDetails, setCommunityDetails] = useState<CommunityDetails>({\n    members: [],\n    name: \"\",\n    description: \"\",\n    category: \"\",\n    allow_member_posts: true,\n    announcements: \"\",\n  });\n\n  const [useful_links, setUseful_links] = useState<any>({});\n  const [calendar, setCalendar] = useState<any>({});\n\n  const [communityErrors, setCommunityErrors] = useState<CommunityErrors>({\n    nameErr: null,\n    descriptionErr: null,\n    categoryErr: null,\n    announcementsErr: null,\n  });\n\n  const handleCommunityChange = (\n    key: keyof CommunityDetails,\n    value: string\n  ) => {\n    setCommunityDetails((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  const setError = (key: keyof CommunityErrors, value: string | null) => {\n    setCommunityErrors((prev) => ({\n      ...prev,\n      [key]: value,\n    }));\n  };\n\n  const handleCreateCommunity = async () => {\n    setIsLoading(true);\n    const accessToken = await getToken();\n\n    if (communityDetails.name == \"\") {\n      setError(\"nameErr\", \"Enter Your Community Name\");\n      setIsLoading(false);\n      return;\n    } else if (communityDetails.description == \"\") {\n      setError(\"descriptionErr\", \"Enter Community Description\");\n      setIsLoading(false);\n      return;\n    } else if (communityDetails.category == \"\") {\n      setError(\"categoryErr\", \"Enter community Category\");\n      setIsLoading(false);\n      return;\n    } else if (communityDetails.announcements == \"\") {\n      setError(\"announcementsErr\", \"Enter Announcement\");\n      setIsLoading(false);\n      return;\n    }\n\n    const data = {\n      ...communityDetails,\n      useful_links,\n      calendar,\n    };\n\n    const URL = API.CREATE_COMMUNITY;\n\n    try {\n      const response = await POST(URL, data, accessToken);\n      // console.log(\"response create community ===>>> :>> \", response);\n      if (\n        response.data.status == 201 &&\n        response.data.message == \"Community created successfully.\"\n      ) {\n        if (Platform.OS === \"web\") {\n          window.alert(\n            `Success\\n\\n${\"Your community is successfully created\"}`\n          );\n        } else {\n          Alert.alert(\"Success\", \"Your community is successfully created\");\n        }\n        navigation.goBack();\n      }\n    } catch (error) {\n      console.log(\"error craete community :>> \", error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const windowWidth = useWindowDimensions().width;\n  const isSmallScreen = windowWidth < 800;\n  const isMobileScreen = windowWidth < 420;\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner backNavigation />\n        <NavigationBar />\n\n        <BlurView intensity={100} style={styles.container}>\n          <Text style={styles.containerHeading}>Create Community</Text>\n          <View style={styles.containerInputs}>\n            <CustomInput\n              value={communityDetails.name}\n              onChangeText={(text) => [\n                handleCommunityChange(\"name\", text),\n                setError(\"nameErr\", null),\n              ]}\n              placeholder={\"Jhon Doe\"}\n              maxLength={30}\n              errorMessage={communityErrors.nameErr}\n              numOfColumn={2}\n              label={\"Community Name\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={communityDetails.description}\n              onChangeText={(text) => [\n                handleCommunityChange(\"description\", text),\n                setError(\"descriptionErr\", null),\n              ]}\n              placeholder={\"This is a test description.\"}\n              errorMessage={communityErrors.descriptionErr}\n              numOfColumn={2}\n              label={\"Community Description\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={communityDetails.category}\n              onChangeText={(text) => [\n                handleCommunityChange(\"category\", text),\n                setError(\"categoryErr\", null),\n              ]}\n              placeholder={\"Technology\"}\n              errorMessage={communityErrors.categoryErr}\n              numOfColumn={2}\n              label={\"Community Category\"}\n              inputStyle={styles.inputStyle}\n            />\n\n            <CustomInput\n              value={communityDetails.announcements}\n              onChangeText={(text) => [\n                handleCommunityChange(\"announcements\", text),\n                setError(\"announcementsErr\", null),\n              ]}\n              placeholder={\"Welcome to the community!\"}\n              errorMessage={communityErrors.announcementsErr}\n              numOfColumn={2}\n              label={\"Community Announcement\"}\n              inputStyle={styles.inputStyle}\n            />\n          </View>\n\n          <TouchableOpacity\n            onPress={() => handleCreateCommunity()}\n            activeOpacity={0.8}\n            style={styles.UpdateButton}\n            disabled={isLoading}\n          >\n            {isLoading ? (\n              <ActivityIndicator color=\"#000\" />\n            ) : (\n              <Text style={styles.UpdateButtonText}>Submit</Text>\n            )}\n          </TouchableOpacity>\n        </BlurView>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  container: {\n    flex: 1,\n    width: \"100%\",\n    borderWidth: 1,\n    borderColor: COLORS.white,\n    borderRadius: 16,\n    marginTop: 20,\n    paddingVertical: 20,\n    alignItems: \"center\",\n    gap: 20,\n  },\n\n  containerHeading: {\n    color: COLORS.white,\n    fontSize: 28,\n    fontFamily: \"PoppinsSemi\",\n  },\n\n  containerInputs: {\n    width: \"100%\",\n    gap: 10,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"center\",\n  },\n  inputStyle: {\n    textAlign: \"left\",\n  },\n  UpdateButton: {\n    marginTop: Platform.OS === \"web\" ? 20 : 37,\n    width: Platform.OS === \"web\" ? \"30%\" : \"90%\",\n    maxWidth: 350,\n    minWidth: 180,\n    borderRadius: 46,\n    height: 45,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    shadowColor: \"#000\",\n    shadowOffset: {\n      width: 0,\n      height: 1.2,\n    },\n    shadowOpacity: 0.17,\n    shadowRadius: 1,\n    elevation: 5,\n  },\n  UpdateButtonText: {\n    fontFamily: FONTS.Playfair,\n    fontSize: 14,\n    fontWeight: \"500\",\n    color: COLORS.black,\n  },\n});\n\nexport default CreateCommunity;\n",
    "import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  ImageBackground,\n  ScrollView,\n  useWindowDimensions,\n  Text,\n  View,\n  FlatList,\n  TouchableOpacity,\n  Image,\n} from \"react-native\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport { BlurView } from \"expo-blur\";\nimport { GET, getToken } from \"../../utills/Helper\";\nimport { API } from \"../../api/api\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ninterface CommunityItem {\n  id: string;\n  title: string;\n  image: any;\n  messageImage: any;\n}\n\nconst FollowedCommunity = () => {\n  const navigation = useNavigation<any>();\n  const [communityList, setCommunityList] = useState<any[] | null>([]);\n\n  const windowWidth = useWindowDimensions().width;\n  const windowHeight = useWindowDimensions().height;\n  const isSmallScreen = windowWidth < 800;\n  const isMobileScreen = windowWidth < 420;\n\n  const routes = useRoute<any>().params;\n  const route = routes?.screen;\n\n  const handleItemPress = (item: CommunityItem) => {\n    console.log(\"fdkjhsdfh\", item);\n    navigation.navigate(\"CommunityDetail\", { CommunityId: item.id });\n  };\n\n  const handleMyFollowedCommunity = async () => {\n    const accessToken = await getToken();\n    const URL =\n      route === \"allCommunitiesList\"\n        ? API.ALL_COMMUNITY_LIST\n        : API.MY_FOLLOWED_COMMUNITY;\n    console.log(\"🚀 ~ handleMyFollowedCommunity ~ URL:\", URL);\n    try {\n      const response = await GET(URL, accessToken);\n      if (response.status === 204) {\n        setCommunityList(null);\n      } else if (response.data.data.length > 0) {\n        setCommunityList(response?.data?.data);\n      } else {\n        setCommunityList(null);\n      }\n    } catch (error) {\n      console.log(\"error my followed communities :>> \", error);\n    }\n  };\n\n  useEffect(() => {\n    handleMyFollowedCommunity();\n  }, []);\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner backNavigation />\n        <NavigationBar />\n\n        <BlurView intensity={100} style={styles.container}>\n          <Text style={styles.containerHeading}>\n            {route === \"allCommunitiesList\"\n              ? \"All Communities \"\n              : \"Following Community\"}\n          </Text>\n          <View\n            style={[\n              styles.contentContainer,\n              { minHeight: windowHeight - 450, maxHeight: windowHeight - 450 },\n            ]}\n          >\n            <View style={{ width: \"100%\", flex: 1 }}>\n              {communityList !== null ? (\n                <FlatList\n                  data={communityList}\n                  keyExtractor={(item, index) => index.toString()}\n                  showsVerticalScrollIndicator={false}\n                  renderItem={({ item }) => (\n                    <TouchableOpacity\n                      onPress={() => handleItemPress(item)}\n                      style={[styles.card, { marginVertical: 4 }]}\n                    >\n                      <Text style={styles.searchTxt}>{item?.name}</Text>\n                    </TouchableOpacity>\n                  )}\n                />\n              ) : (\n                <View style={[styles.card, { marginVertical: 4 }]}>\n                  <Text\n                    style={[\n                      styles.searchTxt,\n                      {\n                        textAlign: \"center\",\n                        width: \"100%\",\n                      },\n                    ]}\n                  >\n                    Not Found\n                  </Text>\n                </View>\n              )}\n            </View>\n            {!isSmallScreen && (\n              <View\n                style={{\n                  flex: 1,\n                  width: \"100%\",\n                  justifyContent: \"center\",\n                  alignItems: \"center\",\n                }}\n              >\n                <Image\n                  source={IMAGES.FollowingCommunity}\n                  style={{ height: 300, width: 300 }}\n                />\n              </View>\n            )}\n          </View>\n        </BlurView>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  container: {\n    flex: 1,\n    width: \"100%\",\n    borderWidth: 1,\n    borderColor: COLORS.white,\n    borderRadius: 16,\n    marginTop: 20,\n    paddingVertical: 20,\n    alignItems: \"center\",\n    gap: 20,\n  },\n  containerHeading: {\n    color: COLORS.white,\n    fontSize: 28,\n    fontFamily: \"PoppinsSemi\",\n  },\n  contentContainer: {\n    // backgroundColor: \"red\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    // flex: 1,\n    paddingHorizontal: 20,\n  },\n  card: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    padding: 10,\n    backgroundColor: \"#2D2B9B\",\n    marginVertical: 8,\n    borderRadius: 10,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.2,\n    shadowRadius: 3,\n    elevation: 4,\n    gap: 10,\n    minWidth: 200,\n  },\n  searchTxt: {\n    fontSize: 20,\n    color: \"#fff\",\n    fontFamily: \"PoppinsMedium\",\n  },\n});\n\nexport default FollowedCommunity;\n",
    "import React, { ReactNode } from \"react\";\nimport {\n  View,\n  Text,\n  StyleSheet,\n  Pressable,\n  Platform,\n  ViewStyle,\n} from \"react-native\";\n\ntype HoverTooltipProps = {\n  children: ReactNode;\n  tooltipText: string;\n  position?: \"top\" | \"bottom\" | \"left\" | \"right\";\n};\n\nexport const HoverTooltip = ({\n  children,\n  tooltipText,\n  position = \"top\",\n}: HoverTooltipProps) => {\n  const [isVisible, setIsVisible] = React.useState(false);\n\n  // Only show hover effects on web\n  const isWeb = Platform.OS === \"web\";\n\n  const handleHover = (state: boolean) => {\n    if (isWeb) {\n      setIsVisible(state);\n    }\n  };\n\n  const getTooltipPosition = (): ViewStyle => {\n    const commonStyles: ViewStyle = {\n      alignSelf: \"center\",\n    };\n\n    switch (position) {\n      case \"bottom\":\n        return {\n          ...commonStyles,\n          top: \"100%\" as unknown as number, // Type workaround for web\n          marginTop: 4,\n        };\n      case \"left\":\n        return {\n          ...commonStyles,\n          right: \"100%\" as unknown as number,\n          marginRight: 4,\n          top: -10,\n        };\n      case \"right\":\n        return {\n          ...commonStyles,\n          left: \"100%\" as unknown as number,\n          marginLeft: 4,\n          top: -10,\n        };\n      default: // top\n        return {\n          ...commonStyles,\n          bottom: \"100%\" as unknown as number,\n          marginBottom: 4,\n        };\n    }\n  };\n\n  return (\n    <View style={styles.hoverContainer}>\n      <Pressable\n        onHoverIn={() => handleHover(true)}\n        onHoverOut={() => handleHover(false)}\n        onPress={() => (isWeb ? null : setIsVisible(!isVisible))}\n        style={({ pressed }) => [\n          styles.targetElement,\n          pressed && !isWeb && styles.pressed,\n        ]}\n      >\n        {children}\n      </Pressable>\n\n      {isVisible && (\n        <View style={[styles.tooltip, getTooltipPosition()]}>\n          <Text style={styles.tooltipText}>{tooltipText}</Text>\n        </View>\n      )}\n    </View>\n  );\n};\n\nconst styles = StyleSheet.create({\n  hoverContainer: {\n    position: \"relative\",\n  },\n  targetElement: {\n    // padding: 8,\n  },\n  pressed: {\n    opacity: 0.7,\n  },\n  tooltip: {\n    position: \"absolute\",\n    backgroundColor: \"#333\",\n    paddingHorizontal: 8,\n    paddingVertical: 4,\n    borderRadius: 4,\n    zIndex: 100,\n    alignSelf: \"center\",\n    flex: 1,\n  },\n  tooltipText: {\n    color: \"white\",\n    fontSize: 12,\n  },\n});\n",
    "import {\n  FlatList,\n  ImageBackground,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n  useWindowDimensions,\n} from \"react-native\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport CustomInput from \"../../utills/CustomInput\";\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\nimport Ionicons from \"react-native-vector-icons/Ionicons\";\nimport { DELETE, GET, POST, PUT, getToken } from \"../../utills/Helper\";\nimport { API } from \"../../api/api\";\nimport { useEffect, useState } from \"react\";\nimport { HoverTooltip } from \"../../components/Common/HoverTooltip\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ntype QuestionList = {\n  community: number;\n  created_at: string;\n  creator: string;\n  description: string | null;\n  id: number;\n  is_resolved: boolean;\n  likes_count: number;\n  title: string;\n  updated_at: string;\n};\n\ntype QuestionListErr = {\n  status: number;\n  message?: string;\n};\n\ntype AnswerList = {\n  id: number;\n  is_accepted: boolean;\n  likes_count: number;\n  request: number;\n  responder: string;\n  text: string;\n  is_liked: boolean;\n  is_responder: boolean;\n};\n\nconst MyQuesAndAnswer = () => {\n  const navigation = useNavigation<any>();\n  const windowHeight = useWindowDimensions().height;\n\n  const route = useRoute<any>();\n  // const { community_id, my_community } = route.params;\n  const community_id = 1;\n  const my_community = false;\n\n  const [questionList, setQuestionList] = useState<QuestionList[]>(null);\n  const [questionListErr, setQuestionListErr] =\n    useState<QuestionListErr | null>(null);\n  const [answerList, setAnswerList] = useState<AnswerList[]>(null);\n  const [quesAnsText, setQuesAnsText] = useState<string | null>(null);\n  const [quesAnsTextErr, setQuesAnsTextErr] = useState<string | null>(null);\n  const [showInput, setShowInput] = useState<boolean>(false);\n  const [showAnsInput, setShowAnsInput] = useState<boolean>(false);\n  const [isEditAnswer, setisEditAnswer] = useState<number | null>(null);\n\n  const [isActiveQuestion, setiIsActiveQuestion] = useState<number | null>(\n    null\n  );\n\n  const [isQuesCreator, setIsQuesCreator] = useState<boolean>(false);\n\n  const handleGetQuestionList = async () => {\n    try {\n      const Token = await getToken();\n      const URL = `${API.GET_COMMUNITY_REQUEST_QUESTION}${community_id}/`;\n\n      const response = await GET(URL, Token);\n      // console.log(\"🚀 ~ handleGetQuestionList ~ response:\", response);\n      if (response.status === 204) {\n        setQuestionList([response]);\n      } else {\n        setQuestionList(response?.data?.data);\n      }\n    } catch (error) {\n      if (error.status === 403) {\n        setQuestionListErr(error);\n      }\n    } finally {\n    }\n  };\n\n  const handleGetAnswer = async (\n    question_id: number,\n    isCrateor: boolean,\n    refresh: boolean = false\n  ) => {\n    setShowAnsInput(false);\n    setQuesAnsText(null);\n    setQuesAnsTextErr(null);\n\n    if (refresh) {\n    } else if (isActiveQuestion === question_id) {\n      setiIsActiveQuestion(null);\n      setIsQuesCreator(false);\n      setAnswerList(null);\n      return;\n    }\n    setiIsActiveQuestion(question_id);\n    setIsQuesCreator(isCrateor);\n\n    try {\n      const Token = await getToken();\n      const URL = `${API.GET_COMMUNITY_ANSWER}${question_id}/`;\n\n      const response = await GET(URL, Token);\n\n      if (response.status === 204) {\n        setAnswerList(null);\n      } else {\n        setAnswerList(response?.data?.data);\n      }\n    } catch (error) {\n      console.log(\"🚀 ~ handleGetAnswer ~ error:\", error);\n    } finally {\n    }\n  };\n\n  const handleGetMyCommunitiyQList = async () => {\n    try {\n      const Token = await getToken();\n      const URL = API.GET_COMMUNITY_REQUEST_LIST;\n\n      const response = await GET(URL, Token);\n      if (response.status === 204) {\n        setQuestionList([response]);\n      } else {\n        setQuestionList(response?.data?.data?.requests);\n      }\n    } catch (error) {\n      console.log(\"🚀 ~ handleGetCommQuesList ~ error:\", error);\n    } finally {\n    }\n  };\n\n  const handleOnChange = (text) => {\n    setQuesAnsText(text);\n    setQuesAnsTextErr(null);\n  };\n\n  const handleCreateQues = async () => {\n    if (quesAnsText == null || quesAnsText.trim() === \"\") {\n      setQuesAnsTextErr(\"Required\");\n      return;\n    }\n\n    try {\n      const Token = await getToken();\n      const URL = `${API.CREATE_COMMUNITY_REQUEST_QUESTION}${community_id}/`;\n      const data = { title: quesAnsText };\n\n      const response = await POST(URL, data, Token);\n      handleGetQuestionList();\n      setShowInput(false);\n      setQuesAnsText(null);\n    } catch (error) {\n      console.log(\"🚀 ~ handlecreateQues ~ error:\", error);\n    } finally {\n    }\n  };\n\n  const handleShowAnsInput = () => {\n    setShowAnsInput(true);\n    setShowInput(false);\n    setQuesAnsText(null);\n    setQuesAnsTextErr(null);\n    setisEditAnswer(null);\n  };\n\n  const handleShowQuesInput = () => {\n    setShowInput(true);\n    setShowAnsInput(false);\n    setQuesAnsText(null);\n    setQuesAnsTextErr(null);\n    setisEditAnswer(null);\n  };\n\n  const handleCreateAns = async (question_id: number) => {\n    if (quesAnsText === null || quesAnsText.trim() === \"\") {\n      setQuesAnsTextErr(\"Required\");\n      return;\n    }\n\n    try {\n      const Token = await getToken();\n      const URL = `${API.CREATE_COMMUNITY_ANSWER}${question_id}/`;\n      const data = { text: quesAnsText.trim() };\n\n      const response = await POST(URL, data, Token);\n      handleGetAnswer(question_id, true, true);\n      setShowAnsInput(false);\n      setQuesAnsText(null);\n    } catch (error) {\n      console.log(\"🚀 ~ handlecreateAns ~ error:\", error);\n    } finally {\n    }\n  };\n\n  const showEditAnswer = (answer_id: number) => {\n    setisEditAnswer(answer_id);\n    setShowAnsInput(null);\n    setQuesAnsText(null);\n    setQuesAnsTextErr(null);\n    setShowInput(false);\n  };\n\n  const handleEditAnswer = async (answer_id: number) => {\n    if (quesAnsText == null || quesAnsText.trim() === \"\") {\n      setQuesAnsTextErr(\"Required\");\n      return;\n    }\n\n    try {\n      const Token = await getToken();\n      const URL = `${API.EDIT_COMMUNITY_ANSWER}${answer_id}/`;\n      const getURL = `${API.GET_EDITED_COMMUNITY_ANSWER}${answer_id}/`;\n\n      const data = { text: quesAnsText.trim() };\n      const response = await PUT(URL, data, Token);\n      if (response.status === 200) {\n        handleUpdateAnswerList(answer_id);\n      }\n      setisEditAnswer(null);\n      setQuesAnsText(null);\n      setQuesAnsTextErr(null);\n    } catch (error) {\n      console.log(\"🚀 ~ showEditAnswer ~ error:\", error);\n    } finally {\n    }\n  };\n\n  const handleUpdateAnswerList = async (answer_id: number) => {\n    console.log(\"answer_id update answer list :>> \", answer_id);\n    try {\n      const Token = await getToken();\n      const URL = `${API.GET_EDITED_COMMUNITY_ANSWER}${answer_id}/`;\n      const getResponse = await GET(URL, Token);\n      console.log(\"🚀 ~ handleUpdateAnswerList ~ getResponse:\", getResponse);\n      const updatedAnswerList = answerList.map((item) =>\n        item.id === getResponse.data.data.id ? getResponse.data.data : item\n      );\n      setAnswerList(updatedAnswerList);\n    } catch (error) {\n      console.log(\"🚀 ~ handleUpdateAnswerList ~ error:\", error);\n    }\n  };\n\n  const handleDeleteAnswer = async (answer_id: number) => {\n    const confirmed = window.confirm(\"Are you sure you want to delete answer?\");\n    try {\n      if (confirmed) {\n        const Token = await getToken();\n        const URL = `${API.DELETE_COMMUNITY_ANSWER}${answer_id}/`;\n\n        const upddateList = answerList?.filter((del) => del.id !== answer_id);\n        setAnswerList(upddateList.length > 0 ? upddateList : null);\n\n        const response = await DELETE(URL, Token);\n      } else {\n        console.log(\"Cancelled\");\n      }\n    } catch (error) {\n      console.log(\"🚀 ~ handleDeleteAnswer ~ error:\", error);\n    }\n  };\n\n  const handleLikeAns = async (answer_id: number, answer_isLiked: boolean) => {\n    try {\n      const Token = await getToken();\n      const URL = `${API.LIKE_UNLIKE_ANSWER}${answer_id}/`;\n      const data = {\n        action: answer_isLiked ? \"unlike\" : \"like\",\n        obj_type: \"answer\",\n      };\n\n      const response = await POST(URL, data, Token);\n\n      const upddateList = answerList?.map((res) => {\n        if (res.id === answer_id) {\n          return {\n            ...res,\n            is_liked: !answer_isLiked,\n          };\n        }\n        return res;\n      });\n      setAnswerList(upddateList);\n    } catch (error) {\n      console.log(\"🚀 ~ handleLikeeAns ~ error:\", error);\n    }\n  };\n\n  const handleSolveAnswer = async (answer_id: number) => {\n    try {\n      const Token = await getToken();\n      const URL = `${API.MARK_ANS_AS_SOLVED + answer_id}/`;\n      const data = {};\n\n      const response = await POST(URL, data, Token);\n      handleGetAnswer(isActiveQuestion, true, true);\n    } catch (error) {\n      console.log(\"🚀 ~ handleSolveAnswer ~ error:\", error);\n      if (\n        error.status === 400 &&\n        error.message === \"Answer is already accepted.\"\n      ) {\n        if (Platform.OS == \"web\") {\n          window.alert(error.message);\n        }\n      }\n    }\n  };\n\n  useEffect(() => {\n    if (community_id) {\n      handleGetQuestionList();\n    } else if (my_community) {\n      handleGetMyCommunitiyQList();\n    }\n  }, [community_id, my_community]);\n\n  const renderItem = ({ item }) => {\n    // console.log(\"🚀 ~ renderItem ~ item:\", item);\n    if (item.status === 204) {\n      return (\n        <View style={styles.notFound}>\n          <Text style={[styles.ansText, { textAlign: \"center\" }]}>\n            No questions have been asked yet.\n          </Text>\n        </View>\n      );\n    }\n\n    return (\n      <View>\n        <View style={styles.quesContainer}>\n          <View style={styles.ques}>\n            <Text style={styles.quesText}>{item.title}</Text>\n            {item.description && (\n              <Text style={styles.quesDescription}>{item.description}</Text>\n            )}\n          </View>\n\n          <TouchableOpacity\n            style={styles.questionExpand}\n            onPress={() => {\n              handleGetAnswer(item.id, item.is_creator);\n            }}\n          >\n            <AntDesign\n              name={isActiveQuestion === item.id ? \"minus\" : \"plus\"}\n              size={24}\n            />\n          </TouchableOpacity>\n        </View>\n\n        {isActiveQuestion == item.id && (\n          <View style={styles.answerBox}>\n            {answerList !== null ? (\n              answerList?.map((answer, index) => {\n                // console.log(\"🚀 ~ answerList?.map ~ answer:\", answer);\n                if (answer.request == item.id)\n                  return (\n                    <View\n                      style={[\n                        styles.answerStyle,\n                        { borderTopWidth: index > 0 ? 1 : 0 },\n                      ]}\n                      key={index}\n                    >\n                      <View\n                        style={{\n                          flexDirection: \"row\",\n                          gap: 20,\n                          alignItems: \"center\",\n                        }}\n                      >\n                        {answer.is_accepted && (\n                          <HoverTooltip\n                            tooltipText=\"Accepted by author\"\n                            position=\"right\"\n                          >\n                            <Ionicons\n                              name={\n                                answer.is_accepted && \"checkmark-done-sharp\"\n                              }\n                              size={16}\n                              color={COLORS.white}\n                            />\n                          </HoverTooltip>\n                        )}\n\n                        <View style={{ zIndex: -100 }}>\n                          <Text style={styles.ansResponder}>\n                            {answer.responder}\n                          </Text>\n                          <Text style={styles.ansText}>{answer.text}</Text>\n                        </View>\n                      </View>\n\n                      {isEditAnswer === answer.id ? (\n                        <View\n                          style={[styles.inputContainer, { paddingTop: 5 }]}\n                        >\n                          <View style={styles.inputBox}>\n                            <CustomInput\n                              value={quesAnsText ?? \"\"}\n                              onChangeText={(text) => handleOnChange(text)}\n                              placeholder={\"Edit Your Answer\"}\n                              inputStyle={styles.inputStyle}\n                              errorMessage={quesAnsTextErr}\n                            />\n                          </View>\n                          <TouchableOpacity\n                            style={styles.sendBtn}\n                            onPress={() => handleEditAnswer(answer.id)}\n                          >\n                            <Text style={styles.sendTxt}>Submit</Text>\n                          </TouchableOpacity>\n                        </View>\n                      ) : (\n                        <View style={styles.ansBottombar}>\n                          <HoverTooltip\n                            tooltipText={answer.is_liked ? \"Unlike\" : \"Like\"}\n                          >\n                            <TouchableOpacity\n                              onPress={() =>\n                                handleLikeAns(answer.id, answer.is_liked)\n                              }\n                            >\n                              <AntDesign\n                                name={answer.is_liked ? \"like1\" : \"like2\"}\n                                size={16}\n                                color={\n                                  answer.is_liked ? COLORS.blue : COLORS.white\n                                }\n                              />\n                            </TouchableOpacity>\n                          </HoverTooltip>\n                          <HoverTooltip tooltipText=\"Edit\">\n                            <TouchableOpacity\n                              onPress={() => showEditAnswer(answer.id)}\n                            >\n                              <AntDesign\n                                name={\"edit\"}\n                                size={16}\n                                color={COLORS.white}\n                              />\n                            </TouchableOpacity>\n                          </HoverTooltip>\n                          <HoverTooltip tooltipText=\"Delete\">\n                            <TouchableOpacity\n                              onPress={() => handleDeleteAnswer(answer.id)}\n                            >\n                              <AntDesign\n                                name={\"delete\"}\n                                size={16}\n                                color={COLORS.white}\n                              />\n                            </TouchableOpacity>\n                          </HoverTooltip>\n\n                          {isQuesCreator && (\n                            <HoverTooltip tooltipText=\"Mark as Solve\">\n                              <TouchableOpacity\n                                onPress={() => handleSolveAnswer(answer.id)}\n                              >\n                                <AntDesign\n                                  name={\"check\"}\n                                  size={16}\n                                  color={COLORS.white}\n                                />\n                              </TouchableOpacity>\n                            </HoverTooltip>\n                          )}\n                        </View>\n                      )}\n                    </View>\n                  );\n              })\n            ) : (\n              <View style={[styles.answerStyle]}>\n                <Text style={[styles.ansResponder, { textAlign: \"center\" }]}>\n                  oh! Answer is not availble yet.\n                </Text>\n              </View>\n            )}\n\n            {showAnsInput ? (\n              <View style={styles.inputContainer}>\n                <View style={styles.inputBox}>\n                  <CustomInput\n                    value={quesAnsText ?? \"\"}\n                    onChangeText={(text) => handleOnChange(text)}\n                    placeholder={\"Your Valuable Answer\"}\n                    inputStyle={styles.inputStyle}\n                    errorMessage={quesAnsTextErr}\n                  />\n                </View>\n                <TouchableOpacity\n                  style={styles.sendBtn}\n                  onPress={() => handleCreateAns(item.id)}\n                >\n                  <Text style={styles.sendTxt}>Submit</Text>\n                </TouchableOpacity>\n              </View>\n            ) : (\n              <TouchableOpacity\n                style={styles.ansTxt}\n                activeOpacity={0.8}\n                onPress={() => handleShowAnsInput()}\n              >\n                <Text style={styles.ansBtnText}>Post Your Answer</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        )}\n      </View>\n    );\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner backNavigation />\n        <NavigationBar />\n\n        <View\n          style={[\n            styles.bodyContentContainer,\n            { minHeight: windowHeight - 360 },\n          ]}\n        >\n          <View style={styles.quesHeading}>\n            <Text style={styles.heading}>Qustion Answer</Text>\n            {community_id && questionListErr == null && (\n              <TouchableOpacity\n                style={styles.quesBtn}\n                onPress={() => handleShowQuesInput()}\n              >\n                <Text style={styles.quesText}>Ask!</Text>\n              </TouchableOpacity>\n            )}\n          </View>\n\n          {questionListErr?.status == 403 && (\n            <View style={{ alignItems: \"center\" }}>\n              <Text style={[styles.ansText, { textAlign: \"center\" }]}>\n                {questionListErr?.message}\n              </Text>\n            </View>\n          )}\n\n          {showInput && (\n            <View style={styles.inputContainer}>\n              <View style={styles.inputBox}>\n                <CustomInput\n                  value={quesAnsText ?? \"\"}\n                  onChangeText={(text) => handleOnChange(text)}\n                  placeholder={\"What are the details of your problem?\"}\n                  inputStyle={styles.inputStyle}\n                  errorMessage={quesAnsTextErr}\n                />\n              </View>\n              <TouchableOpacity\n                style={styles.sendBtn}\n                onPress={() => handleCreateQues()}\n              >\n                <Text style={styles.sendTxt}> Send</Text>\n              </TouchableOpacity>\n            </View>\n          )}\n\n          <View style={styles.contentContainer}>\n            <FlatList\n              data={questionList}\n              renderItem={renderItem}\n              keyExtractor={(item, index) => index.toString()}\n              contentContainerStyle={{ paddingBottom: 20, gap: 20 }} // Optional\n              showsVerticalScrollIndicator={false}\n            />\n          </View>\n\n          {/* <View style={styles.inputContainer}>\n            <CustomInput\n              //   value={userDetails.last_name}\n              //   onChangeText={(text) => handleUserChange(\"last_name\", text)}\n              placeholder={\"Enter Your Name\"}\n              maxLength={30}\n              numOfColumn={3}\n              //   label={\"Last Name\"}\n              //   inputStyle={styles.inputStyle}\n            />\n          </View> */}\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nexport default MyQuesAndAnswer;\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  bodyContentContainer: {\n    flex: 1,\n    marginTop: 20,\n    alignItems: \"center\",\n    gap: 20,\n    backgroundColor: \"rgba(255,255, 255, 0.3)\",\n    width: \"100%\",\n    height: \"100%\",\n    borderRadius: 8,\n    paddingVertical: 20,\n  },\n  quesHeading: {\n    // backgroundColor: \"red\",\n    flexDirection: \"row\",\n    width: \"100%\",\n    paddingHorizontal: 20,\n    alignItems: \"center\",\n  },\n  heading: {\n    flex: 1,\n    color: COLORS.white,\n    fontSize: 28,\n    textAlign: \"center\",\n  },\n  quesBtn: {\n    backgroundColor: COLORS.white,\n    padding: 10,\n    borderRadius: 8,\n    height: 40,\n  },\n\n  contentContainer: {\n    flex: 1,\n    gap: 10,\n    width: \"100%\",\n    paddingHorizontal: 20,\n  },\n  notFound: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  quesContainer: {\n    padding: 12,\n    width: \"100%\",\n    backgroundColor: COLORS.white,\n    flexDirection: \"row\",\n  },\n  ques: {\n    flex: 1,\n  },\n\n  quesText: {\n    color: COLORS.black,\n    fontSize: 16,\n  },\n\n  inputBox: {\n    maxWidth: 436,\n    minWidth: 250,\n    width: \"100%\",\n  },\n  inputContainer: {\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"flex-start\",\n    paddingHorizontal: 20,\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    gap: 10,\n  },\n\n  sendBtn: {\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    padding: 10,\n    borderRadius: 8,\n    height: 45,\n  },\n  sendTxt: {\n    color: COLORS.black,\n  },\n  inputStyle: {\n    textAlign: \"left\",\n  },\n\n  quesDescription: {\n    color: COLORS.black,\n    fontSize: 12,\n  },\n  questionExpand: {\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n\n  answerBox: {\n    flex: 1,\n    width: \"100%\",\n    borderWidth: 1,\n    borderColor: COLORS.white,\n    padding: 12,\n    gap: 15,\n    // backgroundColor: \"red\",\n  },\n  answerStyle: {\n    // flex: 1,\n    width: \"100%\",\n    borderColor: COLORS.black,\n    gap: 5,\n    // backgroundColor: \"red\",\n  },\n  ansText: {\n    color: COLORS.white,\n    fontSize: 16,\n  },\n  ansResponder: {\n    color: COLORS.white,\n    fontSize: 12,\n  },\n\n  ansBottombar: {\n    flexDirection: \"row\",\n    // justifyContent: \"flex-end\",\n    gap: 15,\n    paddingTop: 5,\n    tintColor: COLORS.white,\n    // zIndex: -100,\n  },\n\n  ansTxt: {\n    padding: 10,\n    borderRadius: 8,\n    backgroundColor: COLORS.white,\n    width: 140,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  ansBtnText: {\n    color: \"black\",\n  },\n});\n",
    "import {\n  FlatList,\n  Image,\n  ImageBackground,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  useWindowDimensions,\n  View,\n} from \"react-native\";\nimport React, { useEffect, useState } from \"react\";\nimport { BlurView } from \"expo-blur\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport axios from \"axios\";\nimport { Video } from \"expo-av\";\nimport { useRoute } from \"@react-navigation/native\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport Banner from \"../../components/Common/Banner\";\nimport ImageCarousel from \"../../utills/ImageCarousel\";\nimport CustomInputText from \"../../components/CustomInputText\";\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\nimport { API, ENV } from \"../../api/api\";\nimport { DELETE, GET, getToken, POST, PUT } from \"../../utills/Helper\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\ninterface MediaItem {\n  files: string;\n}\n\ninterface PostItem {\n  id: number;\n  creator: string;\n  description: string;\n  media: MediaItem[];\n}\n\nconst CommunityPostList: React.FC = () => {\n  const [getPostData, setGetPostData] = useState<PostItem[] | null>([]);\n  const [postData, setPostData] = useState<PostItem[] | null>([]);\n  const [showComment, setShowComment] = useState<Number | null>();\n  const [commentText, setCommentText] = useState<string | null>(null);\n  const [commentsData, setcommentsData] = useState<any[] | null>([]);\n  const [isEditCommment, setIsEditCommment] = useState<boolean>(false);\n  const [editingCommentId, setEditingCommentId] = useState<number | null>(null);\n  const [videosReels, setVideosReels] = useState<any | null>([]);\n\n  const route = useRoute<any>();\n  const { community_id, backgroundImage } = route.params;\n  // console.log(\"🚀 ~ backgroundImage:\", backgroundImage);\n  // const community_id = 13;\n  console.log(\"community_id :>> \", community_id);\n\n  const { width: windowWidth } = useWindowDimensions();\n  const isSmallScreen = windowWidth < 800;\n  const ismobileScreen = windowWidth < 426;\n\n  useEffect(() => {\n    GetPost();\n  }, []);\n\n  const GetPost = async () => {\n    const Token = await getToken();\n    const URL = `${API.GET_COMMUNITY_POST + community_id}`;\n    try {\n      const response = await GET(URL, Token);\n      if (response.status === 204 && response.statusText === \"No Content\") {\n        const data = {\n          status: 204,\n          message: \"No posts have been shared in the community yet.\",\n        };\n        setGetPostData(data);\n      } else {\n        console.log(\"🚀 ~ GetPost ~ response:\", response);\n        setGetPostData(response.data.data);\n        console.log(\"response.data.data==>>\", response.data.data);\n      }\n    } catch (error) {\n      console.error(\"Error get post data:\", error);\n    }\n  };\n\n  const handleLikeReaction = async (id: number, reaction: string) => {\n    const Token = await getToken();\n    const URL = `${API.COMMUNITY_POST_REACTION + id}/`;\n    const data = { action: reaction };\n    try {\n      const response = await POST(URL, data, Token);\n\n      const res = response.data.data;\n      if (response.status === 200 || response.status === 201) {\n        const updatedPosts = getPostData.map((item) => {\n          if (item.id === id) {\n            return {\n              ...item,\n              is_disliked: res.is_disliked,\n              is_liked: res.is_liked,\n            };\n          }\n          return item;\n        });\n        setGetPostData(updatedPosts);\n      }\n    } catch (error) {\n      console.error(\"res error ===--->>>\", error);\n    }\n  };\n\n  const handleSavePost = async (id: number) => {\n    const Token = await getToken();\n    const data = { post: id };\n    const URL = API.SAVE_COMMUNITY_POST;\n    const updatedPosts = await Promise.all(\n      getPostData.map(async (item) => {\n        if (item.id === id) {\n          if (!item.is_saved) {\n            // Save the post\n            try {\n              const response = await POST(URL, data, Token);\n              const res = response.data.data;\n              if (response.status === 201 && item.id === res.post) {\n                return { ...item, is_saved: true };\n              }\n            } catch (error) {\n              console.error(\"Error saving content for post ID:\", id, error);\n            }\n          } else {\n            // Unsave the post\n            try {\n              const URLRemove = `${API.REMOVE_SAVE_COMMUNITY_POST + id}`;\n              const response = await DELETE(URLRemove, Token);\n              const res = response.data.data;\n              if (response.status === 204) {\n                return { ...item, is_saved: false };\n              }\n            } catch (error) {\n              console.error(\"Error removing content for post ID:\", id, error);\n            }\n          }\n        }\n\n        // Return original item if no change\n        return item;\n      })\n    );\n    setGetPostData(updatedPosts);\n  };\n\n  const getCommment = async (id: number) => {\n    const Token = await getToken();\n    const URL = `${API.GET_COMMUNITY_POST_COMENT}${id}`;\n\n    try {\n      const response = await GET(URL, Token);\n      setcommentsData(response.data.data);\n    } catch (error) {\n      console.error(\"error get comment :>> \", error);\n    }\n  };\n\n  const handleComment = (id: number) => {\n    if (showComment == id) {\n      setcommentsData(null);\n      setShowComment(null);\n    } else {\n      setcommentsData(null);\n      getCommment(id);\n      setShowComment(id);\n      setCommentText(null);\n    }\n  };\n\n  const handleCommentReaction = async (comment_id: number) => {\n    const Token = await getToken();\n    const URL = API.COMMUNITY_POST_COMENT_REACTION;\n    const data = { comment_id };\n\n    const comment = commentsData.find((item) => item.id === comment_id);\n    if (!comment) return; // Optional: handle case where comment isn't found\n\n    if (!comment.is_liked) {\n      try {\n        const response = await POST(URL, data, Token);\n        if (response.status === 201) {\n          const updatedPosts = commentsData.map((item) => {\n            if (item.id === comment_id) {\n              return {\n                ...item,\n                is_liked: true,\n                likes_count: item.likes_count + 1,\n              };\n            }\n            return item;\n          });\n          setcommentsData(updatedPosts);\n        } else {\n          console.log(\"Already liked comment\");\n        }\n      } catch (error) {\n        console.error(\"error comment reaction :>> \", error);\n      }\n    } else {\n      try {\n        const URLRemove = `${API.COMMUNITY_POST_COMENT_REACTION_REMOVE}${comment_id}`;\n        const response = await DELETE(URLRemove, Token);\n        if (response.status === 204) {\n          const updatedPosts = commentsData.map((item) => {\n            if (item.id === comment_id) {\n              return {\n                ...item,\n                is_liked: false,\n                likes_count: Math.max(0, item.likes_count - 1),\n              };\n            }\n            return item;\n          });\n          setcommentsData(updatedPosts);\n        } else {\n          console.log(\"Already unliked comment\");\n        }\n      } catch (error) {\n        console.error(\"error comment reaction :>> \", error);\n      }\n    }\n  };\n\n  const handleCommentCreate = async (id: number) => {\n    const Token = await getToken();\n    const URL = API.CREATE_COMMUNITY_POST_COMENT;\n    const data = { post_id: id, text: commentText };\n    if (commentText) {\n      setCommentText(\"\");\n      try {\n        const response = await POST(URL, data, Token);\n        const newData = response.data.data;\n        if (commentsData && commentsData.length > 0) {\n          const filteredComments = commentsData?.filter(\n            (item) => item.id !== newData.id\n          );\n          setcommentsData([newData, ...filteredComments]);\n        } else {\n          setcommentsData([newData]);\n        }\n      } catch (error) {\n        console.error(\"error comment create :>> \", error);\n      }\n    } else {\n      console.log(\"Empty input\");\n    }\n    console.log(\"🚀 ~ handleCommentCreate ~ data:\", data);\n  };\n\n  const handleConfirmDeleteComment = (id: number) => {\n    if (Platform.OS == \"web\") {\n      const confirmed = window.confirm(\n        \"Are you sure you want to delete this comment?\"\n      );\n      if (confirmed) {\n        handleDeleteComment(id);\n      }\n    }\n  };\n\n  const handleDeleteComment = async (id: number) => {\n    const Token = await getToken();\n    const URL = `${API.DELETE_COMMUNITY_POST_COMENT}${id}/`;\n\n    try {\n      const response = await DELETE(URL, Token);\n      const updatedPosts = commentsData.filter((item) => item.id !== id);\n      setcommentsData(updatedPosts);\n    } catch (error) {\n      console.error(\"error comment reaction :>> \", error);\n    }\n  };\n\n  const handleEditComment = async (id: number) => {\n    setIsEditCommment(true);\n    setEditingCommentId(id);\n    const findComment = commentsData.find((item) => item.id == id);\n    setCommentText(findComment.text);\n  };\n\n  const handleCommentUpdate = async () => {\n    if (!editingCommentId) return;\n    const Token = await getToken();\n    const URL = `${API.EDIT_COMMUNITY_POST_COMENT}${editingCommentId}/`;\n    const data = { text: commentText };\n    setCommentText(null);\n\n    try {\n      if (commentText) {\n        const response = await PUT(URL, data, Token);\n        const updatedComments = commentsData.map((item) => {\n          if (item.id === response.data.data.id) {\n            return {\n              ...item,\n              text: response.data.data.text,\n            };\n          }\n          return item;\n        });\n        setcommentsData(updatedComments);\n        // Reset edit mode\n        setIsEditCommment(false);\n        setEditingCommentId(null);\n        setCommentText(\"\");\n      } else {\n        console.log(\"Empty field\");\n      }\n    } catch (error) {\n      console.error(\"error comment create :>> \", error);\n    }\n  };\n\n  //   const videoSection = () => {\n  //     const postsWithVideoMedia = [];\n  //     const postsWithOtherMedia = [];\n\n  //     getPostData.forEach((post) => {\n  //       const videoMedia =\n  //         post.media?.filter((m) => m.media_type === \"video\") || [];\n  //       const otherMedia =\n  //         post.media?.filter((m) => m.media_type !== \"video\") || [];\n\n  //       if (videoMedia.length > 0) {\n  //         postsWithVideoMedia.push({ ...post, media: videoMedia });\n  //       }\n\n  //       if (otherMedia.length > 0) {\n  //         postsWithOtherMedia.push({ ...post, media: otherMedia });\n  //       }\n  //     });\n  //     // console.log(\"postsWithVideoMedia :>> \", postsWithVideoMedia);\n  //     // console.log(\"postsWithOtherMedia :>> \", postsWithOtherMedia);\n  //     setPostData(postsWithOtherMedia);\n  //     setVideosReels(postsWithVideoMedia);\n  //   };\n\n  //   useEffect(() => {\n  //     videoSection();\n  //   }, [getPostData]);\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <Banner backNavigation />\n        <NavigationBar />\n        <View style={{ flex: 1, width: \"100%\" }}>\n          <BlurView intensity={70} style={styles.blurViewContainer}>\n            <View style={styles.innerContainer}>\n              {getPostData.status == 204 ? (\n                <View\n                  style={{\n                    flex: 1,\n                    width: \"100%\",\n                    height: \"100%\",\n                    justifyContent: \"center\",\n                    alignItems: \"center\",\n                  }}\n                >\n                  <Text\n                    style={{\n                      color: COLORS.white,\n                      width: \"100%\",\n                      textAlign: \"center\",\n                      fontSize: 22,\n                    }}\n                  >\n                    {getPostData.message}\n                  </Text>\n                </View>\n              ) : (\n                <FlatList\n                  // data={postData}\n                  data={getPostData}\n                  keyExtractor={(item) => item.id.toString()}\n                  style={[\n                    styles.scrollContainer,\n                    isSmallScreen && styles.scrollContainerSmall,\n                  ]}\n                  contentContainerStyle={styles.contentContainer}\n                  scrollEnabled\n                  nestedScrollEnabled\n                  renderItem={({ item }) => {\n                    // console.log(\"item :>> \", item);\n                    return (\n                      <View key={item.id} style={styles.dataItem}>\n                        <View\n                          style={[\n                            styles.itemHeader,\n                            isSmallScreen && styles.samallItemHeader,\n                          ]}\n                        >\n                          <Text style={styles.userInfo}>{item.creator}</Text>\n                          <View style={styles.shareSaveContainer}>\n                            <Image\n                              source={IMAGES.share}\n                              style={styles.iconLarge}\n                            />\n                            <TouchableOpacity\n                              onPress={() => handleSavePost(item.id)}\n                            >\n                              <AntDesign\n                                name={\"star\"}\n                                color={item.is_saved ? \"#EACC6D\" : COLORS.white}\n                                size={30}\n                              />\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n\n                        <View style={styles.itemSubHeader}>\n                          <Image\n                            source={IMAGES.comment}\n                            style={styles.iconTiny}\n                          />\n                          <Text style={styles.commentText}>Comment</Text>\n                        </View>\n\n                        <View style={styles.descriptionWrapper}>\n                          <Text\n                            style={styles.itemDescription}\n                            numberOfLines={2}\n                          >\n                            {item.description}\n                          </Text>\n                        </View>\n\n                        <ImageCarousel\n                          // images={item.media.map((m) => `${ENV.BASE_URL}${m.files}`)}\n                          media={item.media}\n                          showDotIndicator={item.media.length > 1}\n                        />\n\n                        <View\n                          style={[\n                            styles.actionsRow,\n                            { paddingHorizontal: ismobileScreen ? 0 : 20 },\n                          ]}\n                        >\n                          <View style={{ flex: ismobileScreen ? 0 : 1 }}></View>\n                          <TouchableOpacity\n                            style={styles.commentButton}\n                            onPress={() => handleComment(item.id)}\n                          >\n                            <Image\n                              source={IMAGES.comment}\n                              style={styles.iconTiny}\n                            />\n                            <Text style={{ color: \"#fff\" }}>Comment</Text>\n                          </TouchableOpacity>\n                          <View style={styles.likeContainer}>\n                            <TouchableOpacity\n                              onPress={() =>\n                                handleLikeReaction(item.id, \"like\")\n                              }\n                            >\n                              <AntDesign\n                                name={\"like1\"}\n                                color={\n                                  item.is_liked ? COLORS.likeBlue : COLORS.white\n                                }\n                                size={20}\n                              />\n                            </TouchableOpacity>\n                            <TouchableOpacity\n                              onPress={() =>\n                                handleLikeReaction(item.id, \"dislike\")\n                              }\n                            >\n                              <AntDesign\n                                name={\"dislike1\"}\n                                color={\n                                  item.is_disliked\n                                    ? COLORS.likeBlue\n                                    : COLORS.white\n                                }\n                                size={20}\n                              />\n                            </TouchableOpacity>\n                          </View>\n                        </View>\n                        {showComment == item.id && (\n                          <View style={styles.commentContainer}>\n                            <View style={styles.commentInput}>\n                              <View style={styles.commentInputText}>\n                                <CustomInputText\n                                  placeholder={\"Comment\"}\n                                  placeholderTextColor={COLORS.lightBlack}\n                                  value={commentText}\n                                  onChangeText={setCommentText}\n                                  keyboardType={\"ascii-capable\"}\n                                />\n                              </View>\n                              <TouchableOpacity\n                                onPress={() =>\n                                  isEditCommment\n                                    ? handleCommentUpdate()\n                                    : handleCommentCreate(item.id)\n                                }\n                                style={styles.commentSubmitBtn}\n                              >\n                                <Text>\n                                  {isEditCommment ? \"Update\" : \"Submit\"}\n                                </Text>\n                              </TouchableOpacity>\n                            </View>\n\n                            <View style={styles.commentBorderDivider}></View>\n\n                            <View style={{ gap: 10 }}>\n                              <Text style={styles.commentTitle}>Comments</Text>\n\n                              {commentsData && commentsData.length > 0 ? (\n                                <FlatList\n                                  data={commentsData}\n                                  // style={{ maxHeight: 200 }}\n                                  contentContainerStyle={styles.flatListContent}\n                                  scrollEnabled={false}\n                                  nestedScrollEnabled={true}\n                                  keyExtractor={(item) => item.id.toString()}\n                                  renderItem={(item) => {\n                                    return (\n                                      <View style={styles.commentBox}>\n                                        <Text style={styles.commentUser}>\n                                          {item.item.user}\n                                        </Text>\n                                        <Text style={styles.commentBoxText}>\n                                          {item.item.text}\n                                        </Text>\n\n                                        <View style={styles.alignCommentIcons}>\n                                          <TouchableOpacity\n                                            onPress={() => {\n                                              handleCommentReaction(\n                                                item.item.id\n                                              );\n                                            }}\n                                          >\n                                            <AntDesign\n                                              name={\"like1\"}\n                                              color={\n                                                item.item.is_liked\n                                                  ? COLORS.likeBlue\n                                                  : COLORS.white\n                                              }\n                                              size={20}\n                                            />\n                                          </TouchableOpacity>\n\n                                          <TouchableOpacity\n                                            onPress={() => {\n                                              handleEditComment(item.item.id);\n                                            }}\n                                          >\n                                            <AntDesign\n                                              name={\"edit\"}\n                                              color={COLORS.white}\n                                              size={20}\n                                            />\n                                          </TouchableOpacity>\n\n                                          <TouchableOpacity\n                                            onPress={() => {\n                                              handleConfirmDeleteComment(\n                                                item.item.id\n                                              );\n                                            }}\n                                          >\n                                            <AntDesign\n                                              name={\"delete\"}\n                                              color={COLORS.white}\n                                              size={20}\n                                            />\n                                          </TouchableOpacity>\n                                        </View>\n                                      </View>\n                                    );\n                                  }}\n                                  ItemSeparatorComponent={() => (\n                                    <View\n                                      style={[\n                                        styles.commentBorderDivider,\n                                        { height: 20, marginBottom: 10 },\n                                      ]}\n                                    />\n                                  )}\n                                />\n                              ) : (\n                                <View>\n                                  <Text\n                                    style={{\n                                      textAlign: \"center\",\n                                      color: COLORS.white,\n                                    }}\n                                  >\n                                    No comments\n                                  </Text>\n                                </View>\n                              )}\n                            </View>\n                          </View>\n                        )}\n                      </View>\n                    );\n                  }}\n                />\n              )}\n\n              {/* Video Section */}\n\n              {/* {videosReels.length > 0 && (\n                  <BlurView\n                    intensity={70}\n                    style={[\n                      styles.sliderContainer,\n                      isSmallScreen && styles.smallSliderContainer,\n                    ]}\n                  >\n                    <View style={styles.itemHeader}>\n                      <Text style={styles.userInfo}>Videos for you (reels)</Text>\n                    </View>\n  \n                    <FlatList\n                      data={videosReels}\n                      keyExtractor={(item) => item.id.toString()}\n                      scrollEnabled\n                      nestedScrollEnabled\n                      horizontal\n                      renderItem={({ item }) => {\n                        // console.log(\"item :>> \", item);\n                        return item.media.map((videoItem, index) => (\n                          <View key={index} style={styles.videoWrapper}>\n                            <Video\n                              source={{\n                                uri: `${ENV.BASE_URL}${videoItem.files}`,\n                              }}\n                              style={styles.video}\n                              shouldPlay\n                              // resizeMode=\"cover\"\n                              isMuted\n                            />\n                          </View>\n                        ));\n                      }}\n                    />\n                  </BlurView>\n                )} */}\n            </View>\n          </BlurView>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nexport default CommunityPostList;\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n  },\n  container: { flex: 1 },\n  blurViewContainer: {\n    flex: 1,\n    borderRadius: 32,\n    alignItems: \"center\",\n    marginTop: 20,\n    minHeight: 450,\n  },\n  innerContainer: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  scrollContainerSmall: {\n    width: \"90%\",\n  },\n  scrollContainer: {\n    width: \"60%\",\n    flexGrow: 0,\n  },\n  contentContainer: {\n    width: \"100%\",\n    paddingVertical: 20,\n  },\n  dataItem: {\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    padding: 10,\n    marginVertical: 5,\n    borderRadius: 25,\n  },\n  itemHeader: {\n    flexDirection: \"row\",\n    justifyContent: \"space-between\",\n    alignItems: \"center\",\n    marginBottom: 5,\n    width: \"100%\",\n    flexWrap: \"nowrap\",\n  },\n  samallItemHeader: {\n    flexWrap: \"wrap\",\n    gap: 5,\n  },\n  userInfo: {\n    color: COLORS.white,\n    fontSize: 24,\n    fontFamily: \"PoppinsSemi\",\n  },\n  shareSaveContainer: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  itemSubHeader: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    marginBottom: 10,\n    gap: 10,\n  },\n  commentText: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n  },\n  itemDescription: {\n    color: COLORS.white,\n    fontSize: 16,\n    fontFamily: \"PoppinsMedium\",\n    marginBottom: 10,\n    width: \"92%\",\n    marginRight: 20,\n  },\n  descriptionWrapper: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n  actionsRow: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    marginTop: 10,\n    paddingHorizontal: 20,\n  },\n  commentButton: {\n    flex: 1,\n    flexDirection: \"row\",\n    marginHorizontal: 20,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    width: 120,\n    maxWidth: 120,\n    minWidth: 100,\n    padding: 5,\n    borderRadius: 10,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    gap: 10,\n  },\n  smallDummyPostContainer: {\n    width: \"90%\",\n  },\n  dummyPostContainer: {\n    height: 33,\n    alignItems: \"center\",\n    width: \"60%\",\n    borderRadius: 8,\n    paddingHorizontal: 10,\n    marginLeft: 10,\n    backgroundColor: \"rgba(255, 255, 255, 0.5)\",\n    marginVertical: 20,\n    padding: 20,\n    flex: 1,\n  },\n  dummyImage: {\n    borderRadius: 25,\n    marginVertical: 10,\n    resizeMode: \"cover\",\n    width: \"100%\",\n  },\n  smallSliderContainer: {\n    width: \"90%\",\n    backgroundColor: \"red\",\n  },\n  sliderContainer: {\n    width: \"60%\",\n    minWidth: 200,\n    padding: 20,\n    borderRadius: 32,\n    paddingBottom: 30,\n    marginTop: 20,\n  },\n  videoWrapper: {\n    marginRight: 30,\n    backgroundColor: \"#fff\",\n    padding: 5,\n    width: 150,\n    borderRadius: 10,\n    overflow: \"hidden\",\n  },\n  video: {\n    width: \"100%\",\n    height: 260,\n    borderRadius: 20,\n  },\n  iconTiny: {\n    height: 20,\n    width: 20,\n    resizeMode: \"contain\",\n  },\n  iconTinyMargin: {\n    height: 20,\n    width: 20,\n    resizeMode: \"contain\",\n    marginLeft: 10,\n  },\n  iconSmall: {\n    height: 30,\n    width: 30,\n  },\n  iconLarge: {\n    height: 36,\n    width: 36,\n    marginRight: 10,\n  },\n  headerIcons: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n  },\n  likeContainer: {\n    flexDirection: \"row\",\n    gap: 8,\n    flex: 1,\n    justifyContent: \"flex-end\",\n  },\n\n  commentContainer: {\n    flex: 1,\n    marginTop: 10,\n    gap: 10,\n    borderRadius: 20,\n    padding: 15,\n  },\n  commentInput: {\n    flexWrap: \"wrap\",\n    flexDirection: \"row\",\n    gap: 10,\n  },\n  commentInputText: {\n    flex: 3,\n    minWidth: 200,\n  },\n  commentSubmitBtn: {\n    flex: 1,\n    width: 80,\n    minWidth: 80,\n    height: 45,\n    padding: 10,\n    borderRadius: 8,\n    backgroundColor: COLORS.white,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  commentBorderDivider: {\n    borderBottomWidth: 0.5,\n    borderRadius: 10,\n    borderColor: \"#5c5a5a\",\n    marginHorizontal: 20,\n  },\n\n  commentTitle: {\n    color: COLORS.white,\n  },\n  flatListContent: {\n    paddingBottom: 10,\n  },\n  commentBox: {\n    // flex: 1,\n    // backgroundColor: \"red\",\n    paddingLeft: 20,\n    gap: 5,\n  },\n  commentUser: {\n    color: COLORS.white,\n    fontWeight: \"700\",\n    fontSize: 18,\n  },\n  commentBoxText: {\n    paddingLeft: 20,\n    color: COLORS.white,\n    fontSize: 16,\n  },\n  alignCommentIcons: {\n    flexDirection: \"row\",\n    gap: 20,\n    paddingLeft: 20,\n  },\n});\n",
    "import {\n  ImageBackground,\n  Platform,\n  ScrollView,\n  StyleSheet,\n  Text,\n  TouchableOpacity,\n  View,\n} from \"react-native\";\nimport { useNavigation, useRoute } from \"@react-navigation/native\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport Banner from \"../../components/Common/Banner\";\nimport NavigationBar from \"../../components/Common/NavigationBar\";\nimport * as ImagePicker from \"expo-image-picker\";\nimport { useState } from \"react\";\nimport AntDesign from \"react-native-vector-icons/AntDesign\";\nimport { getToken } from \"../../utills/Helper\";\nimport { API } from \"../../api/api\";\nimport axios from \"axios\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst CommunityBgImage = () => {\n  const [images, setImages] = useState<any | null>(null);\n  console.log(\"🚀 ~ CommunityBgImage ~ images:\", images);\n\n  const navigation = useNavigation<any>();\n\n  const route = useRoute<any>();\n  const { community_id, backgroundImage } = route.params;\n  //   const community_id = 1;\n  console.log(\"🚀 ~ CommunityBgImage ~ backgroundImage:\", backgroundImage);\n  console.log(\"community_id 6665565656565656:>> \", community_id);\n\n  const handleChooseImage = async () => {\n    // setModalVisible(true);\n    // Request permission for the image picker\n    const permissionResult =\n      await ImagePicker.requestMediaLibraryPermissionsAsync();\n    if (permissionResult.granted === false) {\n      alert(\"Permission to access media library is required!\");\n      return;\n    }\n    // Launch image picker for multiple images\n    const result = await ImagePicker.launchImageLibraryAsync({\n      mediaTypes: [\"images\"],\n      allowsMultipleSelection: false, // Allows multiple selection\n      quality: 1,\n      base64: true,\n    });\n\n    if (!result.canceled) {\n      console.log(\"result===>>>\", result);\n\n      const selectedImages = result.assets[0];\n      console.log(\"🚀 ~ handleChooseImage ~ selectedImages:\", selectedImages);\n      setImages(selectedImages);\n    }\n  };\n\n  const handleUploadImage = async () => {\n    console.log(\"upload images 5555\");\n    const Token = await getToken();\n    const URL = `${API.UPDATE_COMMUNITY_BACKGROUND_IMAGE + community_id}/`;\n\n    try {\n      const formData = new FormData();\n      //   if (Platform.OS === \"web\") {\n      //     console.log(\"🚀 ~ handleUploadImage ~ images:\", images);\n      //     const response = await fetch(images.uri);\n      //     const blob = await response.blob();\n      //     console.log(\"🚀 ~ handleUploadImage ~ response:\", response);\n      //     console.log(\"🚀 ~ handleUploadImage ~ blob:\", blob);\n      //     console.log(\"🚀 ~ handleUploadImage ~ images.name:\", images.fileName);\n      //     formData.append(\"background_image\", blob, images.fileName);\n      //   }\n\n      if (Platform.OS === \"web\") {\n        // Web-specific handling\n        const response = await fetch(images.uri);\n        const blob = await response.blob();\n\n        // Create a filename if not available\n        const fileName = images.fileName || `image-${Date.now()}.jpg`;\n\n        formData.append(\"background_image\", blob, fileName);\n      }\n\n      const config = {\n        method: \"put\",\n        url: URL,\n        headers: {\n          Accept: \"application/json\",\n          Authorization: `Bearer ${Token}`,\n          \"Content-Type\": \"multipart/form-data\",\n        },\n        data: formData,\n      };\n\n      const response = await axios.request(config);\n      console.log(\"Api Responce Post data\", response.data);\n\n      if (response.data) {\n        console.log(\"Community back ground image successfully uploaded\");\n        navigation.goBack();\n      }\n    } catch (error) {\n      console.error(\n        \"Post Error:\",\n        error.response ? error.response.data : error.message\n      );\n    } finally {\n      //   setIsLoading(false);\n    }\n  };\n\n  const handleRemoveImage = () => {\n    if (Platform.OS === \"web\") {\n      const confirm = window.confirm(\"Are you sure to remove image\");\n      if (confirm) {\n        setImages(null);\n      }\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      {/* <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      > */}\n      <Banner backNavigation />\n      <NavigationBar />\n      <ImageBackground\n        style={styles.container}\n        source={\n          images !== null\n            ? { uri: images?.uri }\n            : !!backgroundImage\n            ? { uri: backgroundImage }\n            : IMAGES.CommbackImg\n        }\n      >\n        <View style={styles.innerContainer}>\n          <Text style={styles.contentTxt}>\n            Change Community background Image\n          </Text>\n          <TouchableOpacity\n            style={styles.btn}\n            onPress={() => handleChooseImage()}\n          >\n            <Text style={styles.btnTxt}>Select Image</Text>\n          </TouchableOpacity>\n          {images && (\n            <View\n              style={{ flexDirection: \"row\", alignItems: \"center\", gap: 5 }}\n            >\n              <TouchableOpacity\n                style={styles.btn}\n                onPress={() => handleUploadImage()}\n              >\n                <Text style={styles.btnTxt}>Upload</Text>\n              </TouchableOpacity>\n\n              <TouchableOpacity\n                onPress={() => {\n                  handleRemoveImage();\n                }}\n              >\n                <AntDesign name={\"delete\"} color={COLORS.black} size={30} />\n              </TouchableOpacity>\n            </View>\n          )}\n        </View>\n      </ImageBackground>\n      {/* </ScrollView> */}\n    </ImageBackground>\n  );\n};\n\nexport default CommunityBgImage;\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    alignItems: \"center\",\n    paddingHorizontal: 20,\n  },\n  //   scrollableContent: {\n  //     flex: 1,\n  //     paddingVertical: 20,\n  //   },\n  //   scrollableContentContainer: {\n  //     alignItems: \"center\",\n  //   },\n\n  container: {\n    flex: 1,\n    width: \"100%\",\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    marginVertical: 20,\n    padding: 50,\n    overflow: \"hidden\",\n    borderRadius: 20,\n  },\n  innerContainer: {\n    backgroundColor: \"rgba(255, 255, 255, 0.9)\",\n    // flex: 1,\n    padding: 50,\n\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 8,\n    borderWidth: 1,\n    borderColor: COLORS.white,\n    gap: 15,\n  },\n\n  contentTxt: {\n    color: COLORS.black,\n    // backgroundColor: \"red\",\n  },\n\n  btn: {\n    backgroundColor: \"blue\",\n    padding: 10,\n    borderWidth: 1,\n    borderColor: COLORS.white,\n    borderRadius: 20,\n    paddingHorizontal: 30,\n  },\n  btnTxt: {\n    color: COLORS.white,\n  },\n});\n",
    "import React, { useState, useCallback, memo } from \"react\";\nimport {\n  View,\n  Text,\n  TouchableOpacity,\n  Image,\n  StyleSheet,\n  Modal,\n  Platform,\n  ViewStyle,\n  TextStyle,\n  ImageStyle,\n  ImageSourcePropType,\n} from \"react-native\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport Entypo from \"react-native-vector-icons/Entypo\";\n\ntype Option = {\n  label: string;\n  callback: (itemData?: any) => void;\n  icon?: ImageSourcePropType;\n  iconStyle?: ImageStyle;\n  style?: ViewStyle;\n  textStyle?: TextStyle;\n};\n\ntype Props = {\n  options: Option[];\n  itemData?: any;\n  iconStyle?: ImageStyle;\n  buttonStyle?: ViewStyle;\n  modalStyle?: ViewStyle;\n  optionTextStyle?: TextStyle;\n  cancelTextStyle?: TextStyle;\n};\n\nconst ThreeDotsMenu: React.FC<Props> = memo(\n  ({\n    options = [],\n    iconStyle = {},\n    buttonStyle = {},\n    modalStyle = {},\n    optionTextStyle = {},\n    cancelTextStyle = {},\n    itemData = null,\n  }) => {\n    const [modalVisible, setModalVisible] = useState(false);\n\n    const handleOptionPress = useCallback(\n      (action: Option) => {\n        setModalVisible(false);\n        action?.callback?.(itemData);\n      },\n      [itemData]\n    );\n\n    const renderOptions = useCallback(() => {\n      return options.map((option, index) => (\n        <TouchableOpacity\n          key={`option-${index}`}\n          style={[styles.optionButton, option.style]}\n          onPress={() => handleOptionPress(option)}\n          activeOpacity={0.7}\n        >\n          {option.icon && (\n            <Image\n              source={option.icon}\n              style={[styles.optionIcon, option.iconStyle]}\n            />\n          )}\n          <Text style={[styles.optionText, optionTextStyle, option.textStyle]}>\n            {option.label}\n          </Text>\n        </TouchableOpacity>\n      ));\n    }, [options, optionTextStyle]);\n\n    return (\n      <View style={styles.container}>\n        <TouchableOpacity\n          style={[styles.threeDotsButton, buttonStyle]}\n          activeOpacity={0.5}\n          onPress={() => setModalVisible(true)}\n          hitSlop={{ top: 10, bottom: 10, left: 10, right: 10 }}\n        >\n          {/* <Image\n            source={IMAGES.ThreeDots}\n            style={[styles.threeDotsIcon, iconStyle]}\n          /> */}\n          <Entypo name={\"dots-three-vertical\"} color={COLORS.black} size={20} />\n        </TouchableOpacity>\n\n        <Modal\n          animationType=\"fade\"\n          transparent={true}\n          visible={modalVisible}\n          onRequestClose={() => setModalVisible(false)}\n        >\n          <TouchableOpacity\n            style={styles.modalOverlay}\n            activeOpacity={1}\n            onPress={() => setModalVisible(false)}\n          >\n            <View style={[styles.modalContent, modalStyle]}>\n              {renderOptions()}\n              <TouchableOpacity\n                style={styles.cancelButton}\n                onPress={() => setModalVisible(false)}\n              >\n                <Text style={[styles.cancelText, cancelTextStyle]}>Cancel</Text>\n              </TouchableOpacity>\n            </View>\n          </TouchableOpacity>\n        </Modal>\n      </View>\n    );\n  }\n);\n\nconst styles = StyleSheet.create({\n  container: {\n    zIndex: 1,\n  },\n  threeDotsButton: {\n    paddingVertical: 10,\n  },\n  threeDotsIcon: {\n    width: 20,\n    height: 4,\n    tintColor: \"black\",\n  },\n  modalOverlay: {\n    flex: 1,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n    backgroundColor: \"rgba(0, 0, 0, 0.5)\",\n  },\n  modalContent: {\n    width: Platform.select({ web: 250, default: \"80%\" } as any),\n    backgroundColor: \"white\",\n    borderRadius: 12,\n    paddingVertical: 8,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 2 },\n    shadowOpacity: 0.25,\n    shadowRadius: 4,\n    elevation: 5,\n    gap: 10,\n  },\n  optionButton: {\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    // paddingVertical: 12,\n    paddingHorizontal: 16,\n  },\n  optionIcon: {\n    width: 20,\n    height: 20,\n    marginRight: 12,\n    tintColor: \"#333\",\n  },\n  optionText: {\n    fontSize: 16,\n    color: \"#333\",\n  },\n  cancelButton: {\n    paddingVertical: 12,\n    paddingHorizontal: 16,\n    borderTopWidth: 1,\n    borderTopColor: \"#f0f0f0\",\n    marginTop: 8,\n  },\n  cancelText: {\n    fontSize: 16,\n    color: \"blue\",\n    textAlign: \"center\",\n  },\n});\n\nexport default ThreeDotsMenu;\n",
    "import React, { useEffect, useState } from \"react\";\nimport {\n  StyleSheet,\n  useWindowDimensions,\n  ImageBackground,\n  ScrollView,\n  View,\n  Text,\n  TouchableOpacity,\n  FlatList,\n  Image,\n  Platform,\n} from \"react-native\";\nimport { COLORS, IMAGES } from \"../../utills/Utills\";\nimport Banner from \"../../components/Common/Banner\";\nimport {\n  useIsFocused,\n  useNavigation,\n  useRoute,\n} from \"@react-navigation/native\";\nimport { GET, POST, getToken } from \"../../utills/Helper\";\nimport { API } from \"../../api/api\";\nimport ThreeDotsMenu from \"../../components/Common/ThreeDotsMenu\";\nimport { LinearGradient } from \"expo-linear-gradient\";\n\nconst FollowUser = () => {\n  const [followList, setFollowList] = useState(null);\n\n  const windowWidth = useWindowDimensions().width;\n  const isMobileScreen = windowWidth < 480;\n  const isSmallScreen = windowWidth < 768;\n  const isLargeScreen = windowWidth < 1340;\n\n  const { list, userId } = useRoute<any>()?.params;\n  const [isActiveBtn, setIsActiveBtn] = useState(list);\n  const [isRefresh, setIsRefresh] = useState<number>(0);\n\n  const [user, setUser] = useState(userId.email);\n  const [user_id, setUser_id] = useState(null);\n  const [isActiveBlockList, setIsActiveBlockList] = useState(null);\n\n  const navigation = useNavigation<any>();\n  const isFocused = useIsFocused();\n\n  useEffect(() => {\n    if (user_id) {\n      setIsActiveBlockList(null);\n      handleUserFollList();\n      console.log(\"it is working user 1111\");\n    } else {\n      console.log(\"it is working user2222\");\n      handleGetFollowList();\n      handleBlockList();\n    }\n  }, [isActiveBtn, isRefresh]);\n\n  const handleGetFollowList = async () => {\n    try {\n      const Token = await getToken();\n      const URL =\n        isActiveBtn == \"following\"\n          ? API.FOLLOWING_LIST\n          : isActiveBtn == \"follower\" && API.FOLLOWER_LIST;\n\n      const response = await GET(URL, Token);\n      setFollowList(response.data.data);\n    } catch (error) {\n      console.log(\"🚀 ~ handleGetFollowList ~ error:\", error);\n    }\n  };\n\n  const handleUserFollList = async (\n    userId: number = user_id,\n    userEmal: string = user\n  ) => {\n    try {\n      const Token = await getToken();\n      const URL =\n        isActiveBtn == \"following\"\n          ? `${API.USER_FOLLOWING_LIST + userId}/`\n          : isActiveBtn == \"follower\" && `${API.USER_FOLLOWER_LIST + userId}/`;\n\n      const response = await GET(URL, Token);\n      setFollowList(response.data.data);\n      setUser_id(userId);\n      setUser(userEmal);\n    } catch (error) {\n      console.log(\"🚀 ~ FollowUser ~ error:\", error);\n      if (error.status === 400 && error.message === \"No following found.\") {\n        setFollowList([]);\n        setUser_id(userId);\n        setUser(userEmal);\n      }\n      if (\n        error.status === 403 &&\n        error.message === \"You are blocked this user.\"\n      ) {\n        if (Platform.OS == \"web\") {\n          window.alert(`Blockes User\\n\\n${error.message}`);\n        }\n      }\n    }\n  };\n\n  const handleFollow = async (user_id: number) => {\n    try {\n      const Toekn = await getToken();\n      const URL = `${API.FOLLOW_REQIUEST + user_id}/`;\n      const data = {};\n      console.log(\"🚀 ~ handleFollow ~ URL:\", URL);\n\n      const response = await POST(URL, data, Toekn);\n      console.log(\"🚀 ~ handleFollow ~ response:\", response);\n      setIsRefresh((prev) => prev + 1);\n    } catch (error) {\n      console.log(\"🚀 ~ handleFollow ~ error:\", error);\n\n      if (\n        error.status === 403 &&\n        error.message == \"You are blocked this user.\"\n      ) {\n        if (Platform.OS === \"web\") {\n          window.alert(`User Blocked\\n\\n${error.message}`);\n        }\n      }\n    }\n  };\n\n  const handleUnFollow = async (user_id: any) => {\n    console.log(\"🚀 ~ handleUnFollow ~ user_id:\", user_id);\n    console.log(\"unfollow finction :>>\");\n    try {\n      const Token = await getToken();\n      const URL = API.UN_FOLLOW;\n      const data = { user_id };\n\n      const response = await POST(URL, data, Token);\n      console.log(\"🚀 ~ handleUnFollow ~ response:\", response);\n      setIsRefresh((prev) => prev + 1);\n    } catch (error) {\n      console.log(\"🚀 ~ handleUnFollow ~ error:\", error);\n    }\n  };\n\n  const handleBlockUnBlockUser = async (user_id: number, action: string) => {\n    const confirm = window.confirm(\n      `Alert\\n\\nAre you sure to ${action} this user`\n    );\n    if (!confirm) return;\n\n    const Token = await getToken();\n    const URL = action === \"unBlock\" ? API.UN_BLOCK_USER : API.BLOCK_USER;\n    const data = { user_id };\n\n    try {\n      const response = await POST(URL, data, Token);\n      console.log(\"🚀 ~ handleBlockUnBlockUser ~ response:\", response);\n      setIsRefresh((prev) => prev + 1);\n    } catch (error) {\n      console.log(\"🚀 ~ handleBlockUnBlockUser ~ error:\", error);\n    }\n  };\n\n  const handleBlockList = async () => {\n    const Token = await getToken();\n    const URL = API.USER_BLOCK_LIST;\n\n    try {\n      const response = await GET(URL, Token);\n      const res = response?.data?.data;\n      console.log(\"🚀 ~ handleBlockList ~ res:\", res);\n\n      const blockList = res.map((list: any) => list.blocked_user);\n      setFollowList(blockList);\n      setIsActiveBlockList(blockList);\n      console.log(\"🚀 ~ handleBlockList ~ blockList:\", blockList);\n    } catch (error) {\n      console.log(\"🚀 ~ handleBlockList ~ error:\", error);\n    }\n  };\n\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView\n        keyboardShouldPersistTaps=\"handled\"\n        style={styles.scrollableContent}\n        showsVerticalScrollIndicator={false}\n        contentContainerStyle={styles.scrollableContentContainer}\n      >\n        <View style={styles.header}>\n          <Banner backNavigation />\n          {/* <NavigationBar /> */}\n\n          <View style={styles.followingBar}>\n            <View style={styles.barUserId}>\n              <Text style={styles.countTxt}>{user}</Text>\n            </View>\n\n            <TouchableOpacity\n              style={styles.barBtn}\n              onPress={() => navigation.goBack()}\n              activeOpacity={0.5}\n            >\n              <Text style={[styles.barBtnTxt]}>Profile</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={[\n                styles.barBtn,\n                isActiveBtn === \"following\" && styles.activeBarBtn,\n              ]}\n              onPress={() => setIsActiveBtn(\"following\")}\n              activeOpacity={0.5}\n            >\n              <Text\n                style={[\n                  styles.barBtnTxt,\n                  isActiveBtn === \"following\" && styles.activeBarBtnTxt,\n                ]}\n              >\n                Followings\n              </Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity\n              style={[\n                styles.barBtn,\n                isActiveBtn === \"follower\" && styles.activeBarBtn,\n              ]}\n              onPress={() => setIsActiveBtn(\"follower\")}\n              activeOpacity={0.5}\n            >\n              <Text\n                style={[\n                  styles.barBtnTxt,\n                  isActiveBtn === \"follower\" && styles.activeBarBtnTxt,\n                ]}\n              >\n                Followers\n              </Text>\n            </TouchableOpacity>\n\n            {!!isActiveBlockList && (\n              <TouchableOpacity\n                style={[\n                  styles.barBtn,\n                  isActiveBtn === \"block\" && styles.activeBarBtn,\n                ]}\n                onPress={() => setIsActiveBtn(\"block\")}\n                activeOpacity={0.5}\n              >\n                <Text\n                  style={[\n                    styles.barBtnTxt,\n                    isActiveBtn === \"block\" && styles.activeBarBtnTxt,\n                  ]}\n                >\n                  Block List\n                </Text>\n              </TouchableOpacity>\n            )}\n          </View>\n        </View>\n\n        <View style={styles.contentContainer}>\n          <View style={styles.heading}>\n            <Text style={styles.headingTxt}>\n              {isActiveBtn === \"block\"\n                ? \"Block List\"\n                : isActiveBtn === \"following\"\n                ? \"Following\"\n                : \"Follower\"}\n            </Text>\n            {followList?.length > 0 && (\n              <View style={styles.followCount}>\n                <Text style={styles.countTxt}>{followList?.length}</Text>\n              </View>\n            )}\n          </View>\n\n          <View style={{}}>\n            <FlatList\n              data={followList}\n              keyExtractor={(item, index) => \"followList\" + index.toString()}\n              contentContainerStyle={{\n                gap: 10,\n                paddingVertical: 10,\n                paddingHorizontal: 30,\n              }}\n              columnWrapperStyle={{ gap: 10, justifyContent: \"space-evenly\" }}\n              style={{ gap: 10 }}\n              numColumns={2}\n              renderItem={({ item, index }) => (\n                <View key={index} style={styles.followCard}>\n                  <TouchableOpacity\n                    style={styles.imageView}\n                    activeOpacity={0.5}\n                    onPress={() => handleUserFollList(item.id, item.email)}\n                    disabled={isActiveBtn === \"block\"}\n                  >\n                    <Image\n                      source={{\n                        uri: !!item.profile_image\n                          ? item.profile_image\n                          : \"https://upload.wikimedia.org/wikipedia/commons/7/7c/Profile_avatar_placeholder_large.png?20150327203541\",\n                      }}\n                      style={styles.follUserImage}\n                      resizeMode=\"cover\"\n                    />\n                  </TouchableOpacity>\n                  <TouchableOpacity\n                    style={styles.followUserID}\n                    activeOpacity={0.5}\n                    onPress={() => handleUserFollList(item.id, item.email)}\n                    disabled={isActiveBtn === \"block\"}\n                  >\n                    <Text>{item.name}</Text>\n                    <Text style={styles.follEmail}>{item.email}</Text>\n                  </TouchableOpacity>\n\n                  <TouchableOpacity\n                    activeOpacity={0.5}\n                    style={\n                      isActiveBtn === \"block\"\n                        ? styles.followedBtn\n                        : item?.is_follow\n                        ? styles.followBtn\n                        : styles.followedBtn\n                    }\n                    onPress={() =>\n                      isActiveBtn === \"block\"\n                        ? handleBlockUnBlockUser(item.id, \"unBlock\")\n                        : !item?.is_follow && handleFollow(item.id)\n                    }\n                  >\n                    <Text\n                      style={\n                        item?.is_follow\n                          ? styles.followBtnTxt\n                          : styles.followedBtnTxt\n                      }\n                    >\n                      {isActiveBtn === \"block\"\n                        ? \"Un Block\"\n                        : item?.is_follow\n                        ? \"Following\"\n                        : \"Follow\"}\n                    </Text>\n                  </TouchableOpacity>\n\n                  {isActiveBtn !== \"block\" && (\n                    <ThreeDotsMenu\n                      itemData={item.id}\n                      options={[\n                        ...(item.is_follow\n                          ? [\n                              {\n                                label: \"UnFollow\",\n                                callback: (data: any) => handleUnFollow(data),\n                                // icon: deleteIcon,\n                                iconStyle: { tintColor: \"green\" },\n                                textStyle: { color: COLORS.black },\n                              },\n                            ]\n                          : []),\n                        ...(item.is_block\n                          ? [\n                              {\n                                label: \"UnBlock\",\n                                callback: (data) =>\n                                  handleBlockUnBlockUser(data, \"unBlock\"),\n                                // icon: deleteIcon,\n                                iconStyle: { tintColor: \"green\" },\n                                textStyle: { color: \"red\" },\n                              },\n                            ]\n                          : [\n                              {\n                                label: \"Block\",\n                                callback: (data) =>\n                                  handleBlockUnBlockUser(data, \"block\"),\n                                // icon: deleteIcon,\n                                iconStyle: { tintColor: \"green\" },\n                                textStyle: { color: \"red\" },\n                              },\n                            ]),\n                      ]}\n                      iconStyle={{ tintColor: \"black\" }}\n                      modalStyle={{ backgroundColor: \"#fafafa\" }}\n                      cancelTextStyle={{ color: \"gray\" }}\n                    />\n                  )}\n                </View>\n              )}\n            />\n          </View>\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nconst styles = StyleSheet.create({\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n  scrollableContent: {\n    flex: 1,\n    paddingVertical: 20,\n  },\n  scrollableContentContainer: {\n    alignItems: \"center\",\n    gap: 20,\n  },\n\n  header: {\n    width: \"100%\",\n    gap: 20,\n  },\n  followingBar: {\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n    borderRadius: 8,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    flexDirection: \"row\",\n    gap: 20,\n    justifyContent: \"flex-end\",\n  },\n  barUserId: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n    flex: 1,\n  },\n  barBtn: {\n    paddingVertical: 5,\n    paddingHorizontal: 10,\n  },\n  barBtnTxt: {\n    color: COLORS.white,\n  },\n  activeBarBtn: {\n    borderBottomColor: \"#1d9af5\",\n    borderBottomWidth: 2,\n  },\n  activeBarBtnTxt: {\n    color: \"#1d9af5\",\n  },\n\n  contentContainer: {\n    backgroundColor: \"rgba(255, 255, 255, 0.2)\",\n    flex: 1,\n    width: \"100%\",\n    minHeight: 440,\n    borderRadius: 20,\n    padding: 10,\n  },\n  heading: {\n    flexDirection: \"row\",\n    // flex: 1,\n    padding: 10,\n    gap: 5,\n  },\n  headingTxt: {\n    // backgroundColor: \"red\",\n    color: COLORS.white,\n    fontSize: 24,\n  },\n\n  followCount: {\n    backgroundColor: \"#1d9af5\",\n    borderRadius: 20,\n    height: 20,\n    padding: 5,\n    justifyContent: \"center\",\n    alignItems: \"center\",\n  },\n  countTxt: {\n    color: COLORS.white,\n  },\n  followCard: {\n    width: \"100%\",\n    backgroundColor: COLORS.white,\n    maxWidth: 400,\n    minWidth: 240,\n    paddingVertical: 10,\n    paddingHorizontal: 20,\n    borderRadius: 8,\n    flexDirection: \"row\",\n    alignItems: \"center\",\n    gap: 10,\n  },\n  imageView: {\n    borderRadius: 50,\n    overflow: \"hidden\",\n  },\n  follUserImage: {\n    width: 30,\n    height: 30,\n  },\n  followUserID: {\n    flex: 1,\n  },\n  follEmail: {\n    fontSize: 10,\n  },\n  followedBtn: {\n    backgroundColor: \"#1d9af5\",\n    borderRadius: 100,\n    padding: 10,\n  },\n  followBtn: {\n    borderColor: \"#1d9af5\",\n    borderWidth: 1,\n    borderRadius: 100,\n    padding: 10,\n  },\n  followedBtnTxt: {\n    color: COLORS.white,\n    fontSize: 12,\n  },\n  followBtnTxt: {\n    color: \"#1d9af5\",\n    fontSize: 12,\n  },\n  FollThreeDots: {\n    paddingVertical: 10,\n  },\n});\n\nexport default FollowUser;\n",
    "import { LinearGradient } from \"expo-linear-gradient\";\nimport React from \"react\";\nimport {\n  View,\n  Text,\n  ScrollView,\n  Pressable,\n  Dimensions,\n  StyleSheet,\n  ImageBackground,\n} from \"react-native\";\nimport { LineChart } from \"react-native-chart-kit\";\nimport { COLORS } from \"../utills/Utills\";\n\nconst { width } = Dimensions.get(\"window\");\nconst chartData = {\n  labels: [\"2013\", \"2015\", \"2017\", \"2020\", \"2022\", \"2024\", \"2025\"],\n  datasets: [\n    {\n      data: [20, 60, 90, 80, 220, 510, 810],\n      color: () => \"rgba(66, 135, 245, 0.6)\",\n    },\n  ],\n};\n\nconst ChartAnalytics = () => {\n  return (\n    <ImageBackground style={styles.backGroundImg}>\n      <LinearGradient\n        colors={[\"#130f4b\", \"#130f4b\", \"#523398\", \"#6333a8\"]}\n        start={{ x: 0, y: 0 }}\n        end={{ x: 1, y: 1 }}\n        style={StyleSheet.absoluteFill}\n      />\n      <ScrollView contentContainerStyle={styles.container}>\n        <Text style={styles.header}>Money Earned</Text>\n        <Text style={styles.amount}>\n          $509.96 <Text style={styles.change}>+0.46 (+0.09%)</Text>\n        </Text>\n\n        <LineChart\n          data={chartData}\n          width={width - 40}\n          height={220}\n          yAxisLabel=\"$\"\n          chartConfig={chartConfig}\n          bezier\n          style={styles.chartStyle}\n        />\n\n        <View style={styles.filtersRow}>\n          {[\"YTD\", \"1D\", \"1W\", \"1M\", \"1Y\"].map((item) => (\n            <Pressable key={item} style={styles.filterButton}>\n              <Text style={styles.filterText}>{item}</Text>\n            </Pressable>\n          ))}\n        </View>\n\n        {/* <Text style={styles.tipText}>\n          Possibility to change the chart view by Year to date, per day, week,\n          month, year and also select a specific period of time (from 01.02.24\n          to 15.09.2024)\n        </Text> */}\n\n        <Pressable style={styles.exchangeChart}>\n          <Text>Click to exchange the chart</Text>\n        </Pressable>\n\n        <View style={styles.boxContainer}>\n          <InfoBox\n            title=\"Community\"\n            description=\"- Number of followers,\\n9657\"\n          />\n          <InfoBox\n            title=\"Interactions\"\n            description=\"- Number of people followed, message,\\nlike, comment and tag sent...\"\n          />\n          <InfoBox\n            title=\"Attractivity\"\n            description=\"- Number of visitors\\n- How many times someone click on a content...\"\n          />\n          <InfoBox\n            title=\"Creator\"\n            description=\"- Number of contents per day, week, month\\n- Kind of content\\n- Time spends by people on the content\"\n          />\n        </View>\n      </ScrollView>\n    </ImageBackground>\n  );\n};\n\nconst InfoBox = ({ title, description }) => (\n  <View style={styles.infoBox}>\n    <Text style={styles.boxTitle}>{title}</Text>\n    <Text style={styles.boxText}>{description}</Text>\n  </View>\n);\n\nconst chartConfig = {\n  backgroundColor: \"#ffffff\",\n  backgroundGradientFrom: \"#f5f5f5\",\n  backgroundGradientTo: \"#e8f0fe\",\n  decimalPlaces: 2,\n  color: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\n  labelColor: () => \"#333\",\n  propsForDots: {\n    r: \"4\",\n    strokeWidth: \"2\",\n    stroke: \"#4c8bf5\",\n  },\n};\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    alignItems: \"center\",\n  },\n  header: {\n    fontSize: 20,\n    fontWeight: \"bold\",\n    color: COLORS.white,\n    fontFamily: \"PoppinsSemi\",\n  },\n  amount: {\n    fontSize: 18,\n    marginVertical: 10,\n    color: COLORS.white,\n    fontFamily: \"PoppinsSemi\",\n  },\n  change: {\n    color: \"green\",\n  },\n  chartStyle: {\n    marginVertical: 8,\n    borderRadius: 16,\n  },\n  filtersRow: {\n    flexDirection: \"row\",\n    gap: 8,\n    marginTop: 10,\n  },\n  filterButton: {\n    backgroundColor: \"#e0e0e0\",\n    paddingHorizontal: 10,\n    paddingVertical: 4,\n    borderRadius: 8,\n  },\n  filterText: {\n    fontSize: 12,\n    color: \"#000\",\n  },\n  tipText: {\n    marginVertical: 10,\n    fontSize: 12,\n    textAlign: \"center\",\n    color: \"#555\",\n  },\n  exchangeChart: {\n    marginBottom: 10,\n    padding: 8,\n    backgroundColor: \"#f1f1f1\",\n    borderRadius: 6,\n    marginTop: 20,\n  },\n  boxContainer: {\n    flexDirection: \"row\",\n    flexWrap: \"wrap\",\n    justifyContent: \"space-between\",\n    gap: 10,\n  },\n  infoBox: {\n    width: \"48%\",\n    backgroundColor: \"#fff\",\n    padding: 10,\n    borderRadius: 10,\n    elevation: 2,\n    shadowColor: \"#000\",\n    shadowOffset: { width: 0, height: 1 },\n    shadowOpacity: 0.1,\n    shadowRadius: 2,\n  },\n  boxTitle: {\n    fontWeight: \"bold\",\n    marginBottom: 4,\n  },\n  boxText: {\n    fontSize: 12,\n    color: \"#333\",\n  },\n  backGroundImg: {\n    flex: 1,\n    paddingHorizontal: 20,\n  },\n});\n\nexport default ChartAnalytics;\n",
    "import { NavigationContainer } from \"@react-navigation/native\";\nimport { createNativeStackNavigator } from \"@react-navigation/native-stack\";\nimport React, { useEffect, useState } from \"react\";\nimport { Text, Image, Platform, Linking } from \"react-native\";\nimport Home from \"../screen/home/Home\";\nimport Login from \"../screen/Auths/Login\";\nimport Community from \"../components/Exchange/Community\";\nimport User from \"../user/User\";\nimport Register from \"../screen/Auths/Register\";\nimport Otp from \"../screen/Auths/Otp\";\nimport Restpassword from \"../screen/Auths/Restpassword\";\nimport Forgot from \"../screen/Auths/Forgot\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport EditProfile from \"../components/EditProfile\";\nimport PublishPost from \"../components/PublishPost\";\nimport Profile from \"../components/Profile\";\nimport News from \"../components/News\";\nimport Exchange from \"../screen/Exchange/Exchange\";\nimport Communities from \"../screen/Exchange/Communities\";\nimport { createBottomTabNavigator } from \"@react-navigation/bottom-tabs\";\nimport OneToOne from \"../screen/Exchange/OneToOne\";\nimport CommunityDetail from \"../screen/Exchange/CommunityDetail\";\nimport CreateCommunity from \"../screen/Exchange/CreateCommunity\";\nimport FollowedCommunity from \"../screen/Exchange/FollowedCommunity\";\nimport MyQuesAndAnswer from \"../screen/Exchange/MyQuesAndAnswer\";\nimport CommunityPostList from \"../screen/Exchange/CommunityPostList\";\nimport CommunityBgImage from \"../screen/Exchange/CommunityBgImage\";\nimport FollowUser from \"../screen/profile/FollowUsers\";\nimport ChartAnalytics from \"../components/ChartAnalytics\";\n\nexport type RootStackParamList = {\n  Home: undefined;\n  Otp: undefined;\n  Profile: undefined;\n  // Add other screens and their params here\n};\n\nconst Stack = createNativeStackNavigator();\nconst Tab = createBottomTabNavigator();\nconst Route = ({ initialRoute }) => {\n  const [init, setInit] = useState(\"\");\n  const [isLogin, setIsLogin] = useState(null);\n  useEffect(() => {\n    const checkUnVerifiedUser = async () => {\n      const isToken = await AsyncStorage.getItem(\"access_token\");\n      if (isToken) {\n        setIsLogin(true);\n      } else {\n        setIsLogin(false);\n      }\n    };\n\n    checkUnVerifiedUser();\n  }, []);\n\n  if (isLogin === null) {\n    return null;\n  }\n\n  // return (\n  //   <NavigationContainer>\n  //     <Stack.Navigator\n  //       // initialRouteName={isLogin ? \"Home\" : \"Login\"}\n  //       initialRouteName={isLogin ? \"Profile\" : \"Login\"}\n  //       // initialRouteName={\"EditProfile\"}\n  //       screenOptions={{\n  //         headerShown: false,\n  //         autoHideHomeIndicator: true,\n  //         animation: \"slide_from_right\",\n  //         gestureEnabled: false,\n  //       }}\n  //     >\n  //       {/* Auth Screens */}\n  //       <Stack.Screen name=\"Login\" component={Login} />\n  //       <Stack.Screen name=\"Register\" component={Register} />\n  //       <Stack.Screen name=\"Otp\" component={Otp} />\n  //       <Stack.Screen name=\"Restpassword\" component={Restpassword} />\n  //       <Stack.Screen name=\"Forgot\" component={Forgot} />\n\n  //       {/* profile screen */}\n  //       <Stack.Screen name=\"Home\" component={Home} />\n  //       <Stack.Screen name=\"Profile\" component={Profile} />\n  //       <Stack.Screen name=\"EditProfile\" component={EditProfile} />\n\n  //       {/* News screen */}\n  //       <Stack.Screen name=\"News\" component={News} />\n  //       <Stack.Screen name=\"PublishPost\" component={PublishPost} />\n\n  //       {/* Exchange screen */}\n  //       <Stack.Screen name=\"Exchange\" component={Exchange} />\n  //       <Stack.Screen name=\"Communities\" component={Communities} />\n  //       <Stack.Screen name=\"Community\" component={Community} />\n  //       <Stack.Screen name=\"User\" component={User} />\n  //     </Stack.Navigator>\n  //   </NavigationContainer>\n  // );\n\n  return (\n    <NavigationContainer>\n      {isLogin ? <MainStack /> : <AuthStack />}\n    </NavigationContainer>\n  );\n};\n\nconst AuthStack = () => (\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\n    <Stack.Screen name=\"Login\" component={Login} />\n    <Stack.Screen name=\"Register\" component={Register} />\n    <Stack.Screen name=\"Otp\" component={Otp} />\n    <Stack.Screen name=\"Forgot\" component={Forgot} />\n    <Stack.Screen name=\"Restpassword\" component={Restpassword} />\n    <Stack.Screen name=\"MainStack\" component={MainStack} />\n  </Stack.Navigator>\n);\n\nconst MainStack = () => (\n  <Stack.Navigator\n    screenOptions={{ headerShown: false }}\n    initialRouteName={\"ProfileScreen\"}\n  >\n    <Stack.Screen name=\"ProfileScreen\" component={ProfileStack} />\n    <Stack.Screen name=\"NewsScreen\" component={NewsStack} />\n    <Stack.Screen name=\"ExchangeScreen\" component={ExchangeStack} />\n    <Stack.Screen name=\"AuthStack\" component={AuthStack} />\n  </Stack.Navigator>\n);\n\nconst ProfileStack = () => (\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\n    <Stack.Screen name=\"Profile\" component={Profile} />\n    <Stack.Screen name=\"EditProfile\" component={EditProfile} />\n    <Stack.Screen name=\"FollowUser\" component={FollowUser} />\n    <Stack.Screen name=\"User\" component={User} />\n    <Stack.Screen name=\"ChartAnalytics\" component={ChartAnalytics} />\n\n    {/* <Stack.Screen name=\"Home\" component={Home} /> */}\n  </Stack.Navigator>\n);\n\nconst NewsStack = () => (\n  <Stack.Navigator screenOptions={{ headerShown: false }}>\n    <Stack.Screen name=\"News\" component={News} />\n    <Stack.Screen name=\"PublishPost\" component={PublishPost} />\n  </Stack.Navigator>\n);\n\nconst ExchangeStack = () => (\n  <Stack.Navigator\n    screenOptions={{ headerShown: false }}\n    // initialRouteName=\"Exchange\"\n  >\n    <Stack.Screen name=\"Exchange\" component={Exchange} />\n    <Stack.Screen name=\"Communities\" component={Communities} />\n    <Stack.Screen name=\"CommunityBgImage\" component={CommunityBgImage} />\n    <Stack.Screen name=\"OneToOne\" component={OneToOne} />\n    <Stack.Screen name=\"CommunityDetail\" component={CommunityDetail} />\n    <Stack.Screen name=\"CreateCommunity\" component={CreateCommunity} />\n    <Stack.Screen name=\"FollowedCommunity\" component={FollowedCommunity} />\n    <Stack.Screen name=\"MyQuesAndAnswer\" component={MyQuesAndAnswer} />\n    <Stack.Screen name=\"PublishPost\" component={PublishPost} />\n    <Stack.Screen name=\"CommunityPostList\" component={CommunityPostList} />\n\n    {/* \n    <Stack.Screen name=\"Community\" component={Community} />\n     */}\n  </Stack.Navigator>\n);\n\nexport default Route;\n",
    "import { SafeAreaView, StyleSheet, Text, View } from \"react-native\";\nimport Home from \"./src/screen/home/Home\";\nimport Route from \"./src/navigation/Route\";\nimport { FONTS } from \"./src/utills/Utills\";\nimport React, { useEffect } from \"react\";\n\nexport default function App() {\n  useEffect(() => {\n    async function loadFonts() {\n      await FONTS.loadAsync({\n        [FONTS.PoppinsRegular]: require(\"./src/assets/font/poppins.regular.ttf\"),\n        [FONTS.PoppinsMedium]: require(\"./src/assets/font/poppins.medium.ttf\"),\n        [FONTS.Playfair]: require(\"./src/assets/font/PlayfairDisplay-SemiBold.ttf\"),\n        [FONTS.PoppinsSemi]: require(\"./src/assets/font/Poppins-SemiBold.ttf\"),\n        [FONTS.PoppinsLight]: require(\"./src/assets/font/Poppins-Light.ttf\"),\n      });\n    }\n    loadFonts();\n  }, []);\n  return (\n    <SafeAreaView style={{ flex: 1 }}>\n      <Route />\n    </SafeAreaView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n  },\n});\n",
    "// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n",
    "var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};",
    "// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};",
    "// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};",
    "__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();",
    "__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))",
    "// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};",
    "__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};",
    "__webpack_require__.p = \"\";",
    "// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));",
    "// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [132], () => (__webpack_require__(2394)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"
  ],
  "names": [
    "FONTS",
    "PoppinsRegular",
    "PoppinsMedium",
    "PoppinsSemi",
    "Playfair",
    "PoppinsLight",
    "COLORS",
    "black",
    "white",
    "primeryWhite",
    "primary",
    "primaryGreen",
    "primaryLite",
    "lightpurple",
    "lightsky",
    "primarybordercolor",
    "primarygraycolor",
    "primaryBackgroundColor",
    "maroon",
    "darkbordercolor",
    "lightBlack",
    "blue",
    "likeBlue",
    "IMAGES",
    "Calender",
    "require",
    "Load",
    "Close",
    "ShowP",
    "HideP",
    "Banner",
    "star",
    "yout",
    "link",
    "insta",
    "facebook",
    "subsCription",
    "nottification",
    "mess",
    "follow",
    "beg",
    "tip",
    "sort",
    "publi",
    "filltern",
    "pdf",
    "comment",
    "like",
    "search",
    "share",
    "Exchange",
    "Exchange1",
    "CommImage",
    "CommImage1",
    "CommImage2",
    "Commessage",
    "Commpp",
    "Comnoti",
    "ArrowL",
    "ThreeDots",
    "CommbackImg",
    "Plus",
    "Short",
    "ArrowDown",
    "Setting",
    "OneByOne",
    "Commback",
    "Calander",
    "Request",
    "Dislike",
    "Airoplane",
    "Grid",
    "Gridicon",
    "Edit",
    "FollowingCommunity",
    "fbic",
    "heart",
    "laughIc",
    "ENV",
    "API",
    "LOGIN",
    "SIGN_UP",
    "VERIFIY_OTP",
    "RESEND_OTP",
    "FORGOT_PASSWORD_OTP",
    "VERIFY_FORGOT_PASSWORD_OTP",
    "UPDATE_FORGOT_PASSWORD",
    "USER_PROFILE",
    "EDIT_PROFILE",
    "FOLLOW_REQIUEST",
    "FOLLOWING_LIST",
    "USER_FOLLOWING_LIST",
    "FOLLOWER_LIST",
    "USER_FOLLOWER_LIST",
    "UN_FOLLOW",
    "UN_BLOCK_USER",
    "BLOCK_USER",
    "USER_BLOCK_LIST",
    "LOGOUT",
    "USER_CONTENT_LIST",
    "OTHER_CONTENT_LIST",
    "ALL_USER_CONTENT_LIST",
    "UPLOAD_CONTENT",
    "SEARCH_CONTENT",
    "REACTION_CONTENT",
    "SAVE_CONTENT",
    "REMOVE_CONTENT",
    "GET_CONTENT",
    "CREATE_CONTENT_COMMENT",
    "GET_CONTENT_COMMENT",
    "CONTENT_COMMENT_REACTION",
    "DELETE_CONTENT_COMMENT",
    "EDIT_CONTENT_COMMENT",
    "GET_VIDEOS",
    "JOIN_COMMUNITIES",
    "GET_MY_COMMUNITIES",
    "BEST_COMMUNITIES",
    "BEST_CONTRIBUTOR",
    "SEARCH_COMMUNITY",
    "COMMUNITY_LIST",
    "CREATE_COMMUNITY",
    "MY_FOLLOWED_COMMUNITY",
    "ALL_COMMUNITY_LIST",
    "GET_COMMUNITY_REQUEST_QUESTION",
    "GET_COMMUNITY_ANSWER",
    "GET_COMMUNITY_REQUEST_LIST",
    "CREATE_COMMUNITY_REQUEST_QUESTION",
    "CREATE_COMMUNITY_ANSWER",
    "EDIT_COMMUNITY_ANSWER",
    "GET_EDITED_COMMUNITY_ANSWER",
    "DELETE_COMMUNITY_ANSWER",
    "LIKE_UNLIKE_ANSWER",
    "MARK_ANS_AS_SOLVED",
    "CREATE_COMMUNITY_POST",
    "GET_COMMUNITY_POST",
    "CREATE_COMMUNITY_POST_COMENT",
    "GET_COMMUNITY_POST_COMENT",
    "EDIT_COMMUNITY_POST_COMENT",
    "DELETE_COMMUNITY_POST_COMENT",
    "COMMUNITY_POST_COMENT_REACTION",
    "COMMUNITY_POST_COMENT_REACTION_REMOVE",
    "COMMUNITY_POST_REACTION",
    "SAVE_COMMUNITY_POST",
    "REMOVE_SAVE_COMMUNITY_POST",
    "UPDATE_COMMUNITY_BACKGROUND_IMAGE",
    "styles",
    "StyleSheet",
    "create",
    "container",
    "width",
    "borderWidth",
    "borderColor",
    "borderRadius",
    "alignItems",
    "alignSelf",
    "img",
    "height",
    "headerText",
    "color",
    "fontFamily",
    "position",
    "margin",
    "left",
    "fontSize",
    "backNavigation",
    "navigation",
    "useNavigation",
    "windowWidth",
    "useWindowDimensions",
    "isMobileScreen",
    "_jsxs",
    "TouchableOpacity",
    "onPress",
    "goBack",
    "activeOpacity",
    "style",
    "children",
    "_jsx",
    "Image",
    "source",
    "Text",
    "navigationtabs",
    "backgroundColor",
    "borderBottomEndRadius",
    "borderBottomStartRadius",
    "minWidth",
    "flexDirection",
    "justifyContent",
    "padding",
    "tabButton",
    "flex",
    "paddingVertical",
    "selectedTabButton",
    "tabText",
    "fontWeight",
    "selectedTabText",
    "NavigationBar",
    "currentRoute",
    "getState",
    "routeNames",
    "containerWidth",
    "View",
    "map",
    "tab",
    "replace",
    "navigate",
    "getToken",
    "async",
    "token",
    "AsyncStorage",
    "getItem",
    "console",
    "log",
    "message",
    "window",
    "alert",
    "error",
    "POST",
    "url",
    "body",
    "response",
    "axios",
    "post",
    "headers",
    "Object",
    "assign",
    "Accept",
    "Authorization",
    "data",
    "GET",
    "get",
    "status",
    "PUT",
    "put",
    "DELETE",
    "delete",
    "Profile",
    "route",
    "id",
    "params",
    "userProfile",
    "setUserProfile",
    "useState",
    "showText",
    "setShowText",
    "setWindowWidth",
    "Dimensions",
    "useEffect",
    "addEventListener",
    "handleResize",
    "isSmallScreen",
    "isFocused",
    "useIsFocused",
    "GetProfile",
    "Token",
    "Data",
    "URL",
    "undefined",
    "ImageBackground",
    "backGroundImg",
    "LinearGradient",
    "colors",
    "start",
    "x",
    "y",
    "end",
    "absoluteFill",
    "ScrollView",
    "keyboardShouldPersistTaps",
    "scrollableContent",
    "showsVerticalScrollIndicator",
    "contentContainerStyle",
    "scrollableContentContainer",
    "BlurView",
    "intensity",
    "marginTop",
    "maxWidth",
    "uri",
    "avatar",
    "resizeMode",
    "marginVertical",
    "Array",
    "fill",
    "_",
    "index",
    "marginHorizontal",
    "Pressable",
    "marginBottom",
    "image",
    "borderBottomWidth",
    "paddingBottom",
    "full_name",
    "userData",
    "marginLeft",
    "tintColor",
    "list",
    "userId",
    "paddingRight",
    "borderRightWidth",
    "Flonum",
    "following_count",
    "Flotext",
    "paddingLeft",
    "followers_count",
    "card",
    "title",
    "grid",
    "row",
    "label",
    "county_domicile",
    "email",
    "languages_spoken",
    "tarif_per_hour",
    "purpose_of_life",
    "hobbies",
    "flexWrap",
    "minHeight",
    "TokImage",
    "gap",
    "rowData",
    "paddingHorizontal",
    "rowData1",
    "rowImage",
    "rowText",
    "professional_experience",
    "length",
    "item",
    "useInfo",
    "marginRight",
    "organization",
    "duration",
    "description",
    "job_role",
    "job_field",
    "job_Duration",
    "ellipsizeMode",
    "numberOfLines",
    "job_Description",
    "toString",
    "removeItem",
    "handleLogout",
    "textAlign",
    "Publish",
    "containerWrap",
    "publishBox",
    "fullWidth",
    "publishContent",
    "publishText",
    "publishNote",
    "alignRight",
    "filterText",
    "borderStyle",
    "SearchBox",
    "placeholder",
    "onSearch",
    "searchText",
    "setSearchText",
    "smallContainer",
    "icon",
    "TextInput",
    "value",
    "onChangeText",
    "placeholderTextColor",
    "input",
    "handleSearch",
    "searchButton",
    "outlineStyle",
    "ImageCarousel",
    "media",
    "showDotIndicator",
    "activeIndex",
    "setActiveIndex",
    "carouselRef",
    "useRef",
    "fullscreenVisible",
    "setFullscreenVisible",
    "selectedMedia",
    "setSelectedMedia",
    "getIconName",
    "type",
    "handlePress",
    "Carousel",
    "ref",
    "autoPlay",
    "autoPlayInterval",
    "loop",
    "snapEnabled",
    "scrollAnimationDuration",
    "onSnapToItem",
    "renderItem",
    "media_type",
    "files",
    "Video",
    "isMuted",
    "shouldPlay",
    "iconContainer",
    "Ionicons",
    "name",
    "size",
    "iconLabel",
    "renderMedia",
    "panGestureHandlerProps",
    "enabled",
    "dotsContainer",
    "current",
    "scrollTo",
    "animated",
    "handleDotPress",
    "dot",
    "activeDot",
    "Modal",
    "visible",
    "transparent",
    "fullscreenContainer",
    "tint",
    "closeButton",
    "fullscreenImage",
    "useNativeControls",
    "top",
    "right",
    "zIndex",
    "CustomInputText",
    "keyboardType",
    "multiline",
    "inputStyle",
    "inputView",
    "autoCapitalize",
    "inputWeb",
    "text",
    "errorText",
    "shadowColor",
    "shadowOffset",
    "shadowOpacity",
    "shadowRadius",
    "elevation",
    "News",
    "getPostData",
    "setGetPostData",
    "noContent",
    "setNoContent",
    "postData",
    "setPostData",
    "showComment",
    "setShowComment",
    "commentText",
    "setCommentText",
    "commentsData",
    "setcommentsData",
    "isEditCommment",
    "setIsEditCommment",
    "editingCommentId",
    "setEditingCommentId",
    "videosReels",
    "setVideosReels",
    "reelData",
    "setReelData",
    "ismobileScreen",
    "handleLikeReaction",
    "reaction",
    "action",
    "res",
    "updatedPosts",
    "post_id",
    "disliked",
    "liked",
    "handleComment",
    "getCommment",
    "onShare",
    "navigator",
    "Alert",
    "videoSection",
    "postsWithVideoMedia",
    "postsWithOtherMedia",
    "forEach",
    "videoMedia",
    "filter",
    "m",
    "otherMedia",
    "push",
    "a",
    "b",
    "Date",
    "updated_at",
    "onlyFreePosts",
    "is_free",
    "GetPost",
    "getSuggesteVideo",
    "naviagtion",
    "blurViewContainer",
    "innerContainer",
    "query",
    "noConetView",
    "noConetTxt",
    "FlatList",
    "keyExtractor",
    "scrollContainer",
    "scrollContainerSmall",
    "contentContainer",
    "scrollEnabled",
    "nestedScrollEnabled",
    "dataItem",
    "itemHeader",
    "samallItemHeader",
    "creator_id",
    "userInfo",
    "creator_name",
    "shareSaveContainer",
    "iconLarge",
    "content_id",
    "Promise",
    "all",
    "is_saved",
    "content",
    "handleSavePost",
    "itemSubHeader",
    "iconTiny",
    "descriptionWrapper",
    "itemDescription",
    "actionsRow",
    "commentButton",
    "likeContainer",
    "AntDesign",
    "commentContainer",
    "commentInput",
    "commentInputText",
    "updatedComments",
    "handleCommentUpdate",
    "newData",
    "filteredComments",
    "handleCommentCreate",
    "commentSubmitBtn",
    "commentBorderDivider",
    "commentTitle",
    "flatListContent",
    "commentBox",
    "commentUser",
    "user",
    "commentBoxText",
    "alignCommentIcons",
    "comment_id",
    "liked_by",
    "handleCommentReaction",
    "findComment",
    "find",
    "handleEditComment",
    "handleDeleteComment",
    "ItemSeparatorComponent",
    "sliderContainer",
    "smallSliderContainer",
    "reelContainer",
    "videoPlaceholder",
    "video_url",
    "video",
    "ResizeMode",
    "STRETCH",
    "gradientOverlay",
    "reactionsContainer",
    "bottom",
    "profile_image",
    "reactionIcon",
    "reactionCount",
    "horizontal",
    "showsHorizontalScrollIndicator",
    "mobileList",
    "COVER",
    "flexGrow",
    "smallDummyPostContainer",
    "dummyPostContainer",
    "dummyImage",
    "videoWrapper",
    "overflow",
    "iconTinyMargin",
    "iconSmall",
    "headerIcons",
    "aspectRatio",
    "progressText",
    "reelInfo",
    "subtitle",
    "statsContainer",
    "stats",
    "likes",
    "webList",
    "bodyContentContainer",
    "numberOfColumn",
    "count",
    "labelView",
    "labelText",
    "inputWrapper",
    "boxShadow",
    "passwordToggle",
    "errContainer",
    "errText",
    "CustomInput",
    "errorMessage",
    "maxLength",
    "numOfColumn",
    "isPassword",
    "secureText",
    "setSecureText",
    "isLargeScreen",
    "calculatedWidth",
    "secureTextEntry",
    "Entypo",
    "emailRegex",
    "welcomeText",
    "letterSpacing",
    "instructionsText",
    "forgotPassword",
    "forgotPasswordText",
    "textDecorationLine",
    "signInButton",
    "signInButtonText",
    "orContainer",
    "divider",
    "orText",
    "versionText",
    "Login",
    "isLoading",
    "setIsLoading",
    "isLoadingForgotPass",
    "setIsLoadingForgotPass",
    "setEmail",
    "emailError",
    "setEmailError",
    "password",
    "setPassword",
    "passwordError",
    "setPasswordError",
    "isForgotPass",
    "setIsForgotPass",
    "StatusBar",
    "barStyle",
    "translucent",
    "handleEmail",
    "contact",
    "accessToken",
    "reset_token",
    "setItem",
    "user_id",
    "handleForgotPassword",
    "access_token",
    "handleVerfiyAccount",
    "disabled",
    "ActivityIndicator",
    "test",
    "Userwall",
    "setAccessToken",
    "config",
    "method",
    "request",
    "SafeAreaView",
    "handleUpdate",
    "videoItem",
    "Content",
    "items",
    "Serchbox",
    "FlatGrid",
    "itemDimension",
    "spacing",
    "gridView",
    "itemImage",
    "actions",
    "actionButton",
    "actionIcon",
    "borderTopLeftRadius",
    "borderTopRightRadius",
    "User",
    "selectedTab",
    "setSelectedTab",
    "currentIndex",
    "setCurrentIndex",
    "imageContainer",
    "imageWrapper",
    "paginationContainer",
    "passwordRegex",
    "Register",
    "phone",
    "setPhone",
    "phoneError",
    "setPhoneError",
    "firstname",
    "setFirstName",
    "firstNameError",
    "setFirstNameError",
    "lastname",
    "setLastName",
    "isSendOtp",
    "setIsSendOtp",
    "checkUnVerifiedUser",
    "handleFirstName",
    "handlePhone",
    "handleSendOtp",
    "JSON",
    "stringify",
    "phone_number",
    "first_name",
    "last_name",
    "registerUser",
    "paddingTop",
    "Otp",
    "otp",
    "setOtp",
    "otpError",
    "setOtpError",
    "useRoute",
    "isForgotPassScreen",
    "Error",
    "handleOtpForgotPass",
    "handleOtpSubmit",
    "headerView",
    "backButton",
    "logo",
    "outlineColor",
    "passwordInput",
    "passwordContainer",
    "toggleImage",
    "rememberMeContainer",
    "checkbox",
    "rememberMeText",
    "darkpurple",
    "googleButton",
    "googleIcon",
    "googleButtonText",
    "signUpPrompt",
    "signUpText",
    "signUpLink",
    "header",
    "headText",
    "LoginButton",
    "Restpassword",
    "isActive",
    "setIsActive",
    "password1",
    "setPassword1",
    "Forgot",
    "newPassword",
    "setNewPassword",
    "confirmPassword",
    "setConfirmPassword",
    "newPasswordErr",
    "setNewPasswordErr",
    "confirmPasswordErr",
    "setConfirmPasswordErr",
    "trim",
    "new_password",
    "confirm_new_password",
    "code",
    "handleCreateNewPassword",
    "EditProfile",
    "images",
    "setImages",
    "userDetails",
    "setUserDetails",
    "facebook_url",
    "linkedin_url",
    "twitter_url",
    "instagram_url",
    "setProfessional_experience",
    "isArray",
    "userErrors",
    "setUserErrors",
    "first_nameErr",
    "last_nameErr",
    "county_domicileErr",
    "languages_spokenErr",
    "purpose_of_lifeErr",
    "hobbiesErr",
    "handleUserChange",
    "key",
    "prev",
    "handleExperienceChange",
    "updated",
    "setError",
    "bodyConatiner",
    "imageStyle",
    "ImagePicker",
    "requestMediaLibraryPermissionsAsync",
    "granted",
    "result",
    "launchImageLibraryAsync",
    "mediaTypes",
    "allowsMultipleSelection",
    "quality",
    "base64",
    "canceled",
    "selectedImages",
    "assets",
    "asset",
    "fileName",
    "handleImageSelection",
    "experienceHeading",
    "removeIndex",
    "updateData",
    "removeExperience",
    "addBtn",
    "addContainer",
    "addExperience",
    "MaterialIcons",
    "filteredExperience",
    "values",
    "every",
    "val",
    "String",
    "exp",
    "some",
    "formData",
    "FormData",
    "entries",
    "append",
    "fetch",
    "blob",
    "UpdateButton",
    "UpdateButtonText",
    "FileTypeModal",
    "onClose",
    "onSelect",
    "fileTypes",
    "animationType",
    "onRequestClose",
    "centeredView",
    "modalView",
    "modalTitle",
    "itemText",
    "numColumns",
    "listContainer",
    "button",
    "textStyle",
    "toggleContainer",
    "circle",
    "CustomToggle",
    "onToggle",
    "initialValue",
    "isOn",
    "setIsOn",
    "toggleAnim",
    "Animated",
    "Value",
    "translateX",
    "interpolate",
    "inputRange",
    "outputRange",
    "toggleSwitch",
    "timing",
    "toValue",
    "useNativeDriver",
    "transform",
    "FILE_ICONS",
    "word",
    "excel",
    "ppt",
    "audio",
    "default",
    "PublishPost",
    "setTitle",
    "setDescription",
    "titleErr",
    "setTitleErr",
    "setFiles",
    "price",
    "setPrice",
    "uploadImages",
    "setuploadImages",
    "modalVisible",
    "setModalVisible",
    "selectedType",
    "setSelectedType",
    "isFree",
    "setIsFree",
    "nft",
    "setNft",
    "pickFiles",
    "DocumentPicker",
    "multiple",
    "fileType",
    "copyToCacheDirectory",
    "fileList",
    "base64Files",
    "file",
    "extension",
    "split",
    "pop",
    "toLowerCase",
    "startsWith",
    "includes",
    "mimeType",
    "backgroundImage",
    "postContainer",
    "smallPostContainer",
    "mobilePostContainer",
    "screen",
    "fileView",
    "_Fragment",
    "imgPickerBtn",
    "imgPickerTxt",
    "flatListContainer",
    "indicatorStyle",
    "getFileTypeIcon",
    "fileItem",
    "thumbnail",
    "titleView",
    "titleText",
    "handlePostTitle",
    "onlyNumbers",
    "bottomBar",
    "postBtn",
    "postButtonText",
    "community_id",
    "i",
    "handlePost",
    "maxHeight",
    "imgView",
    "childContainer",
    "headerBtn",
    "imgText",
    "viewm",
    "middileContainer",
    "serachInput",
    "searchView",
    "searchTxt",
    "cradContainer",
    "image5",
    "messageImage",
    "boxComm",
    "boxtext",
    "boximg",
    "Communities",
    "bestCommunitiesList",
    "setBestCommunitiesList",
    "bestContributorList",
    "setbestContributorList",
    "searchResult",
    "setSearchResult",
    "URLBestCommunity",
    "URLBestContributer",
    "resCommunities",
    "resContributor",
    "getBestCommunities",
    "handleItemPress",
    "CommunityId",
    "handleMyFollowedCommunity",
    "creator_avatar",
    "searchQuery",
    "resSearch",
    "my_community",
    "heading",
    "OneToOne",
    "closeText",
    "diffView",
    "searchView1",
    "sameView",
    "CommonButt",
    "statusview",
    "pickerWrapper",
    "picker",
    "CommunityDetail",
    "getCoummunityData",
    "setGetCoummunityData",
    "selectedValue",
    "setSelectedValue",
    "LeftBar",
    "getcommunity",
    "background_image",
    "lineHeight",
    "handleJoinComunity",
    "is_joined",
    "Picker",
    "onValueChange",
    "itemValue",
    "dropdownIconColor",
    "mode",
    "Item",
    "members",
    "DateTimePicker",
    "calendarTextStyle",
    "weekDaysTextStyle",
    "headerTextStyle",
    "headerButtonColor",
    "selectedItemColor",
    "containerHeading",
    "containerInputs",
    "CreateCommunity",
    "communityDetails",
    "setCommunityDetails",
    "category",
    "allow_member_posts",
    "announcements",
    "useful_links",
    "setUseful_links",
    "calendar",
    "setCalendar",
    "communityErrors",
    "setCommunityErrors",
    "nameErr",
    "descriptionErr",
    "categoryErr",
    "announcementsErr",
    "handleCommunityChange",
    "handleCreateCommunity",
    "FollowedCommunity",
    "communityList",
    "setCommunityList",
    "windowHeight",
    "routes",
    "HoverTooltip",
    "tooltipText",
    "isVisible",
    "setIsVisible",
    "React",
    "handleHover",
    "state",
    "hoverContainer",
    "onHoverIn",
    "onHoverOut",
    "pressed",
    "targetElement",
    "tooltip",
    "getTooltipPosition",
    "commonStyles",
    "opacity",
    "MyQuesAndAnswer",
    "questionList",
    "setQuestionList",
    "questionListErr",
    "setQuestionListErr",
    "answerList",
    "setAnswerList",
    "quesAnsText",
    "setQuesAnsText",
    "quesAnsTextErr",
    "setQuesAnsTextErr",
    "showInput",
    "setShowInput",
    "showAnsInput",
    "setShowAnsInput",
    "isEditAnswer",
    "setisEditAnswer",
    "isActiveQuestion",
    "setiIsActiveQuestion",
    "isQuesCreator",
    "setIsQuesCreator",
    "handleGetQuestionList",
    "handleGetAnswer",
    "question_id",
    "isCrateor",
    "refresh",
    "handleOnChange",
    "handleUpdateAnswerList",
    "answer_id",
    "getResponse",
    "updatedAnswerList",
    "quesHeading",
    "quesBtn",
    "quesText",
    "ansText",
    "inputContainer",
    "inputBox",
    "sendBtn",
    "handleCreateQues",
    "sendTxt",
    "notFound",
    "quesContainer",
    "ques",
    "quesDescription",
    "questionExpand",
    "is_creator",
    "answerBox",
    "answer",
    "answerStyle",
    "borderTopWidth",
    "is_accepted",
    "ansResponder",
    "responder",
    "handleEditAnswer",
    "ansBottombar",
    "is_liked",
    "answer_isLiked",
    "obj_type",
    "upddateList",
    "handleLikeAns",
    "showEditAnswer",
    "confirmed",
    "confirm",
    "del",
    "handleDeleteAnswer",
    "handleSolveAnswer",
    "handleCreateAns",
    "ansTxt",
    "ansBtnText",
    "CommunityPostList",
    "statusText",
    "is_disliked",
    "creator",
    "URLRemove",
    "likes_count",
    "Math",
    "max",
    "CommunityBgImage",
    "contentTxt",
    "btn",
    "handleChooseImage",
    "btnTxt",
    "now",
    "handleUploadImage",
    "ThreeDotsMenu",
    "memo",
    "options",
    "iconStyle",
    "buttonStyle",
    "modalStyle",
    "optionTextStyle",
    "cancelTextStyle",
    "itemData",
    "handleOptionPress",
    "useCallback",
    "callback",
    "renderOptions",
    "option",
    "optionButton",
    "optionIcon",
    "optionText",
    "threeDotsButton",
    "hitSlop",
    "modalOverlay",
    "modalContent",
    "cancelButton",
    "cancelText",
    "threeDotsIcon",
    "Platform",
    "select",
    "web",
    "borderTopColor",
    "followingBar",
    "barUserId",
    "barBtn",
    "barBtnTxt",
    "activeBarBtn",
    "borderBottomColor",
    "activeBarBtnTxt",
    "headingTxt",
    "followCount",
    "countTxt",
    "followCard",
    "imageView",
    "follUserImage",
    "followUserID",
    "follEmail",
    "followedBtn",
    "followBtn",
    "followedBtnTxt",
    "followBtnTxt",
    "FollThreeDots",
    "FollowUser",
    "followList",
    "setFollowList",
    "isActiveBtn",
    "setIsActiveBtn",
    "isRefresh",
    "setIsRefresh",
    "setUser",
    "setUser_id",
    "isActiveBlockList",
    "setIsActiveBlockList",
    "handleUserFollList",
    "handleGetFollowList",
    "handleBlockList",
    "userEmal",
    "handleBlockUnBlockUser",
    "blockList",
    "blocked_user",
    "columnWrapperStyle",
    "is_follow",
    "Toekn",
    "handleFollow",
    "handleUnFollow",
    "is_block",
    "chartData",
    "labels",
    "datasets",
    "InfoBox",
    "infoBox",
    "boxTitle",
    "boxText",
    "chartConfig",
    "backgroundGradientFrom",
    "backgroundGradientTo",
    "decimalPlaces",
    "labelColor",
    "propsForDots",
    "r",
    "strokeWidth",
    "stroke",
    "amount",
    "change",
    "chartStyle",
    "filtersRow",
    "filterButton",
    "tipText",
    "exchangeChart",
    "boxContainer",
    "ChartAnalytics",
    "LineChart",
    "yAxisLabel",
    "bezier",
    "Stack",
    "createNativeStackNavigator",
    "AuthStack",
    "createBottomTabNavigator",
    "Navigator",
    "screenOptions",
    "headerShown",
    "Screen",
    "component",
    "MainStack",
    "initialRouteName",
    "ProfileStack",
    "NewsStack",
    "ExchangeStack",
    "Route",
    "initialRoute",
    "init",
    "setInit",
    "isLogin",
    "setIsLogin",
    "isToken",
    "NavigationContainer",
    "App",
    "loadAsync",
    "loadFonts",
    "__webpack_module_cache__",
    "__webpack_require__",
    "moduleId",
    "cachedModule",
    "exports",
    "module",
    "loaded",
    "__webpack_modules__",
    "call",
    "deferred",
    "O",
    "chunkIds",
    "fn",
    "priority",
    "notFulfilled",
    "Infinity",
    "fulfilled",
    "j",
    "keys",
    "splice",
    "n",
    "getter",
    "__esModule",
    "d",
    "definition",
    "o",
    "defineProperty",
    "enumerable",
    "g",
    "globalThis",
    "this",
    "Function",
    "e",
    "obj",
    "prop",
    "prototype",
    "hasOwnProperty",
    "Symbol",
    "toStringTag",
    "nmd",
    "paths",
    "p",
    "installedChunks",
    "chunkId",
    "webpackJsonpCallback",
    "parentChunkLoadingFunction",
    "moreModules",
    "runtime",
    "chunkLoadingGlobal",
    "self",
    "bind",
    "__webpack_exports__"
  ],
  "sourceRoot": ""
}
